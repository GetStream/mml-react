(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{"7OsV":function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return l})),a.d(t,"default",(function(){return m}));var n=a("Fcif"),r=a("+I+c"),c=(a("mXGw"),a("/FXl")),o=a("TjRS"),l=(a("aD51"),{});void 0!==l&&l&&l===Object(l)&&Object.isExtensible(l)&&!l.hasOwnProperty("__filemeta")&&Object.defineProperty(l,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"README.md"}});var b={_frontmatter:l},i=o.a;function m(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(c.b)(i,Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h1",{id:"mml-for-react"},"MML for React"),Object(c.b)("h2",{id:"todo"},"TODO"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"fix stream-chat-react build issues (done)"),Object(c.b)("li",{parentName:"ul"},"functional components with hooks (done)"),Object(c.b)("li",{parentName:"ul"},"use a context to share stuff to lower level components (done)"),Object(c.b)("li",{parentName:"ul"},"toReact should be defined at the tree level and allow you to overwrite the mappings (done)"),Object(c.b)("li",{parentName:"ul"},"make mml in stream chat react a singleton type of pattern (done)"),Object(c.b)("li",{parentName:"ul"},"refactor how state is handled for date picker element and number element (done)"),Object(c.b)("li",{parentName:"ul"},"move the converterConfig for react into it's own file (done)"),Object(c.b)("li",{parentName:"ul"},"prop types for all react tags (done)"),Object(c.b)("li",{parentName:"ul"},"cleanup all linting errors (done)"),Object(c.b)("li",{parentName:"ul"},"styleguidist for all react tags (done)"),Object(c.b)("li",{parentName:"ul"},"move all tags into shared files (done)"),Object(c.b)("li",{parentName:"ul"},"Document how to create a new tag (done)"),Object(c.b)("li",{parentName:"ul"},"styleguidist publish flow (done)"),Object(c.b)("li",{parentName:"ul"},"convert date string into date object for add to calendar (done)"),Object(c.b)("li",{parentName:"ul"},"Refine examples for docs and example project (done)"),Object(c.b)("li",{parentName:"ul"},"Write Docs in stream CMS (done)"),Object(c.b)("li",{parentName:"ul"},"Add alt and title support to image tags (done)"),Object(c.b)("li",{parentName:"ul"},"Review the button tag (done)"),Object(c.b)("li",{parentName:"ul"},"Fix MML & MML Container state management (done)"),Object(c.b)("li",{parentName:"ul"},"ship a 0.1 release on NPM (done)"),Object(c.b)("li",{parentName:"ul"},"ship stream-chat-react support for MML (mml2 branch, ready)"),Object(c.b)("li",{parentName:"ul"},"figure out proptype weirdness (getting some validation errors on valid input)"),Object(c.b)("li",{parentName:"ul"},"document how to overwrite 1 specific component for MML (done)"),Object(c.b)("li",{parentName:"ul"},"Button/URL verify it works (done)")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"scheduler component"),Object(c.b)("li",{parentName:"ul"},"implement hard failure on invalid MML")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"clean Git history"),Object(c.b)("li",{parentName:"ul"},"tests & coverage reporting"),Object(c.b)("li",{parentName:"ul"},"CSS for all components"),Object(c.b)("li",{parentName:"ul"},"consider renaming column tag, consider if we need a table tag..?")),Object(c.b)("h3",{id:"design"},"Design"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Add to Calendar element is missing"),Object(c.b)("li",{parentName:"ul"},"Loading, Success and Error states")),Object(c.b)("h2",{id:"install"},"Install"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"git clone https://github.com/GetStream/mml-react.git\ncd mml-react\nyarn; yarn start\n")),Object(c.b)("p",null,"and in a new terminal do:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-bash"}),"cd example\nyarn; yarn start\n")),Object(c.b)("h2",{id:"usage"},"Usage"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"import { MML } from 'mml-react';\n\n// use the react component\n<MML source={mml} />;\n")),Object(c.b)("h2",{id:"overwriting-components"},"Overwriting Components"),Object(c.b)("p",null,"Making basic changes to the components is quite easy.\nHere's an example of how to overwrite the button tag's React component:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import { converters } from 'mml-react'\nconst config = {...converters}\nconfig['button'] = (tag, children) => {\n  return <MyCustomButton text={tag.getText()} {...tag.node.attributes} key={tag.key} />\n}\n<MML converters={config} source={source} />\n")),Object(c.b)("p",null,"This approach is generally only recommended for small changes.\nIn most cases where you need more features than MML offers we recommend writing a custom attachment type."),Object(c.b)("h2",{id:"development--contributions"},"Development & Contributions"),Object(c.b)("p",null,"We are intentionally keeping the scope of MML limited.\nIt should solve 80% of your needs for interactive messages.\nWe can't support every scenario though, if you need something more complex you can always implement your own attachment type."),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"yarn lint")," to run linting"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"yarn prettier")," to prettify things"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("inlineCode",{parentName:"li"},"yarn test")," to run tests")),Object(c.b)("p",null,Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"https://getstream.github.io/mml-react/"}),"StyleGuidist docs")," are available"),Object(c.b)("h2",{id:"understanding-the-parser"},"Understanding the Parser"),Object(c.b)("ol",null,Object(c.b)("li",{parentName:"ol"},"SourceToXML turns an MML string into a XML node structure"),Object(c.b)("li",{parentName:"ol"},"XMLtoMMLTree converts the XML nodes to a tree of MML nodes (MMLTree)"),Object(c.b)("li",{parentName:"ol"},"MML nodes can be converted to React nodes using their ToReact method"),Object(c.b)("li",{parentName:"ol"},"The MML react component handles these steps automatically")),Object(c.b)("h2",{id:"tree"},"Tree"),Object(c.b)("p",null,"The tree knows:"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"The name of the MML tag (needed for form logic)"),Object(c.b)("li",{parentName:"ul"},"If there are data tags"),Object(c.b)("li",{parentName:"ul"},"The initial state for the data tags")),Object(c.b)("h2",{id:"naming"},"Naming"),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},"Tree: The tree of MML tags"),Object(c.b)("li",{parentName:"ul"},"Tag: Intermediate class used for validating MML tags"),Object(c.b)("li",{parentName:"ul"},"Converters: Mapping from MML tag to React Component (React Native coming later)")),Object(c.b)("h2",{id:"how-to-create-a-new-tag"},"How to create a new tag"),Object(c.b)("p",null,"As an example let's say you want to create a new tag called ",Object(c.b)("inlineCode",{parentName:"p"},"color_picker"),".\nHere's how you would go about implementing it."),Object(c.b)("h3",{id:"step-1---tag"},"Step 1 - Tag"),Object(c.b)("p",null,"Add something like this to src/tags/data.js"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"export class ColorPicker extends MMLDataTag {\n  initialState() {\n    const data = {};\n    data[this.node.attributes.name] = this.node.attributes.value;\n    return data;\n  }\n}\n")),Object(c.b)("h3",{id:"step-2---tag-parser"},"Step 2 - Tag parser"),Object(c.b)("p",null,"Open ",Object(c.b)("inlineCode",{parentName:"p"},"src/tags/index.js")," and add this to tags variable:"),Object(c.b)("p",null,"tags = {\n...\ncolor_picker: ColorPicker,\n...\n}"),Object(c.b)("h3",{id:"step-3---react-node"},"Step 3 - React node"),Object(c.b)("p",null,"In ",Object(c.b)("inlineCode",{parentName:"p"},"src/components")," create a file called ColorPicker.js and do something along these lines:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"export function ColorPicker({ name, ...props }) {\n  const mmlContext = useContext(MMLContext);\n\n  const value = mmlContext[name];\n\n  return <input value={value} onChange={(event) => mmlContext.setValue(name, event.target.value)} />;\n}\n")),Object(c.b)("p",null,"Styleguidist is the easiest way to test your react component in isolation.\nThe MMLContainer provides the right context so you can test it like:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"<MMLContainer>\n  <ColorPicker />\n</MMLContainer>\n")),Object(c.b)("h3",{id:"step-4---converter"},"Step 4 - Converter"),Object(c.b)("p",null,"Open ",Object(c.b)("inlineCode",{parentName:"p"},"src/converters.js")," and add something like this:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-jsx"}),"color_picker: tag => {\n  return <ColorPicker {...tag.node.attributes} />\n},\n")),Object(c.b)("p",null,"And that's it"),Object(c.b)("h2",{id:"components"},"Components"),Object(c.b)("p",null,"MML React components could be divided in four categories:"),Object(c.b)("h3",{id:"naked-components"},"Naked Components"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Very basic pieces of UI typically beyond a matter of styling")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/row"}),Object(c.b)("inlineCode",{parentName:"a"},"Row"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/col"}),Object(c.b)("inlineCode",{parentName:"a"},"Col")))),Object(c.b)("h3",{id:"container-components"},"Container Components"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Always host other components, can be themable")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/card"}),Object(c.b)("inlineCode",{parentName:"a"},"Card"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/card-header"}),Object(c.b)("inlineCode",{parentName:"a"},"CardHeader"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/card-body"}),Object(c.b)("inlineCode",{parentName:"a"},"CardBody")))),Object(c.b)("h3",{id:"core-components"},"Core Components"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"Basic components that can be composed and themed")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/text"}),Object(c.b)("inlineCode",{parentName:"a"},"Text")),": a block of text"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/button"}),Object(c.b)("inlineCode",{parentName:"a"},"Button")),":"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/image"}),Object(c.b)("inlineCode",{parentName:"a"},"Image")),": a simple responsive image"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/input"}),Object(c.b)("inlineCode",{parentName:"a"},"Input")),": an input field"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/md"}),Object(c.b)("inlineCode",{parentName:"a"},"MD")),": renders markdown"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/icon"}),Object(c.b)("inlineCode",{parentName:"a"},"Icon")),": simply displays an ico from material design icons"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/loader"}),"Loader"),": signals a ",Object(c.b)("em",{parentName:"li"},"loading")," temporary state with a circular spinner"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/error"}),Object(c.b)("inlineCode",{parentName:"a"},"Error")),": display an ",Object(c.b)("em",{parentName:"li"},"error")," message"),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/success"}),Object(c.b)("inlineCode",{parentName:"a"},"Success")),": display a ",Object(c.b)("em",{parentName:"li"},"success")," message")),Object(c.b)("h3",{id:"structured-components"},"Structured Components"),Object(c.b)("blockquote",null,Object(c.b)("p",{parentName:"blockquote"},"More complex components composed of other components, certainly themable")),Object(c.b)("ul",null,Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/add-to-calendar"}),Object(c.b)("inlineCode",{parentName:"a"},"AddToCalendar")),": wrapped in a ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/card"}),Object(c.b)("inlineCode",{parentName:"a"},"Card"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/scheduler"}),Object(c.b)("inlineCode",{parentName:"a"},"Scheduler")),": wrapped in a ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/card"}),Object(c.b)("inlineCode",{parentName:"a"},"Card"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/button-list"}),Object(c.b)("inlineCode",{parentName:"a"},"ButtonList")),": a list of ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/button"}),Object(c.b)("inlineCode",{parentName:"a"},"Button"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/carousel"}),Object(c.b)("inlineCode",{parentName:"a"},"Carousel")),": a series of ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/carousel-item"}),Object(c.b)("inlineCode",{parentName:"a"},"CarouselItem"))," typically containing ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/image"}),Object(c.b)("inlineCode",{parentName:"a"},"Image")),", ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/text"}),Object(c.b)("inlineCode",{parentName:"a"},"Text"))," and ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/button"}),Object(c.b)("inlineCode",{parentName:"a"},"Button"))),Object(c.b)("li",{parentName:"ul"},Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/number"}),Object(c.b)("inlineCode",{parentName:"a"},"Number")),": input spinner composed of two ",Object(c.b)("a",Object(n.a)({parentName:"li"},{href:"/mml-react/components/button"}),Object(c.b)("inlineCode",{parentName:"a"},"Button"))," and a counter")),Object(c.b)("h2",{id:"styles-customization"},"Styles customization"),Object(c.b)("p",null,"MML react ships with a basic ",Object(c.b)("inlineCode",{parentName:"p"},"index.css")," which contains a default basic styles for all ",Object(c.b)("a",Object(n.a)({parentName:"p"},{href:"#components"}),"MML Components")),Object(c.b)("h3",{id:"scss-variables"},"SCSS variables"),Object(c.b)("p",null,"If your projects include a ",Object(c.b)("inlineCode",{parentName:"p"},"sass")," compilation step you might customize the overall look and feel of the component through ",Object(c.b)("inlineCode",{parentName:"p"},"scss")," variables, here are all the available ones with their default values:"),Object(c.b)("pre",null,Object(c.b)("code",Object(n.a)({parentName:"pre"},{className:"language-scss"}),"$mml-card-bg: $mml-bg;\n$mml-card--dark-bg: $mml--dark-bg;\n$mml-card-header-font-size: 13px;\n$mml-card-header-padding-y: 13px;\n$mml-card-header-padding-x: 13px;\n$mml-card-header-opacity: 0.3;\n$mml-card-header-bg: mml-color(grey-800-full);\n$mml-card-header-color: mml-color(black);\n$mml-card-header--dark-opacity: 0.7;\n$mml-card-header--dark-bg: mml-color(grey-200);\n$mml-card-header--dark-color: mml-color(white);\n$mml-card-body-font-size: 14px;\n$mml-card-body-color: mml-color(black);\n$mml-card-body--dark-color: mml-color(white);\n")))}void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"README.md"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=component---readme-md-327d07ec58603abcd857.js.map