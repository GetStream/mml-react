(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{vOLo:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return c})),n.d(t,"default",(function(){return s}));var o=n("Fcif"),a=n("+I+c"),m=(n("mXGw"),n("/FXl")),u=n("TjRS"),r=n("ZFoC"),l=n("IAQ8"),c=(n("aD51"),{});void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/mml/MML.mdx"}});var i={_frontmatter:c},b=u.a;function s(e){var t,n,s,p,d,y,f,_=e.components,h=Object(a.a)(e,["components"]);return Object(m.b)(b,Object(o.a)({},i,h,{components:_,mdxType:"MDXLayout"}),Object(m.b)("h1",{id:"mml"},"MML"),Object(m.b)("p",null,"This component accepts a mml string and render it as react components."),Object(m.b)("p",null,"If there are any stateful tag, it will gather all the inital states and and expose them in ",Object(m.b)("a",Object(o.a)({parentName:"p"},{href:"/mml-react/mml-context"}),Object(m.b)("inlineCode",{parentName:"a"},"MMLContext")),"."),Object(m.b)("p",null,"It also accepts custom convertor which allows you to exapand the default tags and add more compoennts."),Object(m.b)("h2",{id:"properties"},"Properties"),Object(m.b)(r.d,{of:l.a,mdxType:"Props"}),Object(m.b)("h2",{id:"basic-usage"},"Basic usage"),Object(m.b)(r.c,{__position:1,__code:'<MML source="<mml>hi</mml>" />',__scope:(t={props:h,DefaultLayout:u.a,Playground:r.c,Props:r.d,MML:l.a},t.DefaultLayout=u.a,t._frontmatter=c,t),mdxType:"Playground"},Object(m.b)(l.a,{source:"<mml>hi</mml>",mdxType:"MML"})),Object(m.b)("h2",{id:"basic-usage-with-stateful-components"},"Basic usage with stateful components"),Object(m.b)(r.c,{__position:2,__code:'<MML\n  source={`\n    <mml name="windows_form" type="card">\n      <image src="https://getstream.github.io/mml-react/public/window.jpg" />\n      <number name="windows" value="12" />\n      <button name="confirm" value="Confirm">Confirm</button>\n    </mml>\n  `}\n/>',__scope:(n={props:h,DefaultLayout:u.a,Playground:r.c,Props:r.d,MML:l.a},n.DefaultLayout=u.a,n._frontmatter=c,n),mdxType:"Playground"},Object(m.b)(l.a,{source:'\n      <mml name="windows_form" type="card">\n        <image src="https://getstream.github.io/mml-react/public/window.jpg" />\n        <number name="windows" value="12" />\n        <button name="confirm" value="Confirm">Confirm</button>\n      </mml>\n    ',mdxType:"MML"})),Object(m.b)("h2",{id:"callback-support"},"Callback support"),Object(m.b)("p",null,"If onSubmit callback return a promise, it will be awaited."),Object(m.b)(r.c,{__position:3,__code:'<MML\n  onSubmit={data => console.info(data)}\n  source={`\n    <mml type="card">\n      <input name="answer" label="Enter your phone number" placeholder="e.g. 999-999-9999"></input>\n      <button name="action" value="submit">Submit</button>\n    </mml>\n  `}\n/>',__scope:(s={props:h,DefaultLayout:u.a,Playground:r.c,Props:r.d,MML:l.a},s.DefaultLayout=u.a,s._frontmatter=c,s),mdxType:"Playground"},Object(m.b)(l.a,{onSubmit:function(e){return console.info(e)},source:'\n      <mml type="card">\n        <input name="answer" label="Enter your phone number" placeholder="e.g. 999-999-9999"></input>\n        <button name="action" value="submit">Submit</button>\n      </mml>\n    ',mdxType:"MML"})),Object(m.b)("h2",{id:"different-use-cases"},"Different use cases"),Object(m.b)(r.c,{__position:4,__code:'<MML\n  source={`\n    <mml>\n      <text>Hi Jack, I\'m painting John\'s house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\n      <button_list>\n        <button name="time" value="9:30">9:30</button>\n        <button name="time" value="10:00">10:00</button>\n        <button name="time" value="11:30">11:30</button>\n        <button name="cancel" value="cancel">Cancel</button>\n      </button_list>\n    </mml>\n  `}\n/>',__scope:(p={props:h,DefaultLayout:u.a,Playground:r.c,Props:r.d,MML:l.a},p.DefaultLayout=u.a,p._frontmatter=c,p),mdxType:"Playground"},Object(m.b)(l.a,{source:'\n      <mml>\n        <text>Hi Jack, I\'m painting John\'s house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\n        <button_list>\n          <button name="time" value="9:30">9:30</button>\n          <button name="time" value="10:00">10:00</button>\n          <button name="time" value="11:30">11:30</button>\n          <button name="cancel" value="cancel">Cancel</button>\n        </button_list>\n      </mml>\n    ',mdxType:"MML"})),Object(m.b)("h3",{id:""}),Object(m.b)(r.c,{__position:5,__code:'<MML\n  source={`\n    <mml>\n      <text>Hi Jack, I\'m painting John\'s house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\n      <button_list>\n        <button name="time" value="9:30">9:30</button>\n        <button name="time" value="10:00">10:00</button>\n        <button name="time" value="11:30">11:30</button>\n        <button name="cancel" value="cancel">Cancel</button>\n      </button_list>\n    </mml>\n  `}\n/>',__scope:(d={props:h,DefaultLayout:u.a,Playground:r.c,Props:r.d,MML:l.a},d.DefaultLayout=u.a,d._frontmatter=c,d),mdxType:"Playground"},Object(m.b)(l.a,{source:'\n      <mml>\n        <text>Hi Jack, I\'m painting John\'s house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\n        <button_list>\n          <button name="time" value="9:30">9:30</button>\n          <button name="time" value="10:00">10:00</button>\n          <button name="time" value="11:30">11:30</button>\n          <button name="cancel" value="cancel">Cancel</button>\n        </button_list>\n      </mml>\n    ',mdxType:"MML"})),Object(m.b)("h2",{id:"invalid-mml-string"},"Invalid MML string"),Object(m.b)("p",null,"In case of an error, you can override default Error component"),Object(m.b)(r.c,{__position:6,__code:"<MML\n  source=\"<mml><invalid /></mml>\"\n  Error={({ error }) => <div style={{ color: 'red' }}>{error}</div>}\n/>",__scope:(y={props:h,DefaultLayout:u.a,Playground:r.c,Props:r.d,MML:l.a},y.DefaultLayout=u.a,y._frontmatter=c,y),mdxType:"Playground"},Object(m.b)(l.a,{source:"<mml><invalid /></mml>",Error:function(e){var t=e.error;return Object(m.b)("div",{style:{color:"red"}},t)},mdxType:"MML"})),Object(m.b)("h2",{id:"with-card-type"},"With ",Object(m.b)("inlineCode",{parentName:"h2"},"card")," type"),Object(m.b)("p",null,"Shows the mml content inside a card like UI, see the ",Object(m.b)("a",Object(o.a)({parentName:"p"},{href:"/mml-react/components/number"}),Object(m.b)("inlineCode",{parentName:"a"},"Number")," component usage")," as a further example. It automatically wraps the mml components in a ",Object(m.b)("inlineCode",{parentName:"p"},'<div class="mml-card">...</div>'),"."),Object(m.b)(r.c,{__position:7,__code:'<MML\n  source={`\n    <mml type="card">\n      <input name="answer" label="Enter your phone number" placeholder="e.g. 999-999-9999"></input>\n      <button name="action" value="submit">Submit</button>\n    </mml>\n  `}\n/>',__scope:(f={props:h,DefaultLayout:u.a,Playground:r.c,Props:r.d,MML:l.a},f.DefaultLayout=u.a,f._frontmatter=c,f),mdxType:"Playground"},Object(m.b)(l.a,{source:'\n      <mml type="card">\n        <input name="answer" label="Enter your phone number" placeholder="e.g. 999-999-9999"></input>\n        <button name="action" value="submit">Submit</button>\n      </mml>\n    ',mdxType:"MML"})))}void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/mml/MML.mdx"}}),s.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-mml-mml-mdx-39b0dac3c44cbba398c9.js.map