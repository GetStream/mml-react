{"version":3,"sources":["webpack:///../src/components/ButtonList.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","ButtonList","__position","__code","__scope","Playground","Props","name","value","variant","isMDXComponent"],"mappings":"+QAUaA,G,UAAe,S,+MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,cADR,cAGA,gKAA+I,6BAAGC,WAAW,KAAQ,CACjK,KAAQ,iCACP,0BAAYA,WAAW,KAAvB,YACL,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAYH,QAAQ,UAC/B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,0LAAmMC,SAAO,GAC3OP,QACAH,kBACAW,eACAC,UACAL,gBAL2O,gBAM3OP,IAN2O,EAO3OH,eAP2O,GAQ1OO,QAAQ,cACb,uBACE,+BACE,sBAAQS,KAAK,OAAOC,MAAM,OAA1B,QAGA,sBAAQD,KAAK,OAAOC,MAAM,MAA1B,iBAMF,iBAAQ,CACN,GAAM,yBADR,QAEY,0BAAYT,WAAW,MAAvB,YAFZ,YAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,mPAAkQC,SAAO,GAC1SP,QACAH,kBACAW,eACAC,UACAL,gBAL0S,gBAM1SP,IAN0S,EAO1SH,eAP0S,GAQzSO,QAAQ,cACb,uBACE,2BAAaW,QAAQ,YACnB,sBAAQA,QAAQ,WAAWF,KAAK,OAAOC,MAAM,OAA7C,QAGA,sBAAQC,QAAQ,WAAWF,KAAK,OAAOC,MAAM,MAA7C,uB,6MAoCNb,EAAWe,gBAAiB","file":"component---src-components-button-list-mdx-4cb28404d61689bb906f.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/mml-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { ButtonList } from './ButtonList.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"buttonlist\"\n    }}>{`ButtonList`}</h1>\n    <p>{`Display a list of buttons, a tyical usecase is allowing the user to select an option among a list. It is usually used in pair with some `}<a parentName=\"p\" {...{\n        \"href\": \"/mml-react/components/button\"\n      }}><inlineCode parentName=\"a\">{`Button`}</inlineCode></a></p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={ButtonList} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<mml>\\n  <button_list>\\n    <button name=\\\"side\\\" value=\\\"yes\\\">\\n      Yes!\\n    </button>\\n    <button name=\\\"side\\\" value=\\\"no\\\">\\n      No, thanks\\n    </button>\\n  </button_list>\\n</mml>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ButtonList,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <mml>\n    <button_list>\n      <button name=\"side\" value=\"yes\">\n        Yes!\n      </button>\n      <button name=\"side\" value=\"no\">\n        No, thanks\n      </button>\n    </button_list>\n  </mml>\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-floating-variant\"\n    }}>{`With `}<inlineCode parentName=\"h2\">{`floating`}</inlineCode>{` variant`}</h2>\n    <Playground __position={2} __code={'<mml>\\n  <button_list variant=\\\"floating\\\">\\n    <button variant=\\\"floating\\\" name=\\\"side\\\" value=\\\"yes\\\">\\n      Yes!\\n    </button>\\n    <button variant=\\\"floating\\\" name=\\\"side\\\" value=\\\"no\\\">\\n      No, thanks\\n    </button>\\n  </button_list>\\n</mml>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      ButtonList,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <mml>\n    <button_list variant=\"floating\">\n      <button variant=\"floating\" name=\"side\" value=\"yes\">\n        Yes!\n      </button>\n      <button variant=\"floating\" name=\"side\" value=\"no\">\n        No, thanks\n      </button>\n    </button_list>\n  </mml>\n    </Playground>\n    {\n      /*\n      ## MML string\n      ```xml\n      <mml>\n       <button_list>\n         <button name=\"side\" value=\"yes\">Yes!</button>\n         <button name=\"side\" value=\"no\">No, thanks</button>\n       </button_list>\n      </mml>\n      ```\n      <Playground>\n       <ButtonList>\n         <Button text=\"Yes!\" name=\"side\" value=\"yes\" />\n         <Button text=\"No, thanks\" name=\"side\" value=\"no\" />\n       </ButtonList>\n      </Playground>\n      ## With `floating` variant\n      <Playground>\n       <ButtonList variant=\"floating\">\n         <Button variant=\"floating\" text=\"Yes!\" name=\"side\" value=\"yes\" />\n         <Button variant=\"floating\" text=\"No, thanks\" name=\"side\" value=\"no\" />\n       </ButtonList>\n      </Playground>\n      */\n    }\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}