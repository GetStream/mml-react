{"version":3,"sources":["webpack:///../src/components/Loader.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Loader","__position","__code","__scope","Playground","Props","loading","text","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,2MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,sLAAqK,0BAAYC,WAAW,KAAvB,gBAArK,qDACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAQH,QAAQ,UAC3B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,4BAA6BC,SAAO,GACrEP,QACAH,kBACAW,eACAC,UACAL,YALqE,gBAMrEP,IANqE,EAOrEH,eAPqE,GAQpEO,QAAQ,cACb,YAAC,IAAD,CAAQS,SAAS,EAAMT,QAAQ,YAE7B,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,kDAAqDC,SAAO,GAC7FP,QACAH,kBACAW,eACAC,UACAL,YAL6F,gBAM7FP,IAN6F,EAO7FH,eAP6F,GAQ5FO,QAAQ,cACb,YAAC,IAAD,CAAQS,SAAS,EAAMC,KAAK,iBAAiBV,QAAQ,YAEnD,iBAAQ,CACN,GAAM,uBADR,uBAGA,2EAA0D,0BAAYC,WAAW,KAAvB,SAA1D,iCAA6I,kBAAIA,WAAW,KAAf,mBAA7I,SAAkM,0BAAYA,WAAW,KAAvB,YAAlM,UAAiQ,0BAAYA,WAAW,KAAvB,OAAjQ,IAAqT,0BAAYA,WAAW,KAAvB,QAArT,mCAAyY,kBAAIA,WAAW,KAAf,yBAAzY,0GACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,0DAOL,iBAAQ,CACN,GAAM,kBADR,kBAGA,mDAAkC,0BAAYA,WAAW,KAAvB,QAAlC,4FAA+K,0BAAYA,WAAW,KAAvB,QAA/K,0EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,2U,yMAiBTJ,EAAWc,gBAAiB","file":"component---src-components-loader-mdx-2c1bf202b6074654424c.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/mml-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Loader } from './Loader.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"loader\"\n    }}>{`Loader`}</h1>\n    <p>{`Loader simply indicates a loading/pending state, you can use it to manage users expectations during async behaviours or waiting times. Internally it uses the `}<inlineCode parentName=\"p\">{`<Progress />`}</inlineCode>{` component to show a circular progress indicator.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Loader} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Loader loading={true} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Loader,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Loader loading={true} mdxType=\"Loader\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-text\"\n    }}>{`With text`}</h2>\n    <Playground __position={2} __code={'<Loader loading={true} text=\\\"Please wait...\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Loader,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Loader loading={true} text=\"Please wait...\" mdxType=\"Loader\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"style-customization\"\n    }}>{`Style customization`}</h2>\n    <p>{`The progress indicator can be configured either by `}<inlineCode parentName=\"p\">{`props`}</inlineCode>{` when you want to customize a `}<em parentName=\"p\">{`single instance`}</em>{` of a `}<inlineCode parentName=\"p\">{`<loader>`}</inlineCode>{` or in `}<inlineCode parentName=\"p\">{`css`}</inlineCode>{`/`}<inlineCode parentName=\"p\">{`scss`}</inlineCode>{` when you want to customize the `}<em parentName=\"p\">{`overall look and feel`}</em>{` of the component. For example if you want to change the progress size you can either have a css like:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-css\"\n      }}>{`.mml-progress {\n  width: 18px;\n  height: 18px;\n}\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"scss-variables\"\n    }}>{`SCSS variables`}</h3>\n    <p>{`If your projects include a `}<inlineCode parentName=\"p\">{`sass`}</inlineCode>{` compilation step you might customize the overall look and feel of the component through `}<inlineCode parentName=\"p\">{`scss`}</inlineCode>{` variables, here are all the available ones with their default values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// Loader:\n$mml-loader-spacer: $mml-spacer;\n$mml-loader-font-size: 88%;\n\n// Progress:\n$mml-progress-width: 1em;\n$mml-progress-color: #bbb;\n$mml-progress-animation-name: mml-animation-dash; // mml-animation-rotate is also available\n$mml-progress-animation-time: 1.4s;\n$mml-progress-animation-ease: ease-in-out;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}