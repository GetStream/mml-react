{"version":3,"sources":["webpack:///../node_modules/ical.js/build/ical.js"],"names":["OPTIONS","zones","TimezoneService","ICAL","module","exports","foldLength","newLineChar","helpers","updateTimezones","vcal","allsubs","properties","vtimezones","reqTzid","i","tzid","name","getAllSubcomponents","length","getFirstProperty","getFirstValue","concat","getAllProperties","getParameter","hasOwnProperty","removeSubcomponent","has","addSubcomponent","get","component","isStrictlyNaN","number","isNaN","strictParseInt","string","result","parseInt","Error","formatClassType","data","type","unescapedIndexOf","buffer","search","pos","indexOf","binsearchInsert","list","seekVal","cmpfunc","mid","cmpval","low","high","Math","floor","dumpn","debug","console","input","log","dump","arguments","clone","aSrc","aDeep","Date","getTime","Array","isArray","arr","push","obj","Object","prototype","call","foldline","aLine","line","substr","pad2","String","trunc","ceil","inherits","base","child","extra","F","extend","source","target","key","descr","getOwnPropertyDescriptor","defineProperty","design","FROM_VCARD_NEWLINE","TO_VCARD_NEWLINE","createTextType","fromNewline","toNewline","matches","fromICAL","aValue","structuredEscape","value","newline","RegExp","replace","replaceNewlineReplace","replaceNewline","toICAL","regEx","str","DEFAULT_TYPE_TEXT","defaultType","DEFAULT_TYPE_TEXT_MULTI","multiValue","DEFAULT_TYPE_TEXT_STRUCTURED","structuredValue","DEFAULT_TYPE_INTEGER","DEFAULT_TYPE_DATETIME_DATE","allowedTypes","DEFAULT_TYPE_DATETIME","DEFAULT_TYPE_URI","DEFAULT_TYPE_UTCOFFSET","DEFAULT_TYPE_RECUR","DEFAULT_TYPE_DATE_ANDOR_TIME","commonProperties","commonValues","values","float","parsed","parseFloat","integer","decorate","UtcOffset","fromString","undecorate","toString","icalValues","text","uri","aString","Binary","aBinary","aProp","strict","Time","fromDateString","len","date","fromDateTimeString","duration","Duration","period","parts","split","isValueString","join","Period","fromJSON","toJSON","recur","Recur","_stringToData","k","val","numericDayToIcalDay","toUpperCase","fromData","aRecur","time","icalProperties","detectType","vcardValues","VCardTime","fromDateAndOrTimeString","splitzone","_splitZone","zone","isFromIcal","lastChar","signChar","sign","timestamp","vcardProperties","vcard3Values","binary","vcard","vcard3Properties","fn","n","nickname","photo","bday","adr","label","tel","email","mailer","tz","geo","title","role","logo","agent","org","note","prodid","rev","sound","class","icalSet","param","allowXName","allowIanaToken","valueType","multiValueSeparateDQuote","property","vcardSet","vcard3Set","defaultSet","components","vcard3","vevent","vtodo","vjournal","valarm","vtimezone","daylight","standard","icalendar","getDesignSet","componentName","stringify","jCal","designSet","props","propIdx","propLen","designSetName","comps","compIdx","compLen","noFold","paramName","jsName","params","map","_rfc6868Unescape","propertyValue","propDetails","isDefault","slice","delim","innerMulti","x","RFC6868_REPLACE_MAP","parse","CHAR","ParserError","message","this","e","stack","shift","parser","state","root","_eachLine","err","_handleContentLine","lastParamIndex","lastValuePos","parsedParams","valuePos","paramPos","substring","toLowerCase","_parseParameters","newComponent","pop","propertyDetails","_parseMultiValue","_parseValue","start","lcname","mvdelim","lastParam","_rfc6868Escape","extendedValue","nextPos","propValuePos","delimiter","lastPos","callback","firstChar","newlineOffset","trim","Component","parent","_hydratedPropertyCount","_hydratedComponentCount","_designSet","_hydrateComponent","index","_components","comp","_hydrateProperty","_properties","prop","Property","getFirstSubcomponent","jCalLen","hasProperty","getFirstPropertyValue","_removeObjectByIndex","jCalIndex","cache","splice","_removeObject","nameOrObject","objects","cached","_removeAllObjects","idx","nameOrComp","removed","removeAllSubcomponents","addProperty","TypeError","removeProperty","addPropertyWithValue","setValue","updatePropertyWithValue","nameOrProp","removeAllProperties","_parent","getDefaultType","_updateType","p","designSetChanged","isDecorated","isMultiValue","isStructuredValue","_hydrateValue","_values","_decorate","_undecorate","_setDecoratedValue","getFirstParameter","parameters","setParameter","removeParameter","details","resetType","removeAllValues","getValues","setValues","icaltype","toICALString","aData","hours","minutes","factor","fromSeconds","toSeconds","_normalize","aSeconds","secs","abs","compare","other","a","b","options","instance","decodeValue","_b64_decode","setEncodedValue","_b64_encode","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","o1","o2","o3","fromCharCode","wrappedJSObject","end","icalclass","getDuration","subtractDate","getEnd","addDuration","aLenient","fromDateOrDateTimeString","DURATION_LETTERS","parseDurationChunk","letter","object","isNegative","num","weeks","days","seconds","propsToCopy","reset","aOther","thisSeconds","otherSeconds","normalize","aStr","dict","create","chunks","numeric","Timezone","location","tznames","latitude","longitude","expandedUntilYear","changes","utcOffset","tt","utcTimezone","localTimezone","_ensureCoverage","year","tt_change","month","day","hour","minute","second","change_num","_findNearbyChange","change_num_to_use","step","change","prevUtcOffset","adjust_change","_compare_change_fn","zone_change","tmp_change","prev_zone_change","is_daylight","aYear","_minimumExpansionYear","today","now","changesEndYear","EXTRA_COVERAGE","MAX_YEAR","subcomps","_expandComponent","sort","aComponent","dtstart","convert_tzoffset","offset","init_changes","changebase","rdatekey","isDate","rrule","until","adjust","occ","iterator","next","convert_time","from_zone","to_zone","keys","utc","Z","UTC","GMT","register","timezone","remove","_time","_dowCache","_wnCache","_cachedUnixTime","_pendingNormalization","epochTime","resetTo","fromJSDate","aDate","useUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","aZone","dayOfWeek","aWeekStart","firstDow","SUNDAY","dowCacheKey","q","m","Y","h","dayOfYear","is_leap","isLeapYear","daysInYearPassedMonth","startOfWeek","endOfWeek","startOfMonth","endOfMonth","daysInMonth","startOfYear","endOfYear","startDoyWeek","aFirstDayOfWeek","delta","getDominicalLetter","nthWeekDay","aDayOfWeek","aPos","weekday","otherDay","isNthWeekDay","dow","weekNumber","week1","wnCacheKey","dt","isoyear","weekOneStarts","daysBetween","answer","aDuration","mult","unixTime","toUnixTime","subtractDateTz","compareDateOnlyTz","cmp","attr","_cmp_attr","convertToZone","rc","copy","zone_equals","toJSDate","aExtraDays","aExtraHours","aExtraMinutes","aExtraSeconds","aTime","minutesOverflow","hoursOverflow","daysOverflow","yearsOverflow","fromUnixTime","epoch","ms","defineAttr","set","fromDayOfYear","aDayOfYear","doy","auto_normalize","fromStringv2","aProperty","t","wkst","DEFAULT_WEEK_START","THURSDAY","yr","dom","MONDAY","TUESDAY","WEDNESDAY","FRIDAY","SATURDAY","apply","p2","y","d","mm","s","hasMonth","hasDay","hasHour","hasMinute","hasSecond","datepart","timepart","aIcalType","part","v","tmz","tm","dtlen","tmlen","hasDashDate","hasDashTime","o","DOW_MAP","SU","MO","TU","WE","TH","FR","SA","REVERSE_DOW_MAP","parseNumericValue","min","max","undefined","interval","count","freq","aStart","RecurIterator","rule","isFinite","isByCount","addComponent","aType","ucname","setComponent","aValues","getComponent","getNextOccurrence","aStartTime","aRecurrenceId","iter","uckey","partDesign","optionDesign","INTERVAL","icalDayToNumericDay","res","kparts","VALID_DAY_NAMES","VALID_BYDAY_PART","ALLOWED_FREQ","FREQ","fmtIcal","COUNT","UNTIL","WKST","test","BYSECOND","bind","BYMINUTE","BYHOUR","BYDAY","BYMONTHDAY","BYYEARDAY","BYWEEKNO","BYMONTH","BYSETPOS","partArr","partArrIdx","partArrLen","icalrecur_iterator","completed","last","occurrence_number","by_indices","initialized","by_data","days_index","init","sort_byday_rules","setup_defaults","bydayParts","ruleDayOfWeek","wkdy","dayName","expand_year_days","increment_year","_nextByYearDay","has_by_data","tempLast","initLast","dayOfMonth","increment_month","_byDayAndMonthDay","valid","before","next_second","next_minute","next_hour","next_day","next_week","next_month","next_year","check_contracting_rules","next_generic","increment_second","inc","increment_generic","increment_minute","increment_hour","this_freq","increment_monthday","end_of_data","next_weekday_by_week","week_no","normalizeByMonthDayRules","rules","newRules","ruleIdx","isInit","byMonthDay","dateLen","byDay","dateIdx","dayLen","dataIsValid","self","lastDay","initMonth","nextMonth","monthsCounter","dayIdx","data_valid","setpos","setpos_total","last_day","is_day_in_byday","check_set_position","coded_day","match","aRuleType","aInterval","aDateAttr","aFollowingAttr","aPreviousIncr","has_by_rule","dta","years","aFactor","aNextIncrement","nextunit","validWeeks","monthIdx","first_week","last_week","weekIdx","weekno","partCount","t1","monthkey","t2","monthdaykey","t3","day_","month_","expand_by_day","first_dow","doy_offset","last_dow","by_month_day","spIndex","daycodedkey","month_day","first_matching_day","last_matching_day","expandedDays","daykey","days_list","tmp","start_dow","end_dow","end_year_day","first","this_dow","aRules","j","check_contract_restriction","indexMapValue","_indexMap","ruleMapValue","_expandMap","pass","CONTRACT","ruleType","bydatakey","weekNo","req","deftime","UNKNOWN","EXPAND","ILLEGAL","RecurExpansion","formatTime","item","compareTime","ruleDates","exDates","complete","ruleIterators","ruleDateInc","exDateInc","exDate","ruleDate","_init","currentTry","_nextRecurrenceIter","_nextRuleDay","_nextExDay","_extractDates","propertyName","handleProp","forEach","iters","iterTime","chosenIter","iterIdx","Event","_rangeExceptionCache","exceptions","rangeExceptions","strictExceptions","relateException","isRecurrenceException","event","compareRangeException","THISANDFUTURE","uid","id","recurrenceId","modifiesFuture","findRangeException","rangeItem","getOccurrenceDetails","occurrence","utcId","startDate","endDate","rangeExceptionId","exception","startDiff","original","newStart","startTime","isRecurring","getRecurrenceTypes","_firstProp","_setProp","_setTime","propName","ComponentParser","parseEvent","parseTimezone","oncomplete","onerror","ontimezone","onevent","process","ical"],"mappings":"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","file":"19a7f4cc-95dd4d670fad4885ffcb.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/* istanbul ignore next */\n\n/* jshint ignore:start */\nif (typeof module === 'object') {\n  // CommonJS, where exports may be different each time.\n  ICAL = module.exports;\n} else if (typeof ICAL !== 'object') {\n  /* istanbul ignore next */\n\n  /** @ignore */\n  this.ICAL = {};\n}\n/* jshint ignore:end */\n\n/**\n * The number of characters before iCalendar line folding should occur\n * @type {Number}\n * @default 75\n */\n\n\nICAL.foldLength = 75;\n/**\n * The character(s) to be used for a newline. The default value is provided by\n * rfc5545.\n * @type {String}\n * @default \"\\r\\n\"\n */\n\nICAL.newLineChar = '\\r\\n';\n/**\n * Helper functions used in various places within ical.js\n * @namespace\n */\n\nICAL.helpers = {\n  /**\n   * Compiles a list of all referenced TZIDs in all subcomponents and\n   * removes any extra VTIMEZONE subcomponents. In addition, if any TZIDs\n   * are referenced by a component, but a VTIMEZONE does not exist,\n   * an attempt will be made to generate a VTIMEZONE using ICAL.TimezoneService.\n   *\n   * @param {ICAL.Component} vcal     The top-level VCALENDAR component.\n   * @return {ICAL.Component}         The ICAL.Component that was passed in.\n   */\n  updateTimezones: function updateTimezones(vcal) {\n    var allsubs, properties, vtimezones, reqTzid, i, tzid;\n\n    if (!vcal || vcal.name !== \"vcalendar\") {\n      //not a top-level vcalendar component\n      return vcal;\n    } //Store vtimezone subcomponents in an object reference by tzid.\n    //Store properties from everything else in another array\n\n\n    allsubs = vcal.getAllSubcomponents();\n    properties = [];\n    vtimezones = {};\n\n    for (i = 0; i < allsubs.length; i++) {\n      if (allsubs[i].name === \"vtimezone\") {\n        tzid = allsubs[i].getFirstProperty(\"tzid\").getFirstValue();\n        vtimezones[tzid] = allsubs[i];\n      } else {\n        properties = properties.concat(allsubs[i].getAllProperties());\n      }\n    } //create an object with one entry for each required tz\n\n\n    reqTzid = {};\n\n    for (i = 0; i < properties.length; i++) {\n      if (tzid = properties[i].getParameter(\"tzid\")) {\n        reqTzid[tzid] = true;\n      }\n    } //delete any vtimezones that are not on the reqTzid list.\n\n\n    for (i in vtimezones) {\n      if (vtimezones.hasOwnProperty(i) && !reqTzid[i]) {\n        vcal.removeSubcomponent(vtimezones[i]);\n      }\n    } //create any missing, but registered timezones\n\n\n    for (i in reqTzid) {\n      if (reqTzid.hasOwnProperty(i) && !vtimezones[i] && ICAL.TimezoneService.has(i)) {\n        vcal.addSubcomponent(ICAL.TimezoneService.get(i).component);\n      }\n    }\n\n    return vcal;\n  },\n\n  /**\n   * Checks if the given type is of the number type and also NaN.\n   *\n   * @param {Number} number     The number to check\n   * @return {Boolean}          True, if the number is strictly NaN\n   */\n  isStrictlyNaN: function isStrictlyNaN(number) {\n    return typeof number === 'number' && isNaN(number);\n  },\n\n  /**\n   * Parses a string value that is expected to be an integer, when the valid is\n   * not an integer throws a decoration error.\n   *\n   * @param {String} string     Raw string input\n   * @return {Number}           Parsed integer\n   */\n  strictParseInt: function strictParseInt(string) {\n    var result = parseInt(string, 10);\n\n    if (ICAL.helpers.isStrictlyNaN(result)) {\n      throw new Error('Could not extract integer from \"' + string + '\"');\n    }\n\n    return result;\n  },\n\n  /**\n   * Creates or returns a class instance of a given type with the initialization\n   * data if the data is not already an instance of the given type.\n   *\n   * @example\n   * var time = new ICAL.Time(...);\n   * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n   *\n   * (result instanceof ICAL.Time)\n   * // => true\n   *\n   * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n   * (result isntanceof ICAL.Time)\n   * // => true\n   *\n   *\n   * @param {Object} data       object initialization data\n   * @param {Object} type       object type (like ICAL.Time)\n   * @return {?}                An instance of the found type.\n   */\n  formatClassType: function formatClassType(data, type) {\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    if (data instanceof type) {\n      return data;\n    }\n\n    return new type(data);\n  },\n\n  /**\n   * Identical to indexOf but will only match values when they are not preceded\n   * by a backslash character.\n   *\n   * @param {String} buffer         String to search\n   * @param {String} search         Value to look for\n   * @param {Number} pos            Start position\n   * @return {Number}               The position, or -1 if not found\n   */\n  unescapedIndexOf: function unescapedIndexOf(buffer, search, pos) {\n    while ((pos = buffer.indexOf(search, pos)) !== -1) {\n      if (pos > 0 && buffer[pos - 1] === '\\\\') {\n        pos += 1;\n      } else {\n        return pos;\n      }\n    }\n\n    return -1;\n  },\n\n  /**\n   * Find the index for insertion using binary search.\n   *\n   * @param {Array} list            The list to search\n   * @param {?} seekVal             The value to insert\n   * @param {function(?,?)} cmpfunc The comparison func, that can\n   *                                  compare two seekVals\n   * @return {Number}               The insert position\n   */\n  binsearchInsert: function binsearchInsert(list, seekVal, cmpfunc) {\n    if (!list.length) return 0;\n    var low = 0,\n        high = list.length - 1,\n        mid,\n        cmpval;\n\n    while (low <= high) {\n      mid = low + Math.floor((high - low) / 2);\n      cmpval = cmpfunc(seekVal, list[mid]);\n      if (cmpval < 0) high = mid - 1;else if (cmpval > 0) low = mid + 1;else break;\n    }\n\n    if (cmpval < 0) return mid; // insertion is displacing, so use mid outright.\n    else if (cmpval > 0) return mid + 1;else return mid;\n  },\n\n  /**\n   * Convenience function for debug output\n   * @private\n   */\n  dumpn:\n  /* istanbul ignore next */\n  function dumpn() {\n    if (!ICAL.debug) {\n      return;\n    }\n\n    if (typeof console !== 'undefined' && 'log' in console) {\n      ICAL.helpers.dumpn = function consoleDumpn(input) {\n        console.log(input);\n      };\n    } else {\n      ICAL.helpers.dumpn = function geckoDumpn(input) {\n        dump(input + '\\n');\n      };\n    }\n\n    ICAL.helpers.dumpn(arguments[0]);\n  },\n\n  /**\n   * Clone the passed object or primitive. By default a shallow clone will be\n   * executed.\n   *\n   * @param {*} aSrc            The thing to clone\n   * @param {Boolean=} aDeep    If true, a deep clone will be performed\n   * @return {*}                The copy of the thing\n   */\n  clone: function clone(aSrc, aDeep) {\n    if (!aSrc || typeof aSrc != \"object\") {\n      return aSrc;\n    } else if (aSrc instanceof Date) {\n      return new Date(aSrc.getTime());\n    } else if (\"clone\" in aSrc) {\n      return aSrc.clone();\n    } else if (Array.isArray(aSrc)) {\n      var arr = [];\n\n      for (var i = 0; i < aSrc.length; i++) {\n        arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], true) : aSrc[i]);\n      }\n\n      return arr;\n    } else {\n      var obj = {};\n\n      for (var name in aSrc) {\n        // uses prototype method to allow use of Object.create(null);\n\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(aSrc, name)) {\n          if (aDeep) {\n            obj[name] = ICAL.helpers.clone(aSrc[name], true);\n          } else {\n            obj[name] = aSrc[name];\n          }\n        }\n      }\n\n      return obj;\n    }\n  },\n\n  /**\n   * Performs iCalendar line folding. A line ending character is inserted and\n   * the next line begins with a whitespace.\n   *\n   * @example\n   * SUMMARY:This line will be fold\n   *  ed right in the middle of a word.\n   *\n   * @param {String} aLine      The line to fold\n   * @return {String}           The folded line\n   */\n  foldline: function foldline(aLine) {\n    var result = \"\";\n    var line = aLine || \"\";\n\n    while (line.length) {\n      result += ICAL.newLineChar + \" \" + line.substr(0, ICAL.foldLength);\n      line = line.substr(ICAL.foldLength);\n    }\n\n    return result.substr(ICAL.newLineChar.length + 1);\n  },\n\n  /**\n   * Pads the given string or number with zeros so it will have at least two\n   * characters.\n   *\n   * @param {String|Number} data    The string or number to pad\n   * @return {String}               The number padded as a string\n   */\n  pad2: function pad(data) {\n    if (typeof data !== 'string') {\n      // handle fractions.\n      if (typeof data === 'number') {\n        data = parseInt(data);\n      }\n\n      data = String(data);\n    }\n\n    var len = data.length;\n\n    switch (len) {\n      case 0:\n        return '00';\n\n      case 1:\n        return '0' + data;\n\n      default:\n        return data;\n    }\n  },\n\n  /**\n   * Truncates the given number, correctly handling negative numbers.\n   *\n   * @param {Number} number     The number to truncate\n   * @return {Number}           The truncated number\n   */\n  trunc: function trunc(number) {\n    return number < 0 ? Math.ceil(number) : Math.floor(number);\n  },\n\n  /**\n   * Poor-man's cross-browser inheritance for JavaScript. Doesn't support all\n   * the features, but enough for our usage.\n   *\n   * @param {Function} base     The base class constructor function.\n   * @param {Function} child    The child class constructor function.\n   * @param {Object} extra      Extends the prototype with extra properties\n   *                              and methods\n   */\n  inherits: function inherits(base, child, extra) {\n    function F() {}\n\n    F.prototype = base.prototype;\n    child.prototype = new F();\n\n    if (extra) {\n      ICAL.helpers.extend(extra, child.prototype);\n    }\n  },\n\n  /**\n   * Poor-man's cross-browser object extension. Doesn't support all the\n   * features, but enough for our usage. Note that the target's properties are\n   * not overwritten with the source properties.\n   *\n   * @example\n   * var child = ICAL.helpers.extend(parent, {\n   *   \"bar\": 123\n   * });\n   *\n   * @param {Object} source     The object to extend\n   * @param {Object} target     The object to extend with\n   * @return {Object}           Returns the target.\n   */\n  extend: function extend(source, target) {\n    for (var key in source) {\n      var descr = Object.getOwnPropertyDescriptor(source, key);\n\n      if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n        Object.defineProperty(target, key, descr);\n      }\n    }\n\n    return target;\n  }\n};\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/** @namespace ICAL */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\nICAL.design = function () {\n  'use strict';\n\n  var FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\n  var TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\n  var FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\n  var TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\n  function createTextType(fromNewline, toNewline) {\n    var result = {\n      matches: /.*/,\n      fromICAL: function fromICAL(aValue, structuredEscape) {\n        return replaceNewline(aValue, fromNewline, structuredEscape);\n      },\n      toICAL: function toICAL(aValue, structuredEscape) {\n        var regEx = toNewline;\n        if (structuredEscape) regEx = new RegExp(regEx.source + '|' + structuredEscape);\n        return aValue.replace(regEx, function (str) {\n          switch (str) {\n            case \"\\\\\":\n              return \"\\\\\\\\\";\n\n            case \";\":\n              return \"\\\\;\";\n\n            case \",\":\n              return \"\\\\,\";\n\n            case \"\\n\":\n              return \"\\\\n\";\n\n            /* istanbul ignore next */\n\n            default:\n              return str;\n          }\n        });\n      }\n    };\n    return result;\n  } // default types used multiple times\n\n\n  var DEFAULT_TYPE_TEXT = {\n    defaultType: \"text\"\n  };\n  var DEFAULT_TYPE_TEXT_MULTI = {\n    defaultType: \"text\",\n    multiValue: \",\"\n  };\n  var DEFAULT_TYPE_TEXT_STRUCTURED = {\n    defaultType: \"text\",\n    structuredValue: \";\"\n  };\n  var DEFAULT_TYPE_INTEGER = {\n    defaultType: \"integer\"\n  };\n  var DEFAULT_TYPE_DATETIME_DATE = {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"]\n  };\n  var DEFAULT_TYPE_DATETIME = {\n    defaultType: \"date-time\"\n  };\n  var DEFAULT_TYPE_URI = {\n    defaultType: \"uri\"\n  };\n  var DEFAULT_TYPE_UTCOFFSET = {\n    defaultType: \"utc-offset\"\n  };\n  var DEFAULT_TYPE_RECUR = {\n    defaultType: \"recur\"\n  };\n  var DEFAULT_TYPE_DATE_ANDOR_TIME = {\n    defaultType: \"date-and-or-time\",\n    allowedTypes: [\"date-time\", \"date\", \"text\"]\n  };\n\n  function replaceNewlineReplace(string) {\n    switch (string) {\n      case \"\\\\\\\\\":\n        return \"\\\\\";\n\n      case \"\\\\;\":\n        return \";\";\n\n      case \"\\\\,\":\n        return \",\";\n\n      case \"\\\\n\":\n      case \"\\\\N\":\n        return \"\\n\";\n\n      /* istanbul ignore next */\n\n      default:\n        return string;\n    }\n  }\n\n  function replaceNewline(value, newline, structuredEscape) {\n    // avoid regex when possible.\n    if (value.indexOf('\\\\') === -1) {\n      return value;\n    }\n\n    if (structuredEscape) newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape);\n    return value.replace(newline, replaceNewlineReplace);\n  }\n\n  var commonProperties = {\n    \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n    \"url\": DEFAULT_TYPE_URI,\n    \"version\": DEFAULT_TYPE_TEXT,\n    \"uid\": DEFAULT_TYPE_TEXT\n  };\n  var commonValues = {\n    \"boolean\": {\n      values: [\"TRUE\", \"FALSE\"],\n      fromICAL: function fromICAL(aValue) {\n        switch (aValue) {\n          case 'TRUE':\n            return true;\n\n          case 'FALSE':\n            return false;\n\n          default:\n            //TODO: parser warning\n            return false;\n        }\n      },\n      toICAL: function toICAL(aValue) {\n        if (aValue) {\n          return 'TRUE';\n        }\n\n        return 'FALSE';\n      }\n    },\n    float: {\n      matches: /^[+-]?\\d+\\.\\d+$/,\n      fromICAL: function fromICAL(aValue) {\n        var parsed = parseFloat(aValue);\n\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          // TODO: parser warning\n          return 0.0;\n        }\n\n        return parsed;\n      },\n      toICAL: function toICAL(aValue) {\n        return String(aValue);\n      }\n    },\n    integer: {\n      fromICAL: function fromICAL(aValue) {\n        var parsed = parseInt(aValue);\n\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          return 0;\n        }\n\n        return parsed;\n      },\n      toICAL: function toICAL(aValue) {\n        return String(aValue);\n      }\n    },\n    \"utc-offset\": {\n      toICAL: function toICAL(aValue) {\n        if (aValue.length < 7) {\n          // no seconds\n          // -0500\n          return aValue.substr(0, 3) + aValue.substr(4, 2);\n        } else {\n          // seconds\n          // -050000\n          return aValue.substr(0, 3) + aValue.substr(4, 2) + aValue.substr(7, 2);\n        }\n      },\n      fromICAL: function fromICAL(aValue) {\n        if (aValue.length < 6) {\n          // no seconds\n          // -05:00\n          return aValue.substr(0, 3) + ':' + aValue.substr(3, 2);\n        } else {\n          // seconds\n          // -05:00:00\n          return aValue.substr(0, 3) + ':' + aValue.substr(3, 2) + ':' + aValue.substr(5, 2);\n        }\n      },\n      decorate: function decorate(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    }\n  };\n  var icalParams = {\n    // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n    // enfoce anything aside from it being a valid content line.\n    //\n    // At least some params require - if multi values are used - DQUOTEs\n    // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n    // To indicate this, I introduced the new k/v pair\n    // multiValueSeparateDQuote: true\n    //\n    // \"ALTREP\": { ... },\n    // CN just wants a param-value\n    // \"CN\": { ... }\n    \"cutype\": {\n      values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"delegated-from\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"delegated-to\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    // \"DIR\": { ... }, // See ALTREP\n    \"encoding\": {\n      values: [\"8BIT\", \"BASE64\"]\n    },\n    // \"FMTTYPE\": { ... }, // See ALTREP\n    \"fbtype\": {\n      values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    // \"LANGUAGE\": { ... }, // See ALTREP\n    \"member\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"partstat\": {\n      // TODO These values are actually different per-component\n      values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\", \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"range\": {\n      values: [\"THISLANDFUTURE\"]\n    },\n    \"related\": {\n      values: [\"START\", \"END\"]\n    },\n    \"reltype\": {\n      values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"role\": {\n      values: [\"REQ-PARTICIPANT\", \"CHAIR\", \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"rsvp\": {\n      values: [\"TRUE\", \"FALSE\"]\n    },\n    \"sent-by\": {\n      valueType: \"cal-address\"\n    },\n    \"tzid\": {\n      matches: /^\\//\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\", \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\", \"time\", \"uri\", \"utc-offset\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  }; // When adding a value here, be sure to add it to the parameter types!\n\n  var icalValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n    uri: {// TODO\n\n      /* ... */\n    },\n    \"binary\": {\n      decorate: function decorate(aString) {\n        return ICAL.Binary.fromString(aString);\n      },\n      undecorate: function undecorate(aBinary) {\n        return aBinary.toString();\n      }\n    },\n    \"cal-address\": {// needs to be an uri\n    },\n    \"date\": {\n      decorate: function decorate(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n\n      /**\n       * undecorates a time object.\n       */\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        // from: 20120901\n        // to: 2012-09-01\n        if (!design.strict && aValue.length >= 15) {\n          // This is probably a date-time, e.g. 20120901T130000Z\n          return icalValues[\"date-time\"].fromICAL(aValue);\n        } else {\n          return aValue.substr(0, 4) + '-' + aValue.substr(4, 2) + '-' + aValue.substr(6, 2);\n        }\n      },\n      toICAL: function toICAL(aValue) {\n        // from: 2012-09-01\n        // to: 20120901\n        var len = aValue.length;\n\n        if (len == 10) {\n          return aValue.substr(0, 4) + aValue.substr(5, 2) + aValue.substr(8, 2);\n        } else if (len >= 19) {\n          return icalValues[\"date-time\"].toICAL(aValue);\n        } else {\n          //TODO: serialize warning?\n          return aValue;\n        }\n      }\n    },\n    \"date-time\": {\n      fromICAL: function fromICAL(aValue) {\n        // from: 20120901T130000\n        // to: 2012-09-01T13:00:00\n        if (!design.strict && aValue.length == 8) {\n          // This is probably a date, e.g. 20120901\n          return icalValues.date.fromICAL(aValue);\n        } else {\n          var result = aValue.substr(0, 4) + '-' + aValue.substr(4, 2) + '-' + aValue.substr(6, 2) + 'T' + aValue.substr(9, 2) + ':' + aValue.substr(11, 2) + ':' + aValue.substr(13, 2);\n\n          if (aValue[15] && aValue[15] === 'Z') {\n            result += 'Z';\n          }\n\n          return result;\n        }\n      },\n      toICAL: function toICAL(aValue) {\n        // from: 2012-09-01T13:00:00\n        // to: 20120901T130000\n        var len = aValue.length;\n\n        if (len == 10 && !design.strict) {\n          return icalValues.date.toICAL(aValue);\n        } else if (len >= 19) {\n          var result = aValue.substr(0, 4) + aValue.substr(5, 2) + // grab the (DDTHH) segment\n          aValue.substr(8, 5) + // MM\n          aValue.substr(14, 2) + // SS\n          aValue.substr(17, 2);\n\n          if (aValue[19] && aValue[19] === 'Z') {\n            result += 'Z';\n          }\n\n          return result;\n        } else {\n          // TODO: error\n          return aValue;\n        }\n      },\n      decorate: function decorate(aValue, aProp) {\n        if (design.strict) {\n          return ICAL.Time.fromDateTimeString(aValue, aProp);\n        } else {\n          return ICAL.Time.fromString(aValue, aProp);\n        }\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    },\n    duration: {\n      decorate: function decorate(aValue) {\n        return ICAL.Duration.fromString(aValue);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    },\n    period: {\n      fromICAL: function fromICAL(string) {\n        var parts = string.split('/');\n        parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n        }\n\n        return parts;\n      },\n      toICAL: function toICAL(parts) {\n        if (!design.strict && parts[0].length == 10) {\n          parts[0] = icalValues.date.toICAL(parts[0]);\n        } else {\n          parts[0] = icalValues['date-time'].toICAL(parts[0]);\n        }\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          if (!design.strict && parts[1].length == 10) {\n            parts[1] = icalValues.date.toICAL(parts[1]);\n          } else {\n            parts[1] = icalValues['date-time'].toICAL(parts[1]);\n          }\n        }\n\n        return parts.join(\"/\");\n      },\n      decorate: function decorate(aValue, aProp) {\n        return ICAL.Period.fromJSON(aValue, aProp, !design.strict);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toJSON();\n      }\n    },\n    recur: {\n      fromICAL: function fromICAL(string) {\n        return ICAL.Recur._stringToData(string, true);\n      },\n      toICAL: function toICAL(data) {\n        var str = \"\";\n\n        for (var k in data) {\n          /* istanbul ignore if */\n          if (!Object.prototype.hasOwnProperty.call(data, k)) {\n            continue;\n          }\n\n          var val = data[k];\n\n          if (k == \"until\") {\n            if (val.length > 10) {\n              val = icalValues['date-time'].toICAL(val);\n            } else {\n              val = icalValues.date.toICAL(val);\n            }\n          } else if (k == \"wkst\") {\n            if (typeof val === 'number') {\n              val = ICAL.Recur.numericDayToIcalDay(val);\n            }\n          } else if (Array.isArray(val)) {\n            val = val.join(\",\");\n          }\n\n          str += k.toUpperCase() + \"=\" + val + \";\";\n        }\n\n        return str.substr(0, str.length - 1);\n      },\n      decorate: function decorate(aValue) {\n        return ICAL.Recur.fromData(aValue);\n      },\n      undecorate: function undecorate(aRecur) {\n        return aRecur.toJSON();\n      }\n    },\n    time: {\n      fromICAL: function fromICAL(aValue) {\n        // from: MMHHSS(Z)?\n        // to: HH:MM:SS(Z)?\n        if (aValue.length < 6) {\n          // TODO: parser exception?\n          return aValue;\n        } // HH::MM::SSZ?\n\n\n        var result = aValue.substr(0, 2) + ':' + aValue.substr(2, 2) + ':' + aValue.substr(4, 2);\n\n        if (aValue[6] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n      toICAL: function toICAL(aValue) {\n        // from: HH:MM:SS(Z)?\n        // to: MMHHSS(Z)?\n        if (aValue.length < 8) {\n          //TODO: error\n          return aValue;\n        }\n\n        var result = aValue.substr(0, 2) + aValue.substr(3, 2) + aValue.substr(6, 2);\n\n        if (aValue[8] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    }\n  });\n  var icalProperties = ICAL.helpers.extend(commonProperties, {\n    \"action\": DEFAULT_TYPE_TEXT,\n    \"attach\": {\n      defaultType: \"uri\"\n    },\n    \"attendee\": {\n      defaultType: \"cal-address\"\n    },\n    \"calscale\": DEFAULT_TYPE_TEXT,\n    \"class\": DEFAULT_TYPE_TEXT,\n    \"comment\": DEFAULT_TYPE_TEXT,\n    \"completed\": DEFAULT_TYPE_DATETIME,\n    \"contact\": DEFAULT_TYPE_TEXT,\n    \"created\": DEFAULT_TYPE_DATETIME,\n    \"description\": DEFAULT_TYPE_TEXT,\n    \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n    \"dtstamp\": DEFAULT_TYPE_DATETIME,\n    \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n    \"due\": DEFAULT_TYPE_DATETIME_DATE,\n    \"duration\": {\n      defaultType: \"duration\"\n    },\n    \"exdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      multiValue: ','\n    },\n    \"exrule\": DEFAULT_TYPE_RECUR,\n    \"freebusy\": {\n      defaultType: \"period\",\n      multiValue: \",\"\n    },\n    \"geo\": {\n      defaultType: \"float\",\n      structuredValue: \";\"\n    },\n    \"last-modified\": DEFAULT_TYPE_DATETIME,\n    \"location\": DEFAULT_TYPE_TEXT,\n    \"method\": DEFAULT_TYPE_TEXT,\n    \"organizer\": {\n      defaultType: \"cal-address\"\n    },\n    \"percent-complete\": DEFAULT_TYPE_INTEGER,\n    \"priority\": DEFAULT_TYPE_INTEGER,\n    \"prodid\": DEFAULT_TYPE_TEXT,\n    \"related-to\": DEFAULT_TYPE_TEXT,\n    \"repeat\": DEFAULT_TYPE_INTEGER,\n    \"rdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\", \"period\"],\n      multiValue: ',',\n      detectType: function detectType(string) {\n        if (string.indexOf('/') !== -1) {\n          return 'period';\n        }\n\n        return string.indexOf('T') === -1 ? 'date' : 'date-time';\n      }\n    },\n    \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n    \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n    \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"rrule\": DEFAULT_TYPE_RECUR,\n    \"sequence\": DEFAULT_TYPE_INTEGER,\n    \"status\": DEFAULT_TYPE_TEXT,\n    \"summary\": DEFAULT_TYPE_TEXT,\n    \"transp\": DEFAULT_TYPE_TEXT,\n    \"trigger\": {\n      defaultType: \"duration\",\n      allowedTypes: [\"duration\", \"date-time\"]\n    },\n    \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzurl\": DEFAULT_TYPE_URI,\n    \"tzid\": DEFAULT_TYPE_TEXT,\n    \"tzname\": DEFAULT_TYPE_TEXT\n  }); // When adding a value here, be sure to add it to the parameter types!\n\n  var vcardValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    date: {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        if (aValue.length == 8) {\n          return icalValues.date.fromICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 6) {\n          return aValue.substr(0, 4) + '-' + aValue.substr(4);\n        } else {\n          return aValue;\n        }\n      },\n      toICAL: function toICAL(aValue) {\n        if (aValue.length == 10) {\n          return icalValues.date.toICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 7) {\n          return aValue.substr(0, 4) + aValue.substr(5);\n        } else {\n          return aValue;\n        }\n      }\n    },\n    time: {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue, true);\n\n        var zone = splitzone[0],\n            value = splitzone[1]; //console.log(\"SPLIT: \",splitzone);\n\n        if (value.length == 6) {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2) + ':' + value.substr(4, 2);\n        } else if (value.length == 4 && value[0] != '-') {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2);\n        } else if (value.length == 5) {\n          value = value.substr(0, 3) + ':' + value.substr(3, 2);\n        }\n\n        if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + ':' + zone.substr(3);\n        }\n\n        return value + zone;\n      },\n      toICAL: function toICAL(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue);\n\n        var zone = splitzone[0],\n            value = splitzone[1];\n\n        if (value.length == 8) {\n          value = value.substr(0, 2) + value.substr(3, 2) + value.substr(6, 2);\n        } else if (value.length == 5 && value[0] != '-') {\n          value = value.substr(0, 2) + value.substr(3, 2);\n        } else if (value.length == 6) {\n          value = value.substr(0, 3) + value.substr(4, 2);\n        }\n\n        if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + zone.substr(4);\n        }\n\n        return value + zone;\n      },\n      _splitZone: function _splitZone(aValue, isFromIcal) {\n        var lastChar = aValue.length - 1;\n        var signChar = aValue.length - (isFromIcal ? 5 : 6);\n        var sign = aValue[signChar];\n        var zone, value;\n\n        if (aValue[lastChar] == 'Z') {\n          zone = aValue[lastChar];\n          value = aValue.substr(0, lastChar);\n        } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n          zone = aValue.substr(signChar);\n          value = aValue.substr(0, signChar);\n        } else {\n          zone = \"\";\n          value = aValue;\n        }\n\n        return [zone, value];\n      }\n    },\n    \"date-time\": {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        return vcardValues['date-and-or-time'].fromICAL(aValue);\n      },\n      toICAL: function toICAL(aValue) {\n        return vcardValues['date-and-or-time'].toICAL(aValue);\n      }\n    },\n    \"date-and-or-time\": {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        var parts = aValue.split('T');\n        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') + (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n      },\n      toICAL: function toICAL(aValue) {\n        var parts = aValue.split('T');\n        return vcardValues.date.toICAL(parts[0]) + (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n      }\n    },\n    timestamp: icalValues['date-time'],\n    \"language-tag\": {\n      matches: /^[a-zA-Z0-9-]+$/ // Could go with a more strict regex here\n\n    }\n  });\n  var vcardParams = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\", \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\", \"language-tag\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n  var vcardProperties = ICAL.helpers.extend(commonProperties, {\n    \"adr\": {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"caladruri\": DEFAULT_TYPE_URI,\n    \"caluri\": DEFAULT_TYPE_URI,\n    \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"email\": DEFAULT_TYPE_TEXT,\n    \"fburl\": DEFAULT_TYPE_URI,\n    \"fn\": DEFAULT_TYPE_TEXT,\n    \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"geo\": DEFAULT_TYPE_URI,\n    \"impp\": DEFAULT_TYPE_URI,\n    \"key\": DEFAULT_TYPE_URI,\n    \"kind\": DEFAULT_TYPE_TEXT,\n    \"lang\": {\n      defaultType: \"language-tag\"\n    },\n    \"logo\": DEFAULT_TYPE_URI,\n    \"member\": DEFAULT_TYPE_URI,\n    \"n\": {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n    \"note\": DEFAULT_TYPE_TEXT,\n    \"org\": {\n      defaultType: \"text\",\n      structuredValue: \";\"\n    },\n    \"photo\": DEFAULT_TYPE_URI,\n    \"related\": DEFAULT_TYPE_URI,\n    \"rev\": {\n      defaultType: \"timestamp\"\n    },\n    \"role\": DEFAULT_TYPE_TEXT,\n    \"sound\": DEFAULT_TYPE_URI,\n    \"source\": DEFAULT_TYPE_URI,\n    \"tel\": {\n      defaultType: \"uri\",\n      allowedTypes: [\"uri\", \"text\"]\n    },\n    \"title\": DEFAULT_TYPE_TEXT,\n    \"tz\": {\n      defaultType: \"text\",\n      allowedTypes: [\"text\", \"utc-offset\", \"uri\"]\n    },\n    \"xml\": DEFAULT_TYPE_TEXT\n  });\n  var vcard3Values = ICAL.helpers.extend(commonValues, {\n    binary: icalValues.binary,\n    date: vcardValues.date,\n    \"date-time\": vcardValues[\"date-time\"],\n    \"phone-number\": {// TODO\n\n      /* ... */\n    },\n    uri: icalValues.uri,\n    text: icalValues.text,\n    time: icalValues.time,\n    vcard: icalValues.text,\n    \"utc-offset\": {\n      toICAL: function toICAL(aValue) {\n        return aValue.substr(0, 7);\n      },\n      fromICAL: function fromICAL(aValue) {\n        return aValue.substr(0, 7);\n      },\n      decorate: function decorate(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    }\n  });\n  var vcard3Params = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\", \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n  var vcard3Properties = ICAL.helpers.extend(commonProperties, {\n    fn: DEFAULT_TYPE_TEXT,\n    n: {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    nickname: DEFAULT_TYPE_TEXT_MULTI,\n    photo: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"uri\"]\n    },\n    bday: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function detectType(string) {\n        return string.indexOf('T') === -1 ? 'date' : 'date-time';\n      }\n    },\n    adr: {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    label: DEFAULT_TYPE_TEXT,\n    tel: {\n      defaultType: \"phone-number\"\n    },\n    email: DEFAULT_TYPE_TEXT,\n    mailer: DEFAULT_TYPE_TEXT,\n    tz: {\n      defaultType: \"utc-offset\",\n      allowedTypes: [\"utc-offset\", \"text\"]\n    },\n    geo: {\n      defaultType: \"float\",\n      structuredValue: \";\"\n    },\n    title: DEFAULT_TYPE_TEXT,\n    role: DEFAULT_TYPE_TEXT,\n    logo: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"uri\"]\n    },\n    agent: {\n      defaultType: \"vcard\",\n      allowedTypes: [\"vcard\", \"text\", \"uri\"]\n    },\n    org: DEFAULT_TYPE_TEXT_STRUCTURED,\n    note: DEFAULT_TYPE_TEXT_MULTI,\n    prodid: DEFAULT_TYPE_TEXT,\n    rev: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function detectType(string) {\n        return string.indexOf('T') === -1 ? 'date' : 'date-time';\n      }\n    },\n    \"sort-string\": DEFAULT_TYPE_TEXT,\n    sound: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"uri\"]\n    },\n    class: DEFAULT_TYPE_TEXT,\n    key: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"text\"]\n    }\n  });\n  /**\n   * iCalendar design set\n   * @type {ICAL.design.designSet}\n   */\n\n  var icalSet = {\n    value: icalValues,\n    param: icalParams,\n    property: icalProperties\n  };\n  /**\n   * vCard 4.0 design set\n   * @type {ICAL.design.designSet}\n   */\n\n  var vcardSet = {\n    value: vcardValues,\n    param: vcardParams,\n    property: vcardProperties\n  };\n  /**\n   * vCard 3.0 design set\n   * @type {ICAL.design.designSet}\n   */\n\n  var vcard3Set = {\n    value: vcard3Values,\n    param: vcard3Params,\n    property: vcard3Properties\n  };\n  /**\n   * The design data, used by the parser to determine types for properties and\n   * other metadata needed to produce correct jCard/jCal data.\n   *\n   * @alias ICAL.design\n   * @namespace\n   */\n\n  var design = {\n    /**\n     * A designSet describes value, parameter and property data. It is used by\n     * ther parser and stringifier in components and properties to determine they\n     * should be represented.\n     *\n     * @typedef {Object} designSet\n     * @memberOf ICAL.design\n     * @property {Object} value       Definitions for value types, keys are type names\n     * @property {Object} param       Definitions for params, keys are param names\n     * @property {Object} property    Defintions for properties, keys are property names\n     */\n\n    /**\n     * Can be set to false to make the parser more lenient.\n     */\n    strict: true,\n\n    /**\n     * The default set for new properties and components if none is specified.\n     * @type {ICAL.design.designSet}\n     */\n    defaultSet: icalSet,\n\n    /**\n     * The default type for unknown properties\n     * @type {String}\n     */\n    defaultType: 'unknown',\n\n    /**\n     * Holds the design set for known top-level components\n     *\n     * @type {Object}\n     * @property {ICAL.design.designSet} vcard       vCard VCARD\n     * @property {ICAL.design.designSet} vevent      iCalendar VEVENT\n     * @property {ICAL.design.designSet} vtodo       iCalendar VTODO\n     * @property {ICAL.design.designSet} vjournal    iCalendar VJOURNAL\n     * @property {ICAL.design.designSet} valarm      iCalendar VALARM\n     * @property {ICAL.design.designSet} vtimezone   iCalendar VTIMEZONE\n     * @property {ICAL.design.designSet} daylight    iCalendar DAYLIGHT\n     * @property {ICAL.design.designSet} standard    iCalendar STANDARD\n     *\n     * @example\n     * var propertyName = 'fn';\n     * var componentDesign = ICAL.design.components.vcard;\n     * var propertyDetails = componentDesign.property[propertyName];\n     * if (propertyDetails.defaultType == 'text') {\n     *   // Yep, sure is...\n     * }\n     */\n    components: {\n      vcard: vcardSet,\n      vcard3: vcard3Set,\n      vevent: icalSet,\n      vtodo: icalSet,\n      vjournal: icalSet,\n      valarm: icalSet,\n      vtimezone: icalSet,\n      daylight: icalSet,\n      standard: icalSet\n    },\n\n    /**\n     * The design set for iCalendar (rfc5545/rfc7265) components.\n     * @type {ICAL.design.designSet}\n     */\n    icalendar: icalSet,\n\n    /**\n     * The design set for vCard (rfc6350/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard: vcardSet,\n\n    /**\n     * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard3: vcard3Set,\n\n    /**\n     * Gets the design set for the given component name.\n     *\n     * @param {String} componentName        The name of the component\n     * @return {ICAL.design.designSet}      The design set for the component\n     */\n    getDesignSet: function getDesignSet(componentName) {\n      var isInDesign = componentName && componentName in design.components;\n      return isInDesign ? design.components[componentName] : design.defaultSet;\n    }\n  };\n  return design;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * Contains various functions to convert jCal and jCard data back into\n * iCalendar and vCard.\n * @namespace\n */\n\n\nICAL.stringify = function () {\n  'use strict';\n\n  var LINE_ENDING = '\\r\\n';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n  /**\n   * Convert a full jCal/jCard array into a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify\n   * @variation function\n   * @param {Array} jCal    The jCal/jCard document\n   * @return {String}       The stringified iCalendar/vCard document\n   */\n\n  function stringify(jCal) {\n    if (typeof jCal[0] == \"string\") {\n      // This is a single component\n      jCal = [jCal];\n    }\n\n    var i = 0;\n    var len = jCal.length;\n    var result = '';\n\n    for (; i < len; i++) {\n      result += stringify.component(jCal[i]) + LINE_ENDING;\n    }\n\n    return result;\n  }\n  /**\n   * Converts an jCal component array into a ICAL string.\n   * Recursive will resolve sub-components.\n   *\n   * Exact component/property order is not saved all\n   * properties will come before subcomponents.\n   *\n   * @function ICAL.stringify.component\n   * @param {Array} component\n   *        jCal/jCard fragment of a component\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this component\n   * @return {String}       The iCalendar/vCard string\n   */\n\n\n  stringify.component = function (component, designSet) {\n    var name = component[0].toUpperCase();\n    var result = 'BEGIN:' + name + LINE_ENDING;\n    var props = component[1];\n    var propIdx = 0;\n    var propLen = props.length;\n    var designSetName = component[0]; // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n\n    if (designSetName === 'vcard' && component[1].length > 0 && !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n      designSetName = \"vcard3\";\n    }\n\n    designSet = designSet || design.getDesignSet(designSetName);\n\n    for (; propIdx < propLen; propIdx++) {\n      result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n    } // Ignore subcomponents if none exist, e.g. in vCard.\n\n\n    var comps = component[2] || [];\n    var compIdx = 0;\n    var compLen = comps.length;\n\n    for (; compIdx < compLen; compIdx++) {\n      result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n    }\n\n    result += 'END:' + name;\n    return result;\n  };\n  /**\n   * Converts a single jCal/jCard property to a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify.property\n   * @param {Array} property\n   *        jCal/jCard property array\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   * @param {Boolean} noFold\n   *        If true, the line is not folded\n   * @return {String}       The iCalendar/vCard string\n   */\n\n\n  stringify.property = function (property, designSet, noFold) {\n    var name = property[0].toUpperCase();\n    var jsName = property[0];\n    var params = property[1];\n    var line = name;\n    var paramName;\n\n    for (paramName in params) {\n      var value = params[paramName];\n      /* istanbul ignore else */\n\n      if (params.hasOwnProperty(paramName)) {\n        var multiValue = paramName in designSet.param && designSet.param[paramName].multiValue;\n\n        if (multiValue && Array.isArray(value)) {\n          if (designSet.param[paramName].multiValueSeparateDQuote) {\n            multiValue = '\"' + multiValue + '\"';\n          }\n\n          value = value.map(stringify._rfc6868Unescape);\n          value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n        } else {\n          value = stringify._rfc6868Unescape(value);\n        }\n\n        line += ';' + paramName.toUpperCase();\n        line += '=' + stringify.propertyValue(value);\n      }\n    }\n\n    if (property.length === 3) {\n      // If there are no values, we must assume a blank value\n      return line + ':';\n    }\n\n    var valueType = property[2];\n\n    if (!designSet) {\n      designSet = design.defaultSet;\n    }\n\n    var propDetails;\n    var multiValue = false;\n    var structuredValue = false;\n    var isDefault = false;\n\n    if (jsName in designSet.property) {\n      propDetails = designSet.property[jsName];\n\n      if ('multiValue' in propDetails) {\n        multiValue = propDetails.multiValue;\n      }\n\n      if ('structuredValue' in propDetails && Array.isArray(property[3])) {\n        structuredValue = propDetails.structuredValue;\n      }\n\n      if ('defaultType' in propDetails) {\n        if (valueType === propDetails.defaultType) {\n          isDefault = true;\n        }\n      } else {\n        if (valueType === DEFAULT_VALUE_TYPE) {\n          isDefault = true;\n        }\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    } // push the VALUE property if type is not the default\n    // for the current property.\n\n\n    if (!isDefault) {\n      // value will never contain ;/:/, so we don't escape it here.\n      line += ';VALUE=' + valueType.toUpperCase();\n    }\n\n    line += ':';\n\n    if (multiValue && structuredValue) {\n      line += stringify.multiValue(property[3], structuredValue, valueType, multiValue, designSet, structuredValue);\n    } else if (multiValue) {\n      line += stringify.multiValue(property.slice(3), multiValue, valueType, null, designSet, false);\n    } else if (structuredValue) {\n      line += stringify.multiValue(property[3], structuredValue, valueType, null, designSet, structuredValue);\n    } else {\n      line += stringify.value(property[3], valueType, designSet, false);\n    }\n\n    return noFold ? line : ICAL.helpers.foldline(line);\n  };\n  /**\n   * Handles escaping of property values that may contain:\n   *\n   *    COLON (:), SEMICOLON (;), or COMMA (,)\n   *\n   * If any of the above are present the result is wrapped\n   * in double quotes.\n   *\n   * @function ICAL.stringify.propertyValue\n   * @param {String} value      Raw property value\n   * @return {String}           Given or escaped value when needed\n   */\n\n\n  stringify.propertyValue = function (value) {\n    if (helpers.unescapedIndexOf(value, ',') === -1 && helpers.unescapedIndexOf(value, ':') === -1 && helpers.unescapedIndexOf(value, ';') === -1) {\n      return value;\n    }\n\n    return '\"' + value + '\"';\n  };\n  /**\n   * Converts an array of ical values into a single\n   * string based on a type and a delimiter value (like \",\").\n   *\n   * @function ICAL.stringify.multiValue\n   * @param {Array} values      List of values to convert\n   * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n   * @param {String} type       Lowecase ical value type\n   *        (like boolean, date-time, etc..)\n   * @param {?String} innerMulti If set, each value will again be processed\n   *        Used for structured values\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   *\n   * @return {String}           iCalendar/vCard string for value\n   */\n\n\n  stringify.multiValue = function (values, delim, type, innerMulti, designSet, structuredValue) {\n    var result = '';\n    var len = values.length;\n    var i = 0;\n\n    for (; i < len; i++) {\n      if (innerMulti && Array.isArray(values[i])) {\n        result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n      } else {\n        result += stringify.value(values[i], type, designSet, structuredValue);\n      }\n\n      if (i !== len - 1) {\n        result += delim;\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Processes a single ical value runs the associated \"toICAL\" method from the\n   * design value type if available to convert the value.\n   *\n   * @function ICAL.stringify.value\n   * @param {String|Number} value       A formatted value\n   * @param {String} type               Lowercase iCalendar/vCard value type\n   *  (like boolean, date-time, etc..)\n   * @return {String}                   iCalendar/vCard value for single value\n   */\n\n\n  stringify.value = function (value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n      return designSet.value[type].toICAL(value, structuredValue);\n    }\n\n    return value;\n  };\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @param {String} val        The value to unescape\n   * @return {String}           The escaped value\n   */\n\n\n  stringify._rfc6868Unescape = function (val) {\n    return val.replace(/[\\n^\"]/g, function (x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n\n  var RFC6868_REPLACE_MAP = {\n    '\"': \"^'\",\n    \"\\n\": \"^n\",\n    \"^\": \"^^\"\n  };\n  return stringify;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * Contains various functions to parse iCalendar and vCard data.\n * @namespace\n */\n\n\nICAL.parse = function () {\n  'use strict';\n\n  var CHAR = /[^ \\t]/;\n  var MULTIVALUE_DELIMITER = ',';\n  var VALUE_DELIMITER = ':';\n  var PARAM_DELIMITER = ';';\n  var PARAM_NAME_DELIMITER = '=';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var DEFAULT_PARAM_TYPE = 'text';\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n  /**\n   * An error that occurred during parsing.\n   *\n   * @param {String} message        The error message\n   * @memberof ICAL.parse\n   * @extends {Error}\n   * @class\n   */\n\n  function ParserError(message) {\n    this.message = message;\n    this.name = 'ParserError';\n\n    try {\n      throw new Error();\n    } catch (e) {\n      if (e.stack) {\n        var split = e.stack.split('\\n');\n        split.shift();\n        this.stack = split.join('\\n');\n      }\n    }\n  }\n\n  ParserError.prototype = Error.prototype;\n  /**\n   * Parses iCalendar or vCard data into a raw jCal object. Consult\n   * documentation on the {@tutorial layers|layers of parsing} for more\n   * details.\n   *\n   * @function ICAL.parse\n   * @variation function\n   * @todo Fix the API to be more clear on the return type\n   * @param {String} input      The string data to parse\n   * @return {Object|Object[]}  A single jCal object, or an array thereof\n   */\n\n  function parser(input) {\n    var state = {};\n    var root = state.component = [];\n    state.stack = [root];\n\n    parser._eachLine(input, function (err, line) {\n      parser._handleContentLine(line, state);\n    }); // when there are still items on the stack\n    // throw a fatal error, a component was not closed\n    // correctly in that case.\n\n\n    if (state.stack.length > 1) {\n      throw new ParserError('invalid ical body. component began but did not end');\n    }\n\n    state = null;\n    return root.length == 1 ? root[0] : root;\n  }\n  /**\n   * Parse an iCalendar property value into the jCal for a single property\n   *\n   * @function ICAL.parse.property\n   * @param {String} str\n   *   The iCalendar property string to parse\n   * @param {ICAL.design.designSet=} designSet\n   *   The design data to use for this property\n   * @return {Object}\n   *   The jCal Object containing the property\n   */\n\n\n  parser.property = function (str, designSet) {\n    var state = {\n      component: [[], []],\n      designSet: designSet || design.defaultSet\n    };\n\n    parser._handleContentLine(str, state);\n\n    return state.component[1][0];\n  };\n  /**\n   * Convenience method to parse a component. You can use ICAL.parse() directly\n   * instead.\n   *\n   * @function ICAL.parse.component\n   * @see ICAL.parse(function)\n   * @param {String} str    The iCalendar component string to parse\n   * @return {Object}       The jCal Object containing the component\n   */\n\n\n  parser.component = function (str) {\n    return parser(str);\n  }; // classes & constants\n\n\n  parser.ParserError = ParserError;\n  /**\n   * The state for parsing content lines from an iCalendar/vCard string.\n   *\n   * @private\n   * @memberof ICAL.parse\n   * @typedef {Object} parserState\n   * @property {ICAL.design.designSet} designSet    The design set to use for parsing\n   * @property {ICAL.Component[]} stack             The stack of components being processed\n   * @property {ICAL.Component} component           The currently active component\n   */\n\n  /**\n   * Handles a single line of iCalendar/vCard, updating the state.\n   *\n   * @private\n   * @function ICAL.parse._handleContentLine\n   * @param {String} line               The content line to process\n   * @param {ICAL.parse.parserState}    The current state of the line parsing\n   */\n\n  parser._handleContentLine = function (line, state) {\n    // break up the parts of the line\n    var valuePos = line.indexOf(VALUE_DELIMITER);\n    var paramPos = line.indexOf(PARAM_DELIMITER);\n    var lastParamIndex;\n    var lastValuePos; // name of property or begin/end\n\n    var name;\n    var value; // params is only overridden if paramPos !== -1.\n    // we can't do params = params || {} later on\n    // because it sacrifices ops.\n\n    var params = {};\n    /**\n     * Different property cases\n     *\n     *\n     * 1. RRULE:FREQ=foo\n     *    // FREQ= is not a param but the value\n     *\n     * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n     *    // ROLE= is a param because : has not happened yet\n     */\n    // when the parameter delimiter is after the\n    // value delimiter then its not a parameter.\n\n    if (paramPos !== -1 && valuePos !== -1) {\n      // when the parameter delimiter is after the\n      // value delimiter then its not a parameter.\n      if (paramPos > valuePos) {\n        paramPos = -1;\n      }\n    }\n\n    var parsedParams;\n\n    if (paramPos !== -1) {\n      name = line.substring(0, paramPos).toLowerCase();\n      parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet);\n\n      if (parsedParams[2] == -1) {\n        throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n      }\n\n      params = parsedParams[0];\n      lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;\n\n      if ((lastValuePos = line.substring(lastParamIndex).indexOf(VALUE_DELIMITER)) !== -1) {\n        value = line.substring(lastParamIndex + lastValuePos + 1);\n      } else {\n        throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n      }\n    } else if (valuePos !== -1) {\n      // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n      name = line.substring(0, valuePos).toLowerCase();\n      value = line.substring(valuePos + 1);\n\n      if (name === 'begin') {\n        var newComponent = [value.toLowerCase(), [], []];\n\n        if (state.stack.length === 1) {\n          state.component.push(newComponent);\n        } else {\n          state.component[2].push(newComponent);\n        }\n\n        state.stack.push(state.component);\n        state.component = newComponent;\n\n        if (!state.designSet) {\n          state.designSet = design.getDesignSet(state.component[0]);\n        }\n\n        return;\n      } else if (name === 'end') {\n        state.component = state.stack.pop();\n        return;\n      } // If its not begin/end, then this is a property with an empty value,\n      // which should be considered valid.\n\n    } else {\n      /**\n       * Invalid line.\n       * The rational to throw an error is we will\n       * never be certain that the rest of the file\n       * is sane and its unlikely that we can serialize\n       * the result correctly either.\n       */\n      throw new ParserError('invalid line (no token \";\" or \":\") \"' + line + '\"');\n    }\n\n    var valueType;\n    var multiValue = false;\n    var structuredValue = false;\n    var propertyDetails;\n\n    if (name in state.designSet.property) {\n      propertyDetails = state.designSet.property[name];\n\n      if ('multiValue' in propertyDetails) {\n        multiValue = propertyDetails.multiValue;\n      }\n\n      if ('structuredValue' in propertyDetails) {\n        structuredValue = propertyDetails.structuredValue;\n      }\n\n      if (value && 'detectType' in propertyDetails) {\n        valueType = propertyDetails.detectType(value);\n      }\n    } // attempt to determine value\n\n\n    if (!valueType) {\n      if (!('value' in params)) {\n        if (propertyDetails) {\n          valueType = propertyDetails.defaultType;\n        } else {\n          valueType = DEFAULT_VALUE_TYPE;\n        }\n      } else {\n        // possible to avoid this?\n        valueType = params.value.toLowerCase();\n      }\n    }\n\n    delete params.value;\n    /**\n     * Note on `var result` juggling:\n     *\n     * I observed that building the array in pieces has adverse\n     * effects on performance, so where possible we inline the creation.\n     * Its a little ugly but resulted in ~2000 additional ops/sec.\n     */\n\n    var result;\n\n    if (multiValue && structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else if (multiValue) {\n      result = [name, params, valueType];\n\n      parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n    } else if (structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else {\n      value = parser._parseValue(value, valueType, state.designSet, false);\n      result = [name, params, valueType, value];\n    } // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n\n\n    if (state.component[0] === 'vcard' && state.component[1].length === 0 && !(name === 'version' && value === '4.0')) {\n      state.designSet = design.getDesignSet(\"vcard3\");\n    }\n\n    state.component[1].push(result);\n  };\n  /**\n   * Parse a value from the raw value into the jCard/jCal value.\n   *\n   * @private\n   * @function ICAL.parse._parseValue\n   * @param {String} value          Original value\n   * @param {String} type           Type of value\n   * @param {Object} designSet      The design data to use for this value\n   * @return {Object} varies on type\n   */\n\n\n  parser._parseValue = function (value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n      return designSet.value[type].fromICAL(value, structuredValue);\n    }\n\n    return value;\n  };\n  /**\n   * Parse parameters from a string to object.\n   *\n   * @function ICAL.parse._parseParameters\n   * @private\n   * @param {String} line           A single unfolded line\n   * @param {Numeric} start         Position to start looking for properties\n   * @param {Object} designSet      The design data to use for this property\n   * @return {Object} key/value pairs\n   */\n\n\n  parser._parseParameters = function (line, start, designSet) {\n    var lastParam = start;\n    var pos = 0;\n    var delim = PARAM_NAME_DELIMITER;\n    var result = {};\n    var name, lcname;\n    var value,\n        valuePos = -1;\n    var type, multiValue, mvdelim; // find the next '=' sign\n    // use lastParam and pos to find name\n    // check if \" is used if so get value from \"->\"\n    // then increment pos to find next ;\n\n    while (pos !== false && (pos = helpers.unescapedIndexOf(line, delim, pos + 1)) !== -1) {\n      name = line.substr(lastParam + 1, pos - lastParam - 1);\n\n      if (name.length == 0) {\n        throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n      }\n\n      lcname = name.toLowerCase();\n      mvdelim = false;\n      multiValue = false;\n\n      if (lcname in designSet.param && designSet.param[lcname].valueType) {\n        type = designSet.param[lcname].valueType;\n      } else {\n        type = DEFAULT_PARAM_TYPE;\n      }\n\n      if (lcname in designSet.param) {\n        multiValue = designSet.param[lcname].multiValue;\n\n        if (designSet.param[lcname].multiValueSeparateDQuote) {\n          mvdelim = parser._rfc6868Escape('\"' + multiValue + '\"');\n        }\n      }\n\n      var nextChar = line[pos + 1];\n\n      if (nextChar === '\"') {\n        valuePos = pos + 2;\n        pos = helpers.unescapedIndexOf(line, '\"', valuePos);\n\n        if (multiValue && pos != -1) {\n          var extendedValue = true;\n\n          while (extendedValue) {\n            if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n              pos = helpers.unescapedIndexOf(line, '\"', pos + 3);\n            } else {\n              extendedValue = false;\n            }\n          }\n        }\n\n        if (pos === -1) {\n          throw new ParserError('invalid line (no matching double quote) \"' + line + '\"');\n        }\n\n        value = line.substr(valuePos, pos - valuePos);\n        lastParam = helpers.unescapedIndexOf(line, PARAM_DELIMITER, pos);\n\n        if (lastParam === -1) {\n          pos = false;\n        }\n      } else {\n        valuePos = pos + 1; // move to next \";\"\n\n        var nextPos = helpers.unescapedIndexOf(line, PARAM_DELIMITER, valuePos);\n        var propValuePos = helpers.unescapedIndexOf(line, VALUE_DELIMITER, valuePos);\n\n        if (propValuePos !== -1 && nextPos > propValuePos) {\n          // this is a delimiter in the property value, let's stop here\n          nextPos = propValuePos;\n          pos = false;\n        } else if (nextPos === -1) {\n          // no \";\"\n          if (propValuePos === -1) {\n            nextPos = line.length;\n          } else {\n            nextPos = propValuePos;\n          }\n\n          pos = false;\n        } else {\n          lastParam = nextPos;\n          pos = nextPos;\n        }\n\n        value = line.substr(valuePos, nextPos - valuePos);\n      }\n\n      value = parser._rfc6868Escape(value);\n\n      if (multiValue) {\n        var delimiter = mvdelim || multiValue;\n        value = parser._parseMultiValue(value, delimiter, type, [], null, designSet);\n      } else {\n        value = parser._parseValue(value, type, designSet);\n      }\n\n      if (multiValue && lcname in result) {\n        if (Array.isArray(result[lcname])) {\n          result[lcname].push(value);\n        } else {\n          result[lcname] = [result[lcname], value];\n        }\n      } else {\n        result[lcname] = value;\n      }\n    }\n\n    return [result, value, valuePos];\n  };\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @function ICAL.parse._rfc6868Escape\n   * @param {String} val        The value to escape\n   * @return {String}           The escaped value\n   */\n\n\n  parser._rfc6868Escape = function (val) {\n    return val.replace(/\\^['n^]/g, function (x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n\n  var RFC6868_REPLACE_MAP = {\n    \"^'\": '\"',\n    \"^n\": \"\\n\",\n    \"^^\": \"^\"\n  };\n  /**\n   * Parse a multi value string. This function is used either for parsing\n   * actual multi-value property's values, or for handling parameter values. It\n   * can be used for both multi-value properties and structured value properties.\n   *\n   * @private\n   * @function ICAL.parse._parseMultiValue\n   * @param {String} buffer     The buffer containing the full value\n   * @param {String} delim      The multi-value delimiter\n   * @param {String} type       The value type to be parsed\n   * @param {Array.<?>} result        The array to append results to, varies on value type\n   * @param {String} innerMulti The inner delimiter to split each value with\n   * @param {ICAL.design.designSet} designSet   The design data for this value\n   * @return {?|Array.<?>}            Either an array of results, or the first result\n   */\n\n  parser._parseMultiValue = function (buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n    var pos = 0;\n    var lastPos = 0;\n    var value;\n\n    if (delim.length === 0) {\n      return buffer;\n    } // split each piece\n\n\n    while ((pos = helpers.unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n      value = buffer.substr(lastPos, pos - lastPos);\n\n      if (innerMulti) {\n        value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n      } else {\n        value = parser._parseValue(value, type, designSet, structuredValue);\n      }\n\n      result.push(value);\n      lastPos = pos + delim.length;\n    } // on the last piece take the rest of string\n\n\n    value = buffer.substr(lastPos);\n\n    if (innerMulti) {\n      value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parser._parseValue(value, type, designSet, structuredValue);\n    }\n\n    result.push(value);\n    return result.length == 1 ? result[0] : result;\n  };\n  /**\n   * Process a complete buffer of iCalendar/vCard data line by line, correctly\n   * unfolding content. Each line will be processed with the given callback\n   *\n   * @private\n   * @function ICAL.parse._eachLine\n   * @param {String} buffer                         The buffer to process\n   * @param {function(?String, String)} callback    The callback for each line\n   */\n\n\n  parser._eachLine = function (buffer, callback) {\n    var len = buffer.length;\n    var lastPos = buffer.search(CHAR);\n    var pos = lastPos;\n    var line;\n    var firstChar;\n    var newlineOffset;\n\n    do {\n      pos = buffer.indexOf('\\n', lastPos) + 1;\n\n      if (pos > 1 && buffer[pos - 2] === '\\r') {\n        newlineOffset = 2;\n      } else {\n        newlineOffset = 1;\n      }\n\n      if (pos === 0) {\n        pos = len;\n        newlineOffset = 0;\n      }\n\n      firstChar = buffer[lastPos];\n\n      if (firstChar === ' ' || firstChar === '\\t') {\n        // add to line\n        line += buffer.substr(lastPos + 1, pos - lastPos - (newlineOffset + 1));\n      } else {\n        if (line) callback(null, line); // push line\n\n        line = buffer.substr(lastPos, pos - lastPos - newlineOffset);\n      }\n\n      lastPos = pos;\n    } while (pos !== len); // extra ending line\n\n\n    line = line.trim();\n    if (line.length) callback(null, line);\n  };\n\n  return parser;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Component = function () {\n  'use strict';\n\n  var PROPERTY_INDEX = 1;\n  var COMPONENT_INDEX = 2;\n  var NAME_INDEX = 0;\n  /**\n   * @classdesc\n   * Wraps a jCal component, adding convenience methods to add, remove and\n   * update subcomponents and properties.\n   *\n   * @class\n   * @alias ICAL.Component\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {ICAL.Component} parent     Parent component to associate\n   */\n\n  function Component(jCal, parent) {\n    if (typeof jCal === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    } // mostly for legacy reasons.\n\n\n    this.jCal = jCal;\n    this.parent = parent || null;\n  }\n\n  Component.prototype = {\n    /**\n     * Hydrated properties are inserted into the _properties array at the same\n     * position as in the jCal array, so its possible the array contains\n     * undefined values for unhydrdated properties. To avoid iterating the\n     * array when checking if all properties have been hydrated, we save the\n     * count here.\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedPropertyCount: 0,\n\n    /**\n     * The same count as for _hydratedPropertyCount, but for subcomponents\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedComponentCount: 0,\n\n    /**\n     * The name of this component\n     * @readonly\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The design set for this component, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      var parentDesign = this.parent && this.parent._designSet;\n      return parentDesign || ICAL.design.getDesignSet(this.name);\n    },\n\n    _hydrateComponent: function _hydrateComponent(index) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (this._components[index]) {\n        return this._components[index];\n      }\n\n      var comp = new Component(this.jCal[COMPONENT_INDEX][index], this);\n      this._hydratedComponentCount++;\n      return this._components[index] = comp;\n    },\n    _hydrateProperty: function _hydrateProperty(index) {\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (this._properties[index]) {\n        return this._properties[index];\n      }\n\n      var prop = new ICAL.Property(this.jCal[PROPERTY_INDEX][index], this);\n      this._hydratedPropertyCount++;\n      return this._properties[index] = prop;\n    },\n\n    /**\n     * Finds first sub component, optionally filtered by name.\n     *\n     * @param {String=} name        Optional name to filter by\n     * @return {?ICAL.Component}     The found subcomponent\n     */\n    getFirstSubcomponent: function getFirstSubcomponent(name) {\n      if (name) {\n        var i = 0;\n        var comps = this.jCal[COMPONENT_INDEX];\n        var len = comps.length;\n\n        for (; i < len; i++) {\n          if (comps[i][NAME_INDEX] === name) {\n            var result = this._hydrateComponent(i);\n\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[COMPONENT_INDEX].length) {\n          return this._hydrateComponent(0);\n        }\n      } // ensure we return a value (strict mode)\n\n\n      return null;\n    },\n\n    /**\n     * Finds all sub components, optionally filtering by name.\n     *\n     * @param {String=} name            Optional name to filter by\n     * @return {ICAL.Component[]}       The found sub components\n     */\n    getAllSubcomponents: function getAllSubcomponents(name) {\n      var jCalLen = this.jCal[COMPONENT_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var comps = this.jCal[COMPONENT_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === comps[i][NAME_INDEX]) {\n            result.push(this._hydrateComponent(i));\n          }\n        }\n\n        return result;\n      } else {\n        if (!this._components || this._hydratedComponentCount !== jCalLen) {\n          for (; i < jCalLen; i++) {\n            this._hydrateComponent(i);\n          }\n        }\n\n        return this._components || [];\n      }\n    },\n\n    /**\n     * Returns true when a named property exists.\n     *\n     * @param {String} name     The property name\n     * @return {Boolean}        True, when property is found\n     */\n    hasProperty: function hasProperty(name) {\n      var props = this.jCal[PROPERTY_INDEX];\n      var len = props.length;\n      var i = 0;\n\n      for (; i < len; i++) {\n        // 0 is property name\n        if (props[i][NAME_INDEX] === name) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Finds the first property, optionally with the given name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {?ICAL.Property}     The found property\n     */\n    getFirstProperty: function getFirstProperty(name) {\n      if (name) {\n        var i = 0;\n        var props = this.jCal[PROPERTY_INDEX];\n        var len = props.length;\n\n        for (; i < len; i++) {\n          if (props[i][NAME_INDEX] === name) {\n            var result = this._hydrateProperty(i);\n\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[PROPERTY_INDEX].length) {\n          return this._hydrateProperty(0);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns first property's value, if available.\n     *\n     * @param {String=} name    Lowercase property name\n     * @return {?String}        The found property value.\n     */\n    getFirstPropertyValue: function getFirstPropertyValue(name) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        return prop.getFirstValue();\n      }\n\n      return null;\n    },\n\n    /**\n     * Get all properties in the component, optionally filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {ICAL.Property[]}    List of properties\n     */\n    getAllProperties: function getAllProperties(name) {\n      var jCalLen = this.jCal[PROPERTY_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var props = this.jCal[PROPERTY_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === props[i][NAME_INDEX]) {\n            result.push(this._hydrateProperty(i));\n          }\n        }\n\n        return result;\n      } else {\n        if (!this._properties || this._hydratedPropertyCount !== jCalLen) {\n          for (; i < jCalLen; i++) {\n            this._hydrateProperty(i);\n          }\n        }\n\n        return this._properties || [];\n      }\n    },\n    _removeObjectByIndex: function _removeObjectByIndex(jCalIndex, cache, index) {\n      cache = cache || []; // remove cached version\n\n      if (cache[index]) {\n        var obj = cache[index];\n\n        if (\"parent\" in obj) {\n          obj.parent = null;\n        }\n      }\n\n      cache.splice(index, 1); // remove it from the jCal\n\n      this.jCal[jCalIndex].splice(index, 1);\n    },\n    _removeObject: function _removeObject(jCalIndex, cache, nameOrObject) {\n      var i = 0;\n      var objects = this.jCal[jCalIndex];\n      var len = objects.length;\n      var cached = this[cache];\n\n      if (typeof nameOrObject === 'string') {\n        for (; i < len; i++) {\n          if (objects[i][NAME_INDEX] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n\n            return true;\n          }\n        }\n      } else if (cached) {\n        for (; i < len; i++) {\n          if (cached[i] && cached[i] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    _removeAllObjects: function _removeAllObjects(jCalIndex, cache, name) {\n      var cached = this[cache]; // Unfortunately we have to run through all children to reset their\n      // parent property.\n\n      var objects = this.jCal[jCalIndex];\n      var i = objects.length - 1; // descending search required because splice\n      // is used and will effect the indices.\n\n      for (; i >= 0; i--) {\n        if (!name || objects[i][NAME_INDEX] === name) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n        }\n      }\n    },\n\n    /**\n     * Adds a single sub component.\n     *\n     * @param {ICAL.Component} component        The component to add\n     * @return {ICAL.Component}                 The passed in component\n     */\n    addSubcomponent: function addSubcomponent(component) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (component.parent) {\n        component.parent.removeSubcomponent(component);\n      }\n\n      var idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n      this._components[idx - 1] = component;\n      this._hydratedComponentCount++;\n      component.parent = this;\n      return component;\n    },\n\n    /**\n     * Removes a single component by name or the instance of a specific\n     * component.\n     *\n     * @param {ICAL.Component|String} nameOrComp    Name of component, or component\n     * @return {Boolean}                            True when comp is removed\n     */\n    removeSubcomponent: function removeSubcomponent(nameOrComp) {\n      var removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n\n      if (removed) {\n        this._hydratedComponentCount--;\n      }\n\n      return removed;\n    },\n\n    /**\n     * Removes all components or (if given) all components by a particular\n     * name.\n     *\n     * @param {String=} name            Lowercase component name\n     */\n    removeAllSubcomponents: function removeAllSubcomponents(name) {\n      var removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n\n      this._hydratedComponentCount = 0;\n      return removed;\n    },\n\n    /**\n     * Adds an {@link ICAL.Property} to the component.\n     *\n     * @param {ICAL.Property} property      The property to add\n     * @return {ICAL.Property}              The passed in property\n     */\n    addProperty: function addProperty(property) {\n      if (!(property instanceof ICAL.Property)) {\n        throw new TypeError('must instance of ICAL.Property');\n      }\n\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (property.parent) {\n        property.parent.removeProperty(property);\n      }\n\n      var idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n      this._properties[idx - 1] = property;\n      this._hydratedPropertyCount++;\n      property.parent = this;\n      return property;\n    },\n\n    /**\n     * Helper method to add a property with a value to the component.\n     *\n     * @param {String}               name         Property name to add\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    addPropertyWithValue: function addPropertyWithValue(name, value) {\n      var prop = new ICAL.Property(name);\n      prop.setValue(value);\n      this.addProperty(prop);\n      return prop;\n    },\n\n    /**\n     * Helper method that will update or create a property of the given name\n     * and sets its value. If multiple properties with the given name exist,\n     * only the first is updated.\n     *\n     * @param {String}               name         Property name to update\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    updatePropertyWithValue: function updatePropertyWithValue(name, value) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        prop.setValue(value);\n      } else {\n        prop = this.addPropertyWithValue(name, value);\n      }\n\n      return prop;\n    },\n\n    /**\n     * Removes a single property by name or the instance of the specific\n     * property.\n     *\n     * @param {String|ICAL.Property} nameOrProp     Property name or instance to remove\n     * @return {Boolean}                            True, when deleted\n     */\n    removeProperty: function removeProperty(nameOrProp) {\n      var removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n\n      if (removed) {\n        this._hydratedPropertyCount--;\n      }\n\n      return removed;\n    },\n\n    /**\n     * Removes all properties associated with this component, optionally\n     * filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {Boolean}            True, when deleted\n     */\n    removeAllProperties: function removeAllProperties(name) {\n      var removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n\n      this._hydratedPropertyCount = 0;\n      return removed;\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toString: function toString() {\n      return ICAL.stringify.component(this.jCal, this._designSet);\n    }\n  };\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n\n  Component.fromString = function (str) {\n    return new Component(ICAL.parse.component(str));\n  };\n\n  return Component;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Property = function () {\n  'use strict';\n\n  var NAME_INDEX = 0;\n  var PROP_INDEX = 1;\n  var TYPE_INDEX = 2;\n  var VALUE_INDEX = 3;\n  var design = ICAL.design;\n  /**\n   * @classdesc\n   * Provides a layer on top of the raw jCal object for manipulating a single\n   * property, with its parameters and value.\n   *\n   * @description\n   * Its important to note that mutations done in the wrapper\n   * directly mutate the jCal object used to initialize.\n   *\n   * Can also be used to create new properties by passing\n   * the name of the property (as a String).\n   *\n   * @class\n   * @alias ICAL.Property\n   * @param {Array|String} jCal         Raw jCal representation OR\n   *  the new name of the property\n   *\n   * @param {ICAL.Component=} parent    Parent component\n   */\n\n  function Property(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof jCal === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n\n    this._updateType();\n  }\n\n  Property.prototype = {\n    /**\n     * The value type for this property\n     * @readonly\n     * @type {String}\n     */\n    get type() {\n      return this.jCal[TYPE_INDEX];\n    },\n\n    /**\n     * The name of this property, in lowercase.\n     * @readonly\n     * @type {String}\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The parent component for this property.\n     * @type {ICAL.Component}\n     */\n    get parent() {\n      return this._parent;\n    },\n\n    set parent(p) {\n      // Before setting the parent, check if the design set has changed. If it\n      // has, we later need to update the type if it was unknown before.\n      var designSetChanged = !this._parent || p && p._designSet != this._parent._designSet;\n      this._parent = p;\n\n      if (this.type == design.defaultType && designSetChanged) {\n        this.jCal[TYPE_INDEX] = this.getDefaultType();\n\n        this._updateType();\n      }\n\n      return p;\n    },\n\n    /**\n     * The design set for this property, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      return this.parent ? this.parent._designSet : design.defaultSet;\n    },\n\n    /**\n     * Updates the type metadata from the current jCal type and design set.\n     *\n     * @private\n     */\n    _updateType: function _updateType() {\n      var designSet = this._designSet;\n\n      if (this.type in designSet.value) {\n        var designType = designSet.value[this.type];\n\n        if ('decorate' in designSet.value[this.type]) {\n          this.isDecorated = true;\n        } else {\n          this.isDecorated = false;\n        }\n\n        if (this.name in designSet.property) {\n          this.isMultiValue = 'multiValue' in designSet.property[this.name];\n          this.isStructuredValue = 'structuredValue' in designSet.property[this.name];\n        }\n      }\n    },\n\n    /**\n     * Hydrate a single value. The act of hydrating means turning the raw jCal\n     * value into a potentially wrapped object, for example {@link ICAL.Time}.\n     *\n     * @private\n     * @param {Number} index        The index of the value to hydrate\n     * @return {Object}             The decorated value.\n     */\n    _hydrateValue: function _hydrateValue(index) {\n      if (this._values && this._values[index]) {\n        return this._values[index];\n      } // for the case where there is no value.\n\n\n      if (this.jCal.length <= VALUE_INDEX + index) {\n        return null;\n      }\n\n      if (this.isDecorated) {\n        if (!this._values) {\n          this._values = [];\n        }\n\n        return this._values[index] = this._decorate(this.jCal[VALUE_INDEX + index]);\n      } else {\n        return this.jCal[VALUE_INDEX + index];\n      }\n    },\n\n    /**\n     * Decorate a single value, returning its wrapped object. This is used by\n     * the hydrate function to actually wrap the value.\n     *\n     * @private\n     * @param {?} value         The value to decorate\n     * @return {Object}         The decorated value\n     */\n    _decorate: function _decorate(value) {\n      return this._designSet.value[this.type].decorate(value, this);\n    },\n\n    /**\n     * Undecorate a single value, returning its raw jCal data.\n     *\n     * @private\n     * @param {Object} value         The value to undecorate\n     * @return {?}                   The undecorated value\n     */\n    _undecorate: function _undecorate(value) {\n      return this._designSet.value[this.type].undecorate(value, this);\n    },\n\n    /**\n     * Sets the value at the given index while also hydrating it. The passed\n     * value can either be a decorated or undecorated value.\n     *\n     * @private\n     * @param {?} value             The value to set\n     * @param {Number} index        The index to set it at\n     */\n    _setDecoratedValue: function _setDecoratedValue(value, index) {\n      if (!this._values) {\n        this._values = [];\n      }\n\n      if (typeof value === 'object' && 'icaltype' in value) {\n        // decorated value\n        this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n        this._values[index] = value;\n      } else {\n        // undecorated value\n        this.jCal[VALUE_INDEX + index] = value;\n        this._values[index] = this._decorate(value);\n      }\n    },\n\n    /**\n     * Gets a parameter on the property.\n     *\n     * @param {String}        name   Property name (lowercase)\n     * @return {Array|String}        Property value\n     */\n    getParameter: function getParameter(name) {\n      if (name in this.jCal[PROP_INDEX]) {\n        return this.jCal[PROP_INDEX][name];\n      } else {\n        return undefined;\n      }\n    },\n\n    /**\n     * Gets first parameter on the property.\n     *\n     * @param {String}        name   Property name (lowercase)\n     * @return {String}        Property value\n     */\n    getFirstParameter: function getFirstParameter(name) {\n      var parameters = this.getParameter(name);\n\n      if (Array.isArray(parameters)) {\n        return parameters[0];\n      }\n\n      return parameters;\n    },\n\n    /**\n     * Sets a parameter on the property.\n     *\n     * @param {String}       name     The parameter name\n     * @param {Array|String} value    The parameter value\n     */\n    setParameter: function setParameter(name, value) {\n      var lcname = name.toLowerCase();\n\n      if (typeof value === \"string\" && lcname in this._designSet.param && 'multiValue' in this._designSet.param[lcname]) {\n        value = [value];\n      }\n\n      this.jCal[PROP_INDEX][name] = value;\n    },\n\n    /**\n     * Removes a parameter\n     *\n     * @param {String} name     The parameter name\n     */\n    removeParameter: function removeParameter(name) {\n      delete this.jCal[PROP_INDEX][name];\n    },\n\n    /**\n     * Get the default type based on this property's name.\n     *\n     * @return {String}     The default type for this property\n     */\n    getDefaultType: function getDefaultType() {\n      var name = this.jCal[NAME_INDEX];\n      var designSet = this._designSet;\n\n      if (name in designSet.property) {\n        var details = designSet.property[name];\n\n        if ('defaultType' in details) {\n          return details.defaultType;\n        }\n      }\n\n      return design.defaultType;\n    },\n\n    /**\n     * Sets type of property and clears out any existing values of the current\n     * type.\n     *\n     * @param {String} type     New iCAL type (see design.*.values)\n     */\n    resetType: function resetType(type) {\n      this.removeAllValues();\n      this.jCal[TYPE_INDEX] = type;\n\n      this._updateType();\n    },\n\n    /**\n     * Finds the first property value.\n     *\n     * @return {String}         First property value\n     */\n    getFirstValue: function getFirstValue() {\n      return this._hydrateValue(0);\n    },\n\n    /**\n     * Gets all values on the property.\n     *\n     * NOTE: this creates an array during each call.\n     *\n     * @return {Array}          List of values\n     */\n    getValues: function getValues() {\n      var len = this.jCal.length - VALUE_INDEX;\n\n      if (len < 1) {\n        // its possible for a property to have no value.\n        return [];\n      }\n\n      var i = 0;\n      var result = [];\n\n      for (; i < len; i++) {\n        result[i] = this._hydrateValue(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Removes all values from this property\n     */\n    removeAllValues: function removeAllValues() {\n      if (this._values) {\n        this._values.length = 0;\n      }\n\n      this.jCal.length = 3;\n    },\n\n    /**\n     * Sets the values of the property.  Will overwrite the existing values.\n     * This can only be used for multi-value properties.\n     *\n     * @param {Array} values    An array of values\n     */\n    setValues: function setValues(values) {\n      if (!this.isMultiValue) {\n        throw new Error(this.name + ': does not not support mulitValue.\\n' + 'override isMultiValue');\n      }\n\n      var len = values.length;\n      var i = 0;\n      this.removeAllValues();\n\n      if (len > 0 && typeof values[0] === 'object' && 'icaltype' in values[0]) {\n        this.resetType(values[0].icaltype);\n      }\n\n      if (this.isDecorated) {\n        for (; i < len; i++) {\n          this._setDecoratedValue(values[i], i);\n        }\n      } else {\n        for (; i < len; i++) {\n          this.jCal[VALUE_INDEX + i] = values[i];\n        }\n      }\n    },\n\n    /**\n     * Sets the current value of the property. If this is a multi-value\n     * property, all other values will be removed.\n     *\n     * @param {String|Object} value     New property value.\n     */\n    setValue: function setValue(value) {\n      this.removeAllValues();\n\n      if (typeof value === 'object' && 'icaltype' in value) {\n        this.resetType(value.icaltype);\n      }\n\n      if (this.isDecorated) {\n        this._setDecoratedValue(value, 0);\n      } else {\n        this.jCal[VALUE_INDEX] = value;\n      }\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return ICAL.stringify.property(this.jCal, this._designSet, true);\n    }\n  };\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str                        The iCalendar string to parse\n   * @param {ICAL.design.designSet=} designSet  The design data to use for this property\n   * @return {ICAL.Property}                    The created iCalendar property\n   */\n\n  Property.fromString = function (str, designSet) {\n    return new Property(ICAL.parse.property(str, designSet));\n  };\n\n  return Property;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.UtcOffset = function () {\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.UtcOffset\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  function UtcOffset(aData) {\n    this.fromData(aData);\n  }\n\n  UtcOffset.prototype = {\n    /**\n     * The hours in the utc-offset\n     * @type {Number}\n     */\n    hours: 0,\n\n    /**\n     * The minutes in the utc-offset\n     * @type {Number}\n     */\n    minutes: 0,\n\n    /**\n     * The sign of the utc offset, 1 for positive offset, -1 for negative\n     * offsets.\n     * @type {Number}\n     */\n    factor: 1,\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"utc-offset\"\n     */\n    icaltype: \"utc-offset\",\n\n    /**\n     * Returns a clone of the utc offset object.\n     *\n     * @return {ICAL.UtcOffset}     The cloned object\n     */\n    clone: function clone() {\n      return ICAL.UtcOffset.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData          An object with members of the utc offset\n     * @param {Number=} aData.hours   The hours for the utc offset\n     * @param {Number=} aData.minutes The minutes in the utc offset\n     * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n     */\n    fromData: function fromData(aData) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (aData.hasOwnProperty(key)) {\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      this._normalize();\n    },\n\n    /**\n     * Sets up the current instance from the given seconds value. The seconds\n     * value is truncated to the minute. Offsets are wrapped when the world\n     * ends, the hour after UTC+14:00 is UTC-12:00.\n     *\n     * @param {Number} aSeconds         The seconds to convert into an offset\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n      this.factor = aSeconds < 0 ? -1 : 1;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      return this;\n    },\n\n    /**\n     * Convert the current offset to a value in seconds\n     *\n     * @return {Number}                 The offset in seconds\n     */\n    toSeconds: function toSeconds() {\n      return this.factor * (60 * this.minutes + 3600 * this.hours);\n    },\n\n    /**\n     * Compare this utc offset with another one.\n     *\n     * @param {ICAL.UtcOffset} other        The other offset to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toSeconds();\n      var b = other.toSeconds();\n      return (a > b) - (b > a);\n    },\n    _normalize: function _normalize() {\n      // Range: 97200 seconds (with 1 hour inbetween)\n      var secs = this.toSeconds();\n      var factor = this.factor;\n\n      while (secs < -43200) {\n        // = UTC-12:00\n        secs += 97200;\n      }\n\n      while (secs > 50400) {\n        // = UTC+14:00\n        secs -= 97200;\n      }\n\n      this.fromSeconds(secs); // Avoid changing the factor when on zero seconds\n\n      if (secs == 0) {\n        this.factor = factor;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this utc-offset.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return ICAL.design.icalendar.value['utc-offset'].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this utc-offset.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.factor == 1 ? \"+\" : \"-\") + ICAL.helpers.pad2(this.hours) + ':' + ICAL.helpers.pad2(this.minutes);\n    }\n  };\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {ICAL.Duration}    The created utc-offset instance\n   */\n\n  UtcOffset.fromString = function (aString) {\n    // -05:00\n    var options = {}; //TODO: support seconds per rfc5545 ?\n\n    options.factor = aString[0] === '+' ? 1 : -1;\n    options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2));\n    options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2));\n    return new ICAL.UtcOffset(options);\n  };\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n\n\n  UtcOffset.fromSeconds = function (aSeconds) {\n    var instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  };\n\n  return UtcOffset;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Binary = function () {\n  /**\n   * @classdesc\n   * Represents the BINARY value type, which contains extra methods for\n   * encoding and decoding.\n   *\n   * @class\n   * @alias ICAL.Binary\n   * @param {String} aValue     The binary data for this value\n   */\n  function Binary(aValue) {\n    this.value = aValue;\n  }\n\n  Binary.prototype = {\n    /**\n     * The type name, to be used in the jCal object.\n     * @default \"binary\"\n     * @constant\n     */\n    icaltype: \"binary\",\n\n    /**\n     * Base64 decode the current value\n     *\n     * @return {String}         The base64-decoded value\n     */\n    decodeValue: function decodeValue() {\n      return this._b64_decode(this.value);\n    },\n\n    /**\n     * Encodes the passed parameter with base64 and sets the internal\n     * value to the result.\n     *\n     * @param {String} aValue      The raw binary value to encode\n     */\n    setEncodedValue: function setEncodedValue(aValue) {\n      this.value = this._b64_encode(aValue);\n    },\n    _b64_encode: function base64_encode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Bayron Guevara\n      // +   improved by: Thunder.m\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   improved by: Rafał Kukawski (http://kukawski.pl)\n      // *     example 1: base64_encode('Kevin van Zonneveld');\n      // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['atob'] == 'function') {\n      //    return atob(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1,\n          o2,\n          o3,\n          h1,\n          h2,\n          h3,\n          h4,\n          bits,\n          i = 0,\n          ac = 0,\n          enc = \"\",\n          tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      do {\n        // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n        bits = o1 << 16 | o2 << 8 | o3;\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f; // use hexets to index into b64, and append result to encoded string\n\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n      } while (i < data.length);\n\n      enc = tmp_arr.join('');\n      var r = data.length % 3;\n      return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n    },\n    _b64_decode: function base64_decode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Thunder.m\n      // +      input by: Aman Gupta\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Onno Marsman\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +      input by: Brett Zamir (http://brett-zamir.me)\n      // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n      // *     returns 1: 'Kevin van Zonneveld'\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['btoa'] == 'function') {\n      //    return btoa(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1,\n          o2,\n          o3,\n          h1,\n          h2,\n          h3,\n          h4,\n          bits,\n          i = 0,\n          ac = 0,\n          dec = \"\",\n          tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      data += '';\n\n      do {\n        // unpack four hexets into three octets using index points in b64\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n        o1 = bits >> 16 & 0xff;\n        o2 = bits >> 8 & 0xff;\n        o3 = bits & 0xff;\n\n        if (h3 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n      } while (i < data.length);\n\n      dec = tmp_arr.join('');\n      return dec;\n    },\n\n    /**\n     * The string representation of this value\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.value;\n    }\n  };\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {ICAL.Binary}          The binary value instance\n   */\n\n  Binary.fromString = function (aString) {\n    return new Binary(aString);\n  };\n\n  return Binary;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  /**\n   * @classdesc\n   * This class represents the \"period\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @description\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @class\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   */\n  ICAL.Period = function icalperiod(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof ICAL.Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof ICAL.Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof ICAL.Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n\n      this.duration = aData.duration;\n    }\n  };\n\n  ICAL.Period.prototype = {\n    /**\n     * The start of the period\n     * @type {ICAL.Time}\n     */\n    start: null,\n\n    /**\n     * The end of the period\n     * @type {ICAL.Time}\n     */\n    end: null,\n\n    /**\n     * The duration of the period\n     * @type {ICAL.Duration}\n     */\n    duration: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalperiod\"\n     */\n    icalclass: \"icalperiod\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"period\"\n     */\n    icaltype: \"period\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Period}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Period.fromData({\n        start: this.start ? this.start.clone() : null,\n        end: this.end ? this.end.clone() : null,\n        duration: this.duration ? this.duration.clone() : null\n      });\n    },\n\n    /**\n     * Calculates the duration of the period, either directly or by subtracting\n     * start from end date.\n     *\n     * @return {ICAL.Duration}      The calculated duration\n     */\n    getDuration: function duration() {\n      if (this.duration) {\n        return this.duration;\n      } else {\n        return this.end.subtractDate(this.start);\n      }\n    },\n\n    /**\n     * Calculates the end date of the period, either directly or by adding\n     * duration to start date.\n     *\n     * @return {ICAL.Time}          The calculated end date\n     */\n    getEnd: function getEnd() {\n      if (this.end) {\n        return this.end;\n      } else {\n        var end = this.start.clone();\n        end.addDuration(this.duration);\n        return end;\n      }\n    },\n\n    /**\n     * The string representation of this period.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.start + \"/\" + (this.end || this.duration);\n    },\n\n    /**\n     * The jCal representation of this period type.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      return [this.start.toString(), (this.end || this.duration).toString()];\n    },\n\n    /**\n     * The iCalendar string representation of this period.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return this.start.toICALString() + \"/\" + (this.end || this.duration).toICALString();\n    }\n  };\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {ICAL.Property} prop    The property this period will be on\n   * @return {ICAL.Period}          The created period instance\n   */\n\n  ICAL.Period.fromString = function fromString(str, prop) {\n    var parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error('Invalid string value: \"' + str + '\" must contain a \"/\" char.');\n    }\n\n    var options = {\n      start: ICAL.Time.fromDateTimeString(parts[0], prop)\n    };\n    var end = parts[1];\n\n    if (ICAL.Duration.isValueString(end)) {\n      options.duration = ICAL.Duration.fromString(end);\n    } else {\n      options.end = ICAL.Time.fromDateTimeString(end, prop);\n    }\n\n    return new ICAL.Period(options);\n  };\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   * @return {ICAL.Period}                  The period instance\n   */\n\n\n  ICAL.Period.fromData = function fromData(aData) {\n    return new ICAL.Period(aData);\n  };\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {Array<String,String>} aData    The jCal data array\n   * @param {ICAL.Property} aProp           The property this jCal data is on\n   * @param {Boolean} aLenient              If true, data value can be both date and date-time\n   * @return {ICAL.Period}                  The period instance\n   */\n\n\n  ICAL.Period.fromJSON = function (aData, aProp, aLenient) {\n    function fromDateOrDateTimeString(aValue, aProp) {\n      if (aLenient) {\n        return ICAL.Time.fromString(aValue, aProp);\n      } else {\n        return ICAL.Time.fromDateTimeString(aValue, aProp);\n      }\n    }\n\n    if (ICAL.Duration.isValueString(aData[1])) {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        duration: ICAL.Duration.fromString(aData[1])\n      });\n    } else {\n      return ICAL.Period.fromData({\n        start: fromDateOrDateTimeString(aData[0], aProp),\n        end: fromDateOrDateTimeString(aData[1], aProp)\n      });\n    }\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  var DURATION_LETTERS = /([PDWHMTS]{1,1})/;\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Duration\n   * @param {Object} data               An object with members of the duration\n   * @param {Number} data.weeks         Duration in weeks\n   * @param {Number} data.days          Duration in days\n   * @param {Number} data.hours         Duration in hours\n   * @param {Number} data.minutes       Duration in minutes\n   * @param {Number} data.seconds       Duration in seconds\n   * @param {Boolean} data.isNegative   If true, the duration is negative\n   */\n\n  ICAL.Duration = function icalduration(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Duration.prototype = {\n    /**\n     * The weeks in this duration\n     * @type {Number}\n     * @default 0\n     */\n    weeks: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    days: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    hours: 0,\n\n    /**\n     * The minutes in this duration\n     * @type {Number}\n     * @default 0\n     */\n    minutes: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Number}\n     * @default 0\n     */\n    seconds: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Boolean}\n     * @default false\n     */\n    isNegative: false,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalduration\"\n     */\n    icalclass: \"icalduration\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"duration\"\n     */\n    icaltype: \"duration\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Duration}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Duration.fromData(this);\n    },\n\n    /**\n     * The duration value expressed as a number of seconds.\n     *\n     * @return {Number}             The duration value in seconds\n     */\n    toSeconds: function toSeconds() {\n      var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours + 86400 * this.days + 7 * 86400 * this.weeks;\n      return this.isNegative ? -seconds : seconds;\n    },\n\n    /**\n     * Reads the passed seconds value into this duration object. Afterwards,\n     * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n     * accordingly.\n     *\n     * @param {Number} aSeconds     The duration value in seconds\n     * @return {ICAL.Duration}      Returns this instance\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n      this.isNegative = aSeconds < 0;\n      this.days = ICAL.helpers.trunc(secs / 86400); // If we have a flat number of weeks, use them.\n\n      if (this.days % 7 == 0) {\n        this.weeks = this.days / 7;\n        this.days = 0;\n      } else {\n        this.weeks = 0;\n      }\n\n      secs -= (this.days + 7 * this.weeks) * 86400;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      secs -= this.minutes * 60;\n      this.seconds = secs;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData               An object with members of the duration\n     * @param {Number} aData.weeks         Duration in weeks\n     * @param {Number} aData.days          Duration in days\n     * @param {Number} aData.hours         Duration in hours\n     * @param {Number} aData.minutes       Duration in minutes\n     * @param {Number} aData.seconds       Duration in seconds\n     * @param {Boolean} aData.isNegative   If true, the duration is negative\n     */\n    fromData: function fromData(aData) {\n      var propsToCopy = [\"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"isNegative\"];\n\n      for (var key in propsToCopy) {\n        /* istanbul ignore if */\n        if (!propsToCopy.hasOwnProperty(key)) {\n          continue;\n        }\n\n        var prop = propsToCopy[key];\n\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        } else {\n          this[prop] = 0;\n        }\n      }\n    },\n\n    /**\n     * Resets the duration instance to the default values, i.e. PT0S\n     */\n    reset: function reset() {\n      this.isNegative = false;\n      this.weeks = 0;\n      this.days = 0;\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n    },\n\n    /**\n     * Compares the duration instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function compare(aOther) {\n      var thisSeconds = this.toSeconds();\n      var otherSeconds = aOther.toSeconds();\n      return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n    },\n\n    /**\n     * Normalizes the duration instance. For example, a duration with a value\n     * of 61 seconds will be normalized to 1 minute and 1 second.\n     */\n    normalize: function normalize() {\n      this.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * The string representation of this duration.\n     * @return {String}\n     */\n    toString: function toString() {\n      if (this.toSeconds() == 0) {\n        return \"PT0S\";\n      } else {\n        var str = \"\";\n        if (this.isNegative) str += \"-\";\n        str += \"P\";\n        if (this.weeks) str += this.weeks + \"W\";\n        if (this.days) str += this.days + \"D\";\n\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) str += this.hours + \"H\";\n          if (this.minutes) str += this.minutes + \"M\";\n          if (this.seconds) str += this.seconds + \"S\";\n        }\n\n        return str;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this duration.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return this.toString();\n    }\n  };\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {ICAL.Duration}        The newly created duration instance\n   */\n\n  ICAL.Duration.fromSeconds = function icalduration_from_seconds(aSeconds) {\n    return new ICAL.Duration().fromSeconds(aSeconds);\n  };\n  /**\n   * Internal helper function to handle a chunk of a duration.\n   *\n   * @param {String} letter type of duration chunk\n   * @param {String} number numeric value or -/+\n   * @param {Object} dict target to assign values to\n   */\n\n\n  function parseDurationChunk(letter, number, object) {\n    var type;\n\n    switch (letter) {\n      case 'P':\n        if (number && number === '-') {\n          object.isNegative = true;\n        } else {\n          object.isNegative = false;\n        } // period\n\n\n        break;\n\n      case 'D':\n        type = 'days';\n        break;\n\n      case 'W':\n        type = 'weeks';\n        break;\n\n      case 'H':\n        type = 'hours';\n        break;\n\n      case 'M':\n        type = 'minutes';\n        break;\n\n      case 'S':\n        type = 'seconds';\n        break;\n\n      default:\n        // Not a valid chunk\n        return 0;\n    }\n\n    if (type) {\n      if (!number && number !== 0) {\n        throw new Error('invalid duration value: Missing number before \"' + letter + '\"');\n      }\n\n      var num = parseInt(number, 10);\n\n      if (ICAL.helpers.isStrictlyNaN(num)) {\n        throw new Error('invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"');\n      }\n\n      object[type] = num;\n    }\n\n    return 1;\n  }\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n\n\n  ICAL.Duration.isValueString = function (string) {\n    return string[0] === 'P' || string[1] === 'P';\n  };\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {ICAL.Duration}    The created duration instance\n   */\n\n\n  ICAL.Duration.fromString = function icalduration_from_string(aStr) {\n    var pos = 0;\n    var dict = Object.create(null);\n    var chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      var type = aStr[pos];\n      var numeric = aStr.substr(0, pos);\n      aStr = aStr.substr(pos + 1);\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error('invalid duration value: Not enough duration components in \"' + aStr + '\"');\n    }\n\n    return new ICAL.Duration(dict);\n  };\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData               An object with members of the duration\n   * @param {Number} aData.weeks         Duration in weeks\n   * @param {Number} aData.days          Duration in days\n   * @param {Number} aData.hours         Duration in hours\n   * @param {Number} aData.minutes       Duration in minutes\n   * @param {Number} aData.seconds       Duration in seconds\n   * @param {Boolean} aData.isNegative   If true, the duration is negative\n   * @return {ICAL.Duration}             The createad duration instance\n   */\n\n\n  ICAL.Duration.fromData = function icalduration_from_data(aData) {\n    return new ICAL.Duration(aData);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2012 */\n\n\n(function () {\n  var OPTIONS = [\"tzid\", \"location\", \"tznames\", \"latitude\", \"longitude\"];\n  /**\n   * @classdesc\n   * Timezone representation, created by passing in a tzid and component.\n   *\n   * @example\n   * var vcalendar;\n   * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n   * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n   *\n   * var timezone = new ICAL.Timezone({\n   *   component: timezoneComp,\n   *   tzid\n   * });\n   *\n   * @class\n   * @param {ICAL.Component|Object} data options for class\n   * @param {String|ICAL.Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n\n  ICAL.Timezone = function icaltimezone(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Timezone.prototype = {\n    /**\n     * Timezone identifier\n     * @type {String}\n     */\n    tzid: \"\",\n\n    /**\n     * Timezone location\n     * @type {String}\n     */\n    location: \"\",\n\n    /**\n     * Alternative timezone name, for the string representation\n     * @type {String}\n     */\n    tznames: \"\",\n\n    /**\n     * The primary latitude for the timezone.\n     * @type {Number}\n     */\n    latitude: 0.0,\n\n    /**\n     * The primary longitude for the timezone.\n     * @type {Number}\n     */\n    longitude: 0.0,\n\n    /**\n     * The vtimezone component for this timezone.\n     * @type {ICAL.Component}\n     */\n    component: null,\n\n    /**\n     * The year this timezone has been expanded to. All timezone transition\n     * dates until this year are known and can be used for calculation\n     *\n     * @private\n     * @type {Number}\n     */\n    expandedUntilYear: 0,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltimezone\"\n     */\n    icalclass: \"icaltimezone\",\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {ICAL.Component|Object} aData options for class\n     * @param {String|ICAL.Component} aData.component\n     *        If aData is a simple object, then this member can be set to either a\n     *        string containing the component data, or an already parsed\n     *        ICAL.Component\n     * @param {String} aData.tzid      The timezone identifier\n     * @param {String} aData.location  The timezone locationw\n     * @param {String} aData.tznames   An alternative string representation of the\n     *                                  timezone\n     * @param {Number} aData.latitude  The latitude of the timezone\n     * @param {Number} aData.longitude The longitude of the timezone\n     */\n    fromData: function fromData(aData) {\n      this.expandedUntilYear = 0;\n      this.changes = [];\n\n      if (aData instanceof ICAL.Component) {\n        // Either a component is passed directly\n        this.component = aData;\n      } else {\n        // Otherwise the component may be in the data object\n        if (aData && \"component\" in aData) {\n          if (typeof aData.component == \"string\") {\n            // If a string was passed, parse it as a component\n            var jCal = ICAL.parse(aData.component);\n            this.component = new ICAL.Component(jCal);\n          } else if (aData.component instanceof ICAL.Component) {\n            // If it was a component already, then just set it\n            this.component = aData.component;\n          } else {\n            // Otherwise just null out the component\n            this.component = null;\n          }\n        } // Copy remaining passed properties\n\n\n        for (var key in OPTIONS) {\n          /* istanbul ignore else */\n          if (OPTIONS.hasOwnProperty(key)) {\n            var prop = OPTIONS[key];\n\n            if (aData && prop in aData) {\n              this[prop] = aData[prop];\n            }\n          }\n        }\n      } // If we have a component but no TZID, attempt to get it from the\n      // component's properties.\n\n\n      if (this.component instanceof ICAL.Component && !this.tzid) {\n        this.tzid = this.component.getFirstPropertyValue('tzid');\n      }\n\n      return this;\n    },\n\n    /**\n     * Finds the utcOffset the given time would occur in this timezone.\n     *\n     * @param {ICAL.Time} tt        The time to check for\n     * @return {Number} utc offset in seconds\n     */\n    utcOffset: function utcOffset(tt) {\n      if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) {\n        return 0;\n      }\n\n      this._ensureCoverage(tt.year);\n\n      if (!this.changes.length) {\n        return 0;\n      }\n\n      var tt_change = {\n        year: tt.year,\n        month: tt.month,\n        day: tt.day,\n        hour: tt.hour,\n        minute: tt.minute,\n        second: tt.second\n      };\n\n      var change_num = this._findNearbyChange(tt_change);\n\n      var change_num_to_use = -1;\n      var step = 1; // TODO: replace with bin search?\n\n      for (;;) {\n        var change = ICAL.helpers.clone(this.changes[change_num], true);\n\n        if (change.utcOffset < change.prevUtcOffset) {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n        } else {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.prevUtcOffset);\n        }\n\n        var cmp = ICAL.Timezone._compare_change_fn(tt_change, change);\n\n        if (cmp >= 0) {\n          change_num_to_use = change_num;\n        } else {\n          step = -1;\n        }\n\n        if (step == -1 && change_num_to_use != -1) {\n          break;\n        }\n\n        change_num += step;\n\n        if (change_num < 0) {\n          return 0;\n        }\n\n        if (change_num >= this.changes.length) {\n          break;\n        }\n      }\n\n      var zone_change = this.changes[change_num_to_use];\n      var utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n      if (utcOffset_change < 0 && change_num_to_use > 0) {\n        var tmp_change = ICAL.helpers.clone(zone_change, true);\n        ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0, tmp_change.prevUtcOffset);\n\n        if (ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n          var prev_zone_change = this.changes[change_num_to_use - 1];\n          var want_daylight = false; // TODO\n\n          if (zone_change.is_daylight != want_daylight && prev_zone_change.is_daylight == want_daylight) {\n            zone_change = prev_zone_change;\n          }\n        }\n      } // TODO return is_daylight?\n\n\n      return zone_change.utcOffset;\n    },\n    _findNearbyChange: function icaltimezone_find_nearby_change(change) {\n      // find the closest match\n      var idx = ICAL.helpers.binsearchInsert(this.changes, change, ICAL.Timezone._compare_change_fn);\n\n      if (idx >= this.changes.length) {\n        return this.changes.length - 1;\n      }\n\n      return idx;\n    },\n    _ensureCoverage: function _ensureCoverage(aYear) {\n      if (ICAL.Timezone._minimumExpansionYear == -1) {\n        var today = ICAL.Time.now();\n        ICAL.Timezone._minimumExpansionYear = today.year;\n      }\n\n      var changesEndYear = aYear;\n\n      if (changesEndYear < ICAL.Timezone._minimumExpansionYear) {\n        changesEndYear = ICAL.Timezone._minimumExpansionYear;\n      }\n\n      changesEndYear += ICAL.Timezone.EXTRA_COVERAGE;\n\n      if (changesEndYear > ICAL.Timezone.MAX_YEAR) {\n        changesEndYear = ICAL.Timezone.MAX_YEAR;\n      }\n\n      if (!this.changes.length || this.expandedUntilYear < aYear) {\n        var subcomps = this.component.getAllSubcomponents();\n        var compLen = subcomps.length;\n        var compIdx = 0;\n\n        for (; compIdx < compLen; compIdx++) {\n          this._expandComponent(subcomps[compIdx], changesEndYear, this.changes);\n        }\n\n        this.changes.sort(ICAL.Timezone._compare_change_fn);\n        this.expandedUntilYear = changesEndYear;\n      }\n    },\n    _expandComponent: function _expandComponent(aComponent, aYear, changes) {\n      if (!aComponent.hasProperty(\"dtstart\") || !aComponent.hasProperty(\"tzoffsetto\") || !aComponent.hasProperty(\"tzoffsetfrom\")) {\n        return null;\n      }\n\n      var dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n      var change;\n\n      function convert_tzoffset(offset) {\n        return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n      }\n\n      function init_changes() {\n        var changebase = {};\n        changebase.is_daylight = aComponent.name == \"daylight\";\n        changebase.utcOffset = convert_tzoffset(aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue());\n        changebase.prevUtcOffset = convert_tzoffset(aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue());\n        return changebase;\n      }\n\n      if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n        change = init_changes();\n        change.year = dtstart.year;\n        change.month = dtstart.month;\n        change.day = dtstart.day;\n        change.hour = dtstart.hour;\n        change.minute = dtstart.minute;\n        change.second = dtstart.second;\n        ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n        changes.push(change);\n      } else {\n        var props = aComponent.getAllProperties(\"rdate\");\n\n        for (var rdatekey in props) {\n          /* istanbul ignore if */\n          if (!props.hasOwnProperty(rdatekey)) {\n            continue;\n          }\n\n          var rdate = props[rdatekey];\n          var time = rdate.getFirstValue();\n          change = init_changes();\n          change.year = time.year;\n          change.month = time.month;\n          change.day = time.day;\n\n          if (time.isDate) {\n            change.hour = dtstart.hour;\n            change.minute = dtstart.minute;\n            change.second = dtstart.second;\n\n            if (dtstart.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n            }\n          } else {\n            change.hour = time.hour;\n            change.minute = time.minute;\n            change.second = time.second;\n\n            if (time.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n            }\n          }\n\n          changes.push(change);\n        }\n\n        var rrule = aComponent.getFirstProperty(\"rrule\");\n\n        if (rrule) {\n          rrule = rrule.getFirstValue();\n          change = init_changes();\n\n          if (rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone) {\n            rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n            rrule.until.zone = ICAL.Timezone.localTimezone;\n          }\n\n          var iterator = rrule.iterator(dtstart);\n          var occ;\n\n          while (occ = iterator.next()) {\n            change = init_changes();\n\n            if (occ.year > aYear || !occ) {\n              break;\n            }\n\n            change.year = occ.year;\n            change.month = occ.month;\n            change.day = occ.day;\n            change.hour = occ.hour;\n            change.minute = occ.minute;\n            change.second = occ.second;\n            change.isDate = occ.isDate;\n            ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n            changes.push(change);\n          }\n        }\n      }\n\n      return changes;\n    },\n\n    /**\n     * The string representation of this timezone.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.tznames ? this.tznames : this.tzid;\n    }\n  };\n\n  ICAL.Timezone._compare_change_fn = function icaltimezone_compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;else if (a.year > b.year) return 1;\n    if (a.month < b.month) return -1;else if (a.month > b.month) return 1;\n    if (a.day < b.day) return -1;else if (a.day > b.day) return 1;\n    if (a.hour < b.hour) return -1;else if (a.hour > b.hour) return 1;\n    if (a.minute < b.minute) return -1;else if (a.minute > b.minute) return 1;\n    if (a.second < b.second) return -1;else if (a.second > b.second) return 1;\n    return 0;\n  };\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {ICAL.Time} tt                  The time to convert\n   * @param {ICAL.Timezone} from_zone       The source zone to convert from\n   * @param {ICAL.Timezone} to_zone         The target zone to convert to\n   * @return {ICAL.Time}                    The converted date/time object\n   */\n\n\n  ICAL.Timezone.convert_time = function icaltimezone_convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate || from_zone.tzid == to_zone.tzid || from_zone == ICAL.Timezone.localTimezone || to_zone == ICAL.Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    var utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, -utcOffset);\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n    return null;\n  };\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {ICAL.Component|Object} aData options for class\n   * @param {String|ICAL.Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n\n\n  ICAL.Timezone.fromData = function icaltimezone_fromData(aData) {\n    var tt = new ICAL.Timezone();\n    return tt.fromData(aData);\n  };\n  /**\n   * The instance describing the UTC timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n\n\n  ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({\n    tzid: \"UTC\"\n  });\n  /**\n   * The instance describing the local timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n\n  ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({\n    tzid: \"floating\"\n  });\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n\n  ICAL.Timezone.adjust_change = function icaltimezone_adjust_change(change, days, hours, minutes, seconds) {\n    return ICAL.Time.prototype.adjust.call(change, days, hours, minutes, seconds, change);\n  };\n\n  ICAL.Timezone._minimumExpansionYear = -1;\n  ICAL.Timezone.MAX_YEAR = 2035; // TODO this is because of time_t, which we don't need. Still usefull?\n\n  ICAL.Timezone.EXTRA_COVERAGE = 5;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.TimezoneService = function () {\n  var zones;\n  /**\n   * @classdesc\n   * Singleton class to contain timezones.  Right now its all manual registry in\n   * the future we may use this class to download timezone information or handle\n   * loading pre-expanded timezones.\n   *\n   * @namespace\n   * @alias ICAL.TimezoneService\n   */\n\n  var TimezoneService = {\n    get count() {\n      return Object.keys(zones).length;\n    },\n\n    reset: function reset() {\n      zones = Object.create(null);\n      var utc = ICAL.Timezone.utcTimezone;\n      zones.Z = utc;\n      zones.UTC = utc;\n      zones.GMT = utc;\n    },\n\n    /**\n     * Checks if timezone id has been registered.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {Boolean}        False, when not present\n     */\n    has: function has(tzid) {\n      return !!zones[tzid];\n    },\n\n    /**\n     * Returns a timezone by its tzid if present.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The timezone, or null if not found\n     */\n    get: function get(tzid) {\n      return zones[tzid];\n    },\n\n    /**\n     * Registers a timezone object or component.\n     *\n     * @param {String=} name\n     *        The name of the timezone. Defaults to the component's TZID if not\n     *        passed.\n     * @param {ICAL.Component|ICAL.Timezone} zone\n     *        The initialized zone or vtimezone.\n     */\n    register: function register(name, timezone) {\n      if (name instanceof ICAL.Component) {\n        if (name.name === 'vtimezone') {\n          timezone = new ICAL.Timezone(name);\n          name = timezone.tzid;\n        }\n      }\n\n      if (timezone instanceof ICAL.Timezone) {\n        zones[name] = timezone;\n      } else {\n        throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n      }\n    },\n\n    /**\n     * Removes a timezone by its tzid from the list.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The removed timezone, or null if not registered\n     */\n    remove: function remove(tzid) {\n      return delete zones[tzid];\n    }\n  }; // initialize defaults\n\n  TimezoneService.reset();\n  return TimezoneService;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  /**\n   * @classdesc\n   * iCalendar Time representation (similar to JS Date object).  Fully\n   * independent of system (OS) timezone / time.  Unlike JS Date, the month\n   * January is 1, not zero.\n   *\n   * @example\n   * var time = new ICAL.Time({\n   *   year: 2012,\n   *   month: 10,\n   *   day: 11\n   *   minute: 0,\n   *   second: 0,\n   *   isDate: false\n   * });\n   *\n   *\n   * @alias ICAL.Time\n   * @class\n   * @param {Object} data           Time initialization\n   * @param {Number=} data.year     The year for this date\n   * @param {Number=} data.month    The month for this date\n   * @param {Number=} data.day      The day for this date\n   * @param {Number=} data.hour     The hour for this date\n   * @param {Number=} data.minute   The minute for this date\n   * @param {Number=} data.second   The second for this date\n   * @param {Boolean=} data.isDate  If true, the instance represents a date (as\n   *                                  opposed to a date-time)\n   * @param {ICAL.Timezone} zone timezone this position occurs in\n   */\n  ICAL.Time = function icaltime(data, zone) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n    /* time defaults */\n\n    time.year = 0;\n    time.month = 1;\n    time.day = 1;\n    time.hour = 0;\n    time.minute = 0;\n    time.second = 0;\n    time.isDate = false;\n    this.fromData(data, zone);\n  };\n\n  ICAL.Time._dowCache = {};\n  ICAL.Time._wnCache = {};\n  ICAL.Time.prototype = {\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltime\"\n     */\n    icalclass: \"icaltime\",\n    _cachedUnixTime: null,\n\n    /**\n     * The type name, to be used in the jCal object. This value may change and\n     * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n     * @readonly\n     * @type {String}\n     * @default \"date-time\"\n     */\n    get icaltype() {\n      return this.isDate ? 'date' : 'date-time';\n    },\n\n    /**\n     * The timezone for this time.\n     * @type {ICAL.Timezone}\n     */\n    zone: null,\n\n    /**\n     * Internal uses to indicate that a change has been made and the next read\n     * operation must attempt to normalize the value (for example changing the\n     * day to 33).\n     *\n     * @type {Boolean}\n     * @private\n     */\n    _pendingNormalization: false,\n\n    /**\n     * Returns a clone of the time object.\n     *\n     * @return {ICAL.Time}              The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Time(this._time, this.zone);\n    },\n\n    /**\n     * Reset the time instance to epoch time\n     */\n    reset: function icaltime_reset() {\n      this.fromData(ICAL.Time.epochTime);\n      this.zone = ICAL.Timezone.utcTimezone;\n    },\n\n    /**\n     * Reset the time instance to the given date/time values.\n     *\n     * @param {Number} year             The year to set\n     * @param {Number} month            The month to set\n     * @param {Number} day              The day to set\n     * @param {Number} hour             The hour to set\n     * @param {Number} minute           The minute to set\n     * @param {Number} second           The second to set\n     * @param {ICAL.Timezone} timezone  The timezone to set\n     */\n    resetTo: function icaltime_resetTo(year, month, day, hour, minute, second, timezone) {\n      this.fromData({\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        zone: timezone\n      });\n    },\n\n    /**\n     * Set up the current instance from the Javascript date value.\n     *\n     * @param {?Date} aDate     The Javascript Date to read, or null to reset\n     * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n     */\n    fromJSDate: function icaltime_fromJSDate(aDate, useUTC) {\n      if (!aDate) {\n        this.reset();\n      } else {\n        if (useUTC) {\n          this.zone = ICAL.Timezone.utcTimezone;\n          this.year = aDate.getUTCFullYear();\n          this.month = aDate.getUTCMonth() + 1;\n          this.day = aDate.getUTCDate();\n          this.hour = aDate.getUTCHours();\n          this.minute = aDate.getUTCMinutes();\n          this.second = aDate.getUTCSeconds();\n        } else {\n          this.zone = ICAL.Timezone.localTimezone;\n          this.year = aDate.getFullYear();\n          this.month = aDate.getMonth() + 1;\n          this.day = aDate.getDate();\n          this.hour = aDate.getHours();\n          this.minute = aDate.getMinutes();\n          this.second = aDate.getSeconds();\n        }\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData            Time initialization\n     * @param {Number=} aData.year      The year for this date\n     * @param {Number=} aData.month     The month for this date\n     * @param {Number=} aData.day       The day for this date\n     * @param {Number=} aData.hour      The hour for this date\n     * @param {Number=} aData.minute    The minute for this date\n     * @param {Number=} aData.second    The second for this date\n     * @param {Boolean=} aData.isDate   If true, the instance represents a date\n     *                                    (as opposed to a date-time)\n     * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n     */\n    fromData: function fromData(aData, aZone) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(aData, key)) {\n            // ical type cannot be set\n            if (key === 'icaltype') continue;\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      if (aZone) {\n        this.zone = aZone;\n      }\n\n      if (aData && !(\"isDate\" in aData)) {\n        this.isDate = !(\"hour\" in aData);\n      } else if (aData && \"isDate\" in aData) {\n        this.isDate = aData.isDate;\n      }\n\n      if (aData && \"timezone\" in aData) {\n        var zone = ICAL.TimezoneService.get(aData.timezone);\n        this.zone = zone || ICAL.Timezone.localTimezone;\n      }\n\n      if (aData && \"zone\" in aData) {\n        this.zone = aData.zone;\n      }\n\n      if (!this.zone) {\n        this.zone = ICAL.Timezone.localTimezone;\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Calculate the day of week.\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time.weekDay}\n     */\n    dayOfWeek: function icaltime_dayOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var dowCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + firstDow;\n\n      if (dowCacheKey in ICAL.Time._dowCache) {\n        return ICAL.Time._dowCache[dowCacheKey];\n      } // Using Zeller's algorithm\n\n\n      var q = this.day;\n      var m = this.month + (this.month < 3 ? 12 : 0);\n      var Y = this.year - (this.month < 3 ? 1 : 0);\n      var h = q + Y + ICAL.helpers.trunc((m + 1) * 26 / 10) + ICAL.helpers.trunc(Y / 4);\n      /* istanbul ignore else */\n\n      if (true\n      /* gregorian */\n      ) {\n          h += ICAL.helpers.trunc(Y / 100) * 6 + ICAL.helpers.trunc(Y / 400);\n        } else {\n        h += 5;\n      } // Normalize to 1 = wkst\n\n\n      h = (h + 7 - firstDow) % 7 + 1;\n      ICAL.Time._dowCache[dowCacheKey] = h;\n      return h;\n    },\n\n    /**\n     * Calculate the day of year.\n     * @return {Number}\n     */\n    dayOfYear: function dayOfYear() {\n      var is_leap = ICAL.Time.isLeapYear(this.year) ? 1 : 0;\n      var diypm = ICAL.Time.daysInYearPassedMonth;\n      return diypm[is_leap][this.month - 1] + this.day;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * week. The resulting ICAL.Time instance is of icaltype date, even if this\n     * is a date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The start of the week (cloned)\n     */\n    startOfWeek: function startOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day -= (this.dayOfWeek() + 7 - firstDow) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the week.\n     * The resulting ICAL.Time instance is of icaltype date, even if this is a\n     * date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The end of the week (cloned)\n     */\n    endOfWeek: function endOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * month. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the month (cloned)\n     */\n    startOfMonth: function startOfMonth() {\n      var result = this.clone();\n      result.day = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * month.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the month (cloned)\n     */\n    endOfMonth: function endOfMonth() {\n      var result = this.clone();\n      result.day = ICAL.Time.daysInMonth(result.month, result.year);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * year. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the year (cloned)\n     */\n    startOfYear: function startOfYear() {\n      var result = this.clone();\n      result.day = 1;\n      result.month = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * year.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the year (cloned)\n     */\n    endOfYear: function endOfYear() {\n      var result = this.clone();\n      result.day = 31;\n      result.month = 12;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * First calculates the start of the week, then returns the day of year for\n     * this date. If the day falls into the previous year, the day is zero or negative.\n     *\n     * @param {ICAL.Time.weekDay=} aFirstDayOfWeek\n     *        The week start weekday, defaults to SUNDAY\n     * @return {Number}     The calculated day of year\n     */\n    startDoyWeek: function startDoyWeek(aFirstDayOfWeek) {\n      var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY;\n      var delta = this.dayOfWeek() - firstDow;\n      if (delta < 0) delta += 7;\n      return this.dayOfYear() - delta;\n    },\n\n    /**\n     * Get the dominical letter for the current year. Letters range from A - G\n     * for common years, and AG to GF for leap years.\n     *\n     * @param {Number} yr           The year to retrieve the letter for\n     * @return {String}             The dominical letter.\n     */\n    getDominicalLetter: function getDominicalLetter() {\n      return ICAL.Time.getDominicalLetter(this.year);\n    },\n\n    /**\n     * Finds the nthWeekDay relative to the current month (not day).  The\n     * returned value is a day relative the month that this month belongs to so\n     * 1 would indicate the first of the month and 40 would indicate a day in\n     * the following month.\n     *\n     * @param {Number} aDayOfWeek   Day of the week see the day name constants\n     * @param {Number} aPos         Nth occurrence of a given week day values\n     *        of 1 and 0 both indicate the first weekday of that type. aPos may\n     *        be either positive or negative\n     *\n     * @return {Number} numeric value indicating a day relative\n     *                   to the current month of this time object\n     */\n    nthWeekDay: function icaltime_nthWeekDay(aDayOfWeek, aPos) {\n      var daysInMonth = ICAL.Time.daysInMonth(this.month, this.year);\n      var weekday;\n      var pos = aPos;\n      var start = 0;\n      var otherDay = this.clone();\n\n      if (pos >= 0) {\n        otherDay.day = 1; // because 0 means no position has been given\n        // 1 and 0 indicate the same day.\n\n        if (pos != 0) {\n          // remove the extra numeric value\n          pos--;\n        } // set current start offset to current day.\n\n\n        start = otherDay.day; // find the current day of week\n\n        var startDow = otherDay.dayOfWeek(); // calculate the difference between current\n        // day of the week and desired day of the week\n\n        var offset = aDayOfWeek - startDow; // if the offset goes into the past\n        // week we add 7 so its goes into the next\n        // week. We only want to go forward in time here.\n\n        if (offset < 0) // this is really important otherwise we would\n          // end up with dates from in the past.\n          offset += 7; // add offset to start so start is the same\n        // day of the week as the desired day of week.\n\n        start += offset; // because we are going to add (and multiply)\n        // the numeric value of the day we subtract it\n        // from the start position so not to add it twice.\n\n        start -= aDayOfWeek; // set week day\n\n        weekday = aDayOfWeek;\n      } else {\n        // then we set it to the last day in the current month\n        otherDay.day = daysInMonth; // find the ends weekday\n\n        var endDow = otherDay.dayOfWeek();\n        pos++;\n        weekday = endDow - aDayOfWeek;\n\n        if (weekday < 0) {\n          weekday += 7;\n        }\n\n        weekday = daysInMonth - weekday;\n      }\n\n      weekday += pos * 7;\n      return start + weekday;\n    },\n\n    /**\n     * Checks if current time is the nth weekday, relative to the current\n     * month.  Will always return false when rule resolves outside of current\n     * month.\n     *\n     * @param {ICAL.Time.weekDay} aDayOfWeek       Day of week to check\n     * @param {Number} aPos                        Relative position\n     * @return {Boolean}                           True, if its the nth weekday\n     */\n    isNthWeekDay: function isNthWeekDay(aDayOfWeek, aPos) {\n      var dow = this.dayOfWeek();\n\n      if (aPos === 0 && dow === aDayOfWeek) {\n        return true;\n      } // get pos\n\n\n      var day = this.nthWeekDay(aDayOfWeek, aPos);\n\n      if (day === this.day) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Calculates the ISO 8601 week number. The first week of a year is the\n     * week that contains the first Thursday. The year can have 53 weeks, if\n     * January 1st is a Friday.\n     *\n     * Note there are regions where the first week of the year is the one that\n     * starts on January 1st, which may offset the week number. Also, if a\n     * different week start is specified, this will also affect the week\n     * number.\n     *\n     * @see ICAL.Time.weekOneStarts\n     * @param {ICAL.Time.weekDay} aWeekStart        The weekday the week starts with\n     * @return {Number}                             The ISO week number\n     */\n    weekNumber: function weekNumber(aWeekStart) {\n      var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n\n      if (wnCacheKey in ICAL.Time._wnCache) {\n        return ICAL.Time._wnCache[wnCacheKey];\n      } // This function courtesty of Julian Bucknall, published under the MIT license\n      // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n      // plus some fixes to be able to use different week starts.\n\n\n      var week1;\n      var dt = this.clone();\n      dt.isDate = true;\n      var isoyear = this.year;\n\n      if (dt.month == 12 && dt.day > 25) {\n        week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart);\n\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        } else {\n          isoyear++;\n        }\n      } else {\n        week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart);\n        }\n      }\n\n      var daysBetween = dt.subtractDate(week1).toSeconds() / 86400;\n      var answer = ICAL.helpers.trunc(daysBetween / 7) + 1;\n      ICAL.Time._wnCache[wnCacheKey] = answer;\n      return answer;\n    },\n\n    /**\n     * Adds the duration to the current time. The instance is modified in\n     * place.\n     *\n     * @param {ICAL.Duration} aDuration         The duration to add\n     */\n    addDuration: function icaltime_add(aDuration) {\n      var mult = aDuration.isNegative ? -1 : 1; // because of the duration optimizations it is much\n      // more efficient to grab all the values up front\n      // then set them directly (which will avoid a normalization call).\n      // So we don't actually normalize until we need it.\n\n      var second = this.second;\n      var minute = this.minute;\n      var hour = this.hour;\n      var day = this.day;\n      second += mult * aDuration.seconds;\n      minute += mult * aDuration.minutes;\n      hour += mult * aDuration.hours;\n      day += mult * aDuration.days;\n      day += mult * 7 * aDuration.weeks;\n      this.second = second;\n      this.minute = minute;\n      this.hour = hour;\n      this.day = day;\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Subtract the date details (_excluding_ timezone).  Useful for finding\n     * the relative difference between two time objects excluding their\n     * timezone differences.\n     *\n     * @param {ICAL.Time} aDate     The date to substract\n     * @return {ICAL.Duration}      The difference as a duration\n     */\n    subtractDate: function icaltime_subtract(aDate) {\n      var unixTime = this.toUnixTime() + this.utcOffset();\n      var other = aDate.toUnixTime() + aDate.utcOffset();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Subtract the date details, taking timezones into account.\n     *\n     * @param {ICAL.Time} aDate  The date to subtract\n     * @return {ICAL.Duration}  The difference in duration\n     */\n    subtractDateTz: function icaltime_subtract_abs(aDate) {\n      var unixTime = this.toUnixTime();\n      var other = aDate.toUnixTime();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Compares the ICAL.Time instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toUnixTime();\n      var b = other.toUnixTime();\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    },\n\n    /**\n     * Compares only the date part of this instance with another one.\n     *\n     * @param {ICAL.Duration} other         The instance to compare with\n     * @param {ICAL.Timezone} tz            The timezone to compare in\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compareDateOnlyTz: function icaltime_compareDateOnlyTz(other, tz) {\n      function cmp(attr) {\n        return ICAL.Time._cmp_attr(a, b, attr);\n      }\n\n      var a = this.convertToZone(tz);\n      var b = other.convertToZone(tz);\n      var rc = 0;\n      if ((rc = cmp(\"year\")) != 0) return rc;\n      if ((rc = cmp(\"month\")) != 0) return rc;\n      if ((rc = cmp(\"day\")) != 0) return rc;\n      return rc;\n    },\n\n    /**\n     * Convert the instance into another timzone. The returned ICAL.Time\n     * instance is always a copy.\n     *\n     * @param {ICAL.Timezone} zone      The zone to convert to\n     * @return {ICAL.Time}              The copy, converted to the zone\n     */\n    convertToZone: function convertToZone(zone) {\n      var copy = this.clone();\n      var zone_equals = this.zone.tzid == zone.tzid;\n\n      if (!this.isDate && !zone_equals) {\n        ICAL.Timezone.convert_time(copy, this.zone, zone);\n      }\n\n      copy.zone = zone;\n      return copy;\n    },\n\n    /**\n     * Calculates the UTC offset of the current date/time in the timezone it is\n     * in.\n     *\n     * @return {Number}     UTC offset in seconds\n     */\n    utcOffset: function utc_offset() {\n      if (this.zone == ICAL.Timezone.localTimezone || this.zone == ICAL.Timezone.utcTimezone) {\n        return 0;\n      } else {\n        return this.zone.utcOffset(this);\n      }\n    },\n\n    /**\n     * Returns an RFC 5545 compliant ical representation of this object.\n     *\n     * @return {String} ical date/date-time\n     */\n    toICALString: function toICALString() {\n      var string = this.toString();\n\n      if (string.length > 10) {\n        return ICAL.design.icalendar.value['date-time'].toICAL(string);\n      } else {\n        return ICAL.design.icalendar.value.date.toICAL(string);\n      }\n    },\n\n    /**\n     * The string representation of this date/time, in jCal form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var result = this.year + '-' + ICAL.helpers.pad2(this.month) + '-' + ICAL.helpers.pad2(this.day);\n\n      if (!this.isDate) {\n        result += 'T' + ICAL.helpers.pad2(this.hour) + ':' + ICAL.helpers.pad2(this.minute) + ':' + ICAL.helpers.pad2(this.second);\n\n        if (this.zone === ICAL.Timezone.utcTimezone) {\n          result += 'Z';\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Converts the current instance to a Javascript date\n     * @return {Date}\n     */\n    toJSDate: function toJSDate() {\n      if (this.zone == ICAL.Timezone.localTimezone) {\n        if (this.isDate) {\n          return new Date(this.year, this.month - 1, this.day);\n        } else {\n          return new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, 0);\n        }\n      } else {\n        return new Date(this.toUnixTime() * 1000);\n      }\n    },\n    _normalize: function icaltime_normalize() {\n      var isDate = this._time.isDate;\n\n      if (this._time.isDate) {\n        this._time.hour = 0;\n        this._time.minute = 0;\n        this._time.second = 0;\n      }\n\n      this.adjust(0, 0, 0, 0);\n      return this;\n    },\n\n    /**\n     * Adjust the date/time by the given offset\n     *\n     * @param {Number} aExtraDays       The extra amount of days\n     * @param {Number} aExtraHours      The extra amount of hours\n     * @param {Number} aExtraMinutes    The extra amount of minutes\n     * @param {Number} aExtraSeconds    The extra amount of seconds\n     * @param {Number=} aTime           The time to adjust, defaults to the\n     *                                    current instance.\n     */\n    adjust: function icaltime_adjust(aExtraDays, aExtraHours, aExtraMinutes, aExtraSeconds, aTime) {\n      var minutesOverflow,\n          hoursOverflow,\n          daysOverflow = 0,\n          yearsOverflow = 0;\n      var second, minute, hour, day;\n      var daysInMonth;\n      var time = aTime || this._time;\n\n      if (!time.isDate) {\n        second = time.second + aExtraSeconds;\n        time.second = second % 60;\n        minutesOverflow = ICAL.helpers.trunc(second / 60);\n\n        if (time.second < 0) {\n          time.second += 60;\n          minutesOverflow--;\n        }\n\n        minute = time.minute + aExtraMinutes + minutesOverflow;\n        time.minute = minute % 60;\n        hoursOverflow = ICAL.helpers.trunc(minute / 60);\n\n        if (time.minute < 0) {\n          time.minute += 60;\n          hoursOverflow--;\n        }\n\n        hour = time.hour + aExtraHours + hoursOverflow;\n        time.hour = hour % 24;\n        daysOverflow = ICAL.helpers.trunc(hour / 24);\n\n        if (time.hour < 0) {\n          time.hour += 24;\n          daysOverflow--;\n        }\n      } // Adjust month and year first, because we need to know what month the day\n      // is in before adjusting it.\n\n\n      if (time.month > 12) {\n        yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12);\n      } else if (time.month < 1) {\n        yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1;\n      }\n\n      time.year += yearsOverflow;\n      time.month -= 12 * yearsOverflow; // Now take care of the days (and adjust month if needed)\n\n      day = time.day + aExtraDays + daysOverflow;\n\n      if (day > 0) {\n        for (;;) {\n          daysInMonth = ICAL.Time.daysInMonth(time.month, time.year);\n\n          if (day <= daysInMonth) {\n            break;\n          }\n\n          time.month++;\n\n          if (time.month > 12) {\n            time.year++;\n            time.month = 1;\n          }\n\n          day -= daysInMonth;\n        }\n      } else {\n        while (day <= 0) {\n          if (time.month == 1) {\n            time.year--;\n            time.month = 12;\n          } else {\n            time.month--;\n          }\n\n          day += ICAL.Time.daysInMonth(time.month, time.year);\n        }\n      }\n\n      time.day = day;\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance from unix time, the number of seconds since\n     * January 1st, 1970.\n     *\n     * @param {Number} seconds      The seconds to set up with\n     */\n    fromUnixTime: function fromUnixTime(seconds) {\n      this.zone = ICAL.Timezone.utcTimezone;\n      var epoch = ICAL.Time.epochTime.clone();\n      epoch.adjust(0, 0, 0, seconds);\n      this.year = epoch.year;\n      this.month = epoch.month;\n      this.day = epoch.day;\n      this.hour = epoch.hour;\n      this.minute = epoch.minute;\n      this.second = Math.floor(epoch.second);\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Converts the current instance to seconds since January 1st 1970.\n     *\n     * @return {Number}         Seconds since 1970\n     */\n    toUnixTime: function toUnixTime() {\n      if (this._cachedUnixTime !== null) {\n        return this._cachedUnixTime;\n      }\n\n      var offset = this.utcOffset(); // we use the offset trick to ensure\n      // that we are getting the actual UTC time\n\n      var ms = Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second - offset); // seconds\n\n      this._cachedUnixTime = ms / 1000;\n      return this._cachedUnixTime;\n    },\n\n    /**\n     * Converts time to into Object which can be serialized then re-created\n     * using the constructor.\n     *\n     * @example\n     * // toJSON will automatically be called\n     * var json = JSON.stringify(mytime);\n     *\n     * var deserialized = JSON.parse(json);\n     *\n     * var time = new ICAL.Time(deserialized);\n     *\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var copy = ['year', 'month', 'day', 'hour', 'minute', 'second', 'isDate'];\n      var result = Object.create(null);\n      var i = 0;\n      var len = copy.length;\n      var prop;\n\n      for (; i < len; i++) {\n        prop = copy[i];\n        result[prop] = this[prop];\n      }\n\n      if (this.zone) {\n        result.timezone = this.zone.tzid;\n      }\n\n      return result;\n    }\n  };\n\n  (function setupNormalizeAttributes() {\n    // This needs to run before any instances are created!\n    function defineAttr(attr) {\n      Object.defineProperty(ICAL.Time.prototype, attr, {\n        get: function getTimeAttr() {\n          if (this._pendingNormalization) {\n            this._normalize();\n\n            this._pendingNormalization = false;\n          }\n\n          return this._time[attr];\n        },\n        set: function setTimeAttr(val) {\n          // Check if isDate will be set and if was not set to normalize date.\n          // This avoids losing days when seconds, minutes and hours are zeroed\n          // what normalize will do when time is a date.\n          if (attr === \"isDate\" && val && !this._time.isDate) {\n            this.adjust(0, 0, 0, 0);\n          }\n\n          this._cachedUnixTime = null;\n          this._pendingNormalization = true;\n          this._time[attr] = val;\n          return val;\n        }\n      });\n    }\n    /* istanbul ignore else */\n\n\n    if (\"defineProperty\" in Object) {\n      defineAttr(\"year\");\n      defineAttr(\"month\");\n      defineAttr(\"day\");\n      defineAttr(\"hour\");\n      defineAttr(\"minute\");\n      defineAttr(\"second\");\n      defineAttr(\"isDate\");\n    }\n  })();\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n\n\n  ICAL.Time.daysInMonth = function icaltime_daysInMonth(month, year) {\n    var _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var days = 30;\n    if (month < 1 || month > 12) return days;\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += ICAL.Time.isLeapYear(year);\n    }\n\n    return days;\n  };\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n\n\n  ICAL.Time.isLeapYear = function isLeapYear(year) {\n    if (year <= 1752) {\n      return year % 4 == 0;\n    } else {\n      return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n    }\n  };\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {ICAL.Time}            The created instance with the calculated date\n   */\n\n\n  ICAL.Time.fromDayOfYear = function icaltime_fromDayOfYear(aDayOfYear, aYear) {\n    var year = aYear;\n    var doy = aDayOfYear;\n    var tt = new ICAL.Time();\n    tt.auto_normalize = false;\n    var is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0;\n\n    if (doy < 1) {\n      year--;\n      is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0;\n      doy += ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      return ICAL.Time.fromDayOfYear(doy, year);\n    } else if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0;\n      doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return ICAL.Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (var month = 11; month >= 0; month--) {\n      if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n\n\n  ICAL.Time.fromStringv2 = function fromString(str) {\n    return new ICAL.Time({\n      year: parseInt(str.substr(0, 4), 10),\n      month: parseInt(str.substr(5, 2), 10),\n      day: parseInt(str.substr(8, 2), 10),\n      isDate: true\n    });\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n\n\n  ICAL.Time.fromDateString = function (aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      isDate: true\n    });\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n\n\n  ICAL.Time.fromDateTimeString = function (aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error('invalid date-time value: \"' + aValue + '\"');\n    }\n\n    var zone;\n\n    if (aValue[19] && aValue[19] === 'Z') {\n      zone = 'Z';\n    } else if (prop) {\n      zone = prop.getParameter('tzid');\n    } // 2012-10-10T10:10:10(Z)?\n\n\n    var time = new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),\n      minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),\n      second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),\n      timezone: zone\n    });\n    return time;\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n\n\n  ICAL.Time.fromString = function fromString(aValue, aProperty) {\n    if (aValue.length > 10) {\n      return ICAL.Time.fromDateTimeString(aValue, aProperty);\n    } else {\n      return ICAL.Time.fromDateString(aValue);\n    }\n  };\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate     The Javascript Date to read, or null to reset\n   * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n   */\n\n\n  ICAL.Time.fromJSDate = function fromJSDate(aDate, useUTC) {\n    var tt = new ICAL.Time();\n    return tt.fromJSDate(aDate, useUTC);\n  };\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n   */\n\n\n  ICAL.Time.fromData = function fromData(aData, aZone) {\n    var t = new ICAL.Time();\n    return t.fromData(aData, aZone);\n  };\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * @return {ICAL.Time}\n   */\n\n\n  ICAL.Time.now = function icaltime_now() {\n    return ICAL.Time.fromJSDate(new Date(), false);\n  };\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see ICAL.Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday, used for calculation.\n   * @return {ICAL.Time}                    The date on which week number 1 starts\n   */\n\n\n  ICAL.Time.weekOneStarts = function weekOneStarts(aYear, aWeekStart) {\n    var t = ICAL.Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n    var dow = t.dayOfWeek();\n    var wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;\n\n    if (dow > ICAL.Time.THURSDAY) {\n      t.day += 7;\n    }\n\n    if (wkst > ICAL.Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n    return t;\n  };\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n\n\n  ICAL.Time.getDominicalLetter = function (yr) {\n    var LTRS = \"GFEDCBA\";\n    var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    var isLeap = ICAL.Time.isLeapYear(yr);\n\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  };\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {ICAL.Time}\n   * @constant\n   * @instance\n   */\n\n\n  ICAL.Time.epochTime = ICAL.Time.fromData({\n    year: 1970,\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    isDate: false,\n    timezone: \"Z\"\n  });\n\n  ICAL.Time._cmp_attr = function _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  };\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n\n\n  ICAL.Time.daysInYearPassedMonth = [[0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365], [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]];\n  /**\n   * The weekday, 1 = SUNDAY, 7 = SATURDAY. Access via\n   * ICAL.Time.MONDAY, ICAL.Time.TUESDAY, ...\n   *\n   * @typedef {Number} weekDay\n   * @memberof ICAL.Time\n   */\n\n  ICAL.Time.SUNDAY = 1;\n  ICAL.Time.MONDAY = 2;\n  ICAL.Time.TUESDAY = 3;\n  ICAL.Time.WEDNESDAY = 4;\n  ICAL.Time.THURSDAY = 5;\n  ICAL.Time.FRIDAY = 6;\n  ICAL.Time.SATURDAY = 7;\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n\n  ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2015 */\n\n\n(function () {\n  /**\n   * Describes a vCard time, which has slight differences to the ICAL.Time.\n   * Properties can be null if not specified, for example for dates with\n   * reduced accuracy or truncation.\n   *\n   * Note that currently not all methods are correctly re-implemented for\n   * VCardTime. For example, comparison will have undefined results when some\n   * members are null.\n   *\n   * Also, normalization is not yet implemented for this class!\n   *\n   * @alias ICAL.VCardTime\n   * @class\n   * @extends {ICAL.Time}\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {ICAL.Timezone|ICAL.UtcOffset} zone     The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  ICAL.VCardTime = function (data, zone, icaltype) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n    time.year = null;\n    time.month = null;\n    time.day = null;\n    time.hour = null;\n    time.minute = null;\n    time.second = null;\n    this.icaltype = icaltype || \"date-and-or-time\";\n    this.fromData(data, zone);\n  };\n\n  ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime,\n  /** @lends ICAL.VCardTime */\n  {\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"vcardtime\"\n     */\n    icalclass: \"vcardtime\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @type {String}\n     * @default \"date-and-or-time\"\n     */\n    icaltype: \"date-and-or-time\",\n\n    /**\n     * The timezone. This can either be floating, UTC, or an instance of\n     * ICAL.UtcOffset.\n     * @type {ICAL.Timezone|ICAL.UtcOFfset}\n     */\n    zone: null,\n\n    /**\n     * Returns a clone of the vcard date/time object.\n     *\n     * @return {ICAL.VCardTime}     The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.VCardTime(this._time, this.zone, this.icaltype);\n    },\n    _normalize: function _normalize() {\n      return this;\n    },\n\n    /**\n     * @inheritdoc\n     */\n    utcOffset: function utcOffset() {\n      if (this.zone instanceof ICAL.UtcOffset) {\n        return this.zone.toSeconds();\n      } else {\n        return ICAL.Time.prototype.utcOffset.apply(this, arguments);\n      }\n    },\n\n    /**\n     * Returns an RFC 6350 compliant representation of this object.\n     *\n     * @return {String}         vcard date/time string\n     */\n    toICALString: function toICALString() {\n      return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this date/time, in jCard form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var p2 = ICAL.helpers.pad2;\n      var y = this.year,\n          m = this.month,\n          d = this.day;\n      var h = this.hour,\n          mm = this.minute,\n          s = this.second;\n      var hasYear = y !== null,\n          hasMonth = m !== null,\n          hasDay = d !== null;\n      var hasHour = h !== null,\n          hasMinute = mm !== null,\n          hasSecond = s !== null;\n      var datepart = (hasYear ? p2(y) + (hasMonth || hasDay ? '-' : '') : hasMonth || hasDay ? '--' : '') + (hasMonth ? p2(m) : '') + (hasDay ? '-' + p2(d) : '');\n      var timepart = (hasHour ? p2(h) : '-') + (hasHour && hasMinute ? ':' : '') + (hasMinute ? p2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') + (hasMinute && hasSecond ? ':' : '') + (hasSecond ? p2(s) : '');\n      var zone;\n\n      if (this.zone === ICAL.Timezone.utcTimezone) {\n        zone = 'Z';\n      } else if (this.zone instanceof ICAL.UtcOffset) {\n        zone = this.zone.toString();\n      } else if (this.zone === ICAL.Timezone.localTimezone) {\n        zone = '';\n      } else if (this.zone instanceof ICAL.Timezone) {\n        var offset = ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this));\n        zone = offset.toString();\n      } else {\n        zone = '';\n      }\n\n      switch (this.icaltype) {\n        case \"time\":\n          return timepart + zone;\n\n        case \"date-and-or-time\":\n        case \"date-time\":\n          return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n\n        case \"date\":\n          return datepart;\n      }\n\n      return null;\n    }\n  });\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {ICAL.VCardTime}   The date/time instance\n   */\n\n  ICAL.VCardTime.fromDateAndOrTimeString = function (aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;\n    }\n\n    var parts = aValue.split('T');\n    var dt = parts[0],\n        tmz = parts[1];\n    var splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [];\n    var zone = splitzone[0],\n        tm = splitzone[1];\n    var stoi = ICAL.helpers.strictParseInt;\n    var dtlen = dt ? dt.length : 0;\n    var tmlen = tm ? tm.length : 0;\n    var hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    var hasDashTime = tm && tm[0] == '-';\n    var o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = ICAL.Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = ICAL.UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new ICAL.VCardTime(o, zone, aIcalType);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  var DOW_MAP = {\n    SU: ICAL.Time.SUNDAY,\n    MO: ICAL.Time.MONDAY,\n    TU: ICAL.Time.TUESDAY,\n    WE: ICAL.Time.WEDNESDAY,\n    TH: ICAL.Time.THURSDAY,\n    FR: ICAL.Time.FRIDAY,\n    SA: ICAL.Time.SATURDAY\n  };\n  var REVERSE_DOW_MAP = {};\n\n  for (var key in DOW_MAP) {\n    /* istanbul ignore else */\n    if (DOW_MAP.hasOwnProperty(key)) {\n      REVERSE_DOW_MAP[DOW_MAP[key]] = key;\n    }\n  }\n\n  var COPY_PARTS = [\"BYSECOND\", \"BYMINUTE\", \"BYHOUR\", \"BYDAY\", \"BYMONTHDAY\", \"BYYEARDAY\", \"BYWEEKNO\", \"BYMONTH\", \"BYSETPOS\"];\n  /**\n   * @classdesc\n   * This class represents the \"recur\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Recur\n   * @param {Object} data                               An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n   * @param {Number=} data.interval                     The INTERVAL value\n   * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n   * @param {ICAL.Time=} data.until                     The end of the recurrence set\n   * @param {Number=} data.count                        The number of occurrences\n   * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday                The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n   */\n\n  ICAL.Recur = function icalrecur(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof data === 'object') {\n      this.fromData(data);\n    }\n  };\n\n  ICAL.Recur.prototype = {\n    /**\n     * An object holding the BY-parts of the recurrence rule\n     * @type {Object}\n     */\n    parts: null,\n\n    /**\n     * The interval value for the recurrence rule.\n     * @type {Number}\n     */\n    interval: 1,\n\n    /**\n     * The week start day\n     *\n     * @type {ICAL.Time.weekDay}\n     * @default ICAL.Time.MONDAY\n     */\n    wkst: ICAL.Time.MONDAY,\n\n    /**\n     * The end of the recurrence\n     * @type {?ICAL.Time}\n     */\n    until: null,\n\n    /**\n     * The maximum number of occurrences\n     * @type {?Number}\n     */\n    count: null,\n\n    /**\n     * The frequency value.\n     * @type {ICAL.Recur.frequencyValues}\n     */\n    freq: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalrecur\"\n     */\n    icalclass: \"icalrecur\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"recur\"\n     */\n    icaltype: \"recur\",\n\n    /**\n     * Create a new iterator for this recurrence rule. The passed start date\n     * must be the start date of the event, not the start of the range to\n     * search in.\n     *\n     * @example\n     * var recur = comp.getFirstPropertyValue('rrule');\n     * var dtstart = comp.getFirstPropertyValue('dtstart');\n     * var iter = recur.iterator(dtstart);\n     * for (var next = iter.next(); next; next = iter.next()) {\n     *   if (next.compare(rangeStart) < 0) {\n     *     continue;\n     *   }\n     *   console.log(next.toString());\n     * }\n     *\n     * @param {ICAL.Time} aStart        The item's start date\n     * @return {ICAL.RecurIterator}     The recurrence iterator\n     */\n    iterator: function iterator(aStart) {\n      return new ICAL.RecurIterator({\n        rule: this,\n        dtstart: aStart\n      });\n    },\n\n    /**\n     * Returns a clone of the recurrence object.\n     *\n     * @return {ICAL.Recur}      The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Recur(this.toJSON());\n    },\n\n    /**\n     * Checks if the current rule is finite, i.e. has a count or until part.\n     *\n     * @return {Boolean}        True, if the rule is finite\n     */\n    isFinite: function isfinite() {\n      return !!(this.count || this.until);\n    },\n\n    /**\n     * Checks if the current rule has a count part, and not limited by an until\n     * part.\n     *\n     * @return {Boolean}        True, if the rule is by count\n     */\n    isByCount: function isbycount() {\n      return !!(this.count && !this.until);\n    },\n\n    /**\n     * Adds a component (part) to the recurrence rule. This is not a component\n     * in the sense of {@link ICAL.Component}, but a part of the recurrence\n     * rule, i.e. BYMONTH.\n     *\n     * @param {String} aType            The name of the component part\n     * @param {Array|String} aValue     The component value\n     */\n    addComponent: function addPart(aType, aValue) {\n      var ucname = aType.toUpperCase();\n\n      if (ucname in this.parts) {\n        this.parts[ucname].push(aValue);\n      } else {\n        this.parts[ucname] = [aValue];\n      }\n    },\n\n    /**\n     * Sets the component value for the given by-part.\n     *\n     * @param {String} aType        The component part name\n     * @param {Array} aValues       The component values\n     */\n    setComponent: function setComponent(aType, aValues) {\n      this.parts[aType.toUpperCase()] = aValues.slice();\n    },\n\n    /**\n     * Gets (a copy) of the requested component value.\n     *\n     * @param {String} aType        The component part name\n     * @return {Array}              The component part value\n     */\n    getComponent: function getComponent(aType) {\n      var ucname = aType.toUpperCase();\n      return ucname in this.parts ? this.parts[ucname].slice() : [];\n    },\n\n    /**\n     * Retrieves the next occurrence after the given recurrence id. See the\n     * guide on {@tutorial terminology} for more details.\n     *\n     * NOTE: Currently, this method iterates all occurrences from the start\n     * date. It should not be called in a loop for performance reasons. If you\n     * would like to get more than one occurrence, you can iterate the\n     * occurrences manually, see the example on the\n     * {@link ICAL.Recur#iterator iterator} method.\n     *\n     * @param {ICAL.Time} aStartTime        The start of the event series\n     * @param {ICAL.Time} aRecurrenceId     The date of the last occurrence\n     * @return {ICAL.Time}                  The next occurrence after\n     */\n    getNextOccurrence: function getNextOccurrence(aStartTime, aRecurrenceId) {\n      var iter = this.iterator(aStartTime);\n      var next, cdt;\n\n      do {\n        next = iter.next();\n      } while (next && next.compare(aRecurrenceId) <= 0);\n\n      if (next && aRecurrenceId.zone) {\n        next.zone = aRecurrenceId.zone;\n      }\n\n      return next;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} data                               An object with members of the recurrence\n     * @param {ICAL.Recur.frequencyValues=} data.freq     The frequency value\n     * @param {Number=} data.interval                     The INTERVAL value\n     * @param {ICAL.Time.weekDay=} data.wkst              The week start value\n     * @param {ICAL.Time=} data.until                     The end of the recurrence set\n     * @param {Number=} data.count                        The number of occurrences\n     * @param {Array.<Number>=} data.bysecond             The seconds for the BYSECOND part\n     * @param {Array.<Number>=} data.byminute             The minutes for the BYMINUTE part\n     * @param {Array.<Number>=} data.byhour               The hours for the BYHOUR part\n     * @param {Array.<String>=} data.byday                The BYDAY values\n     * @param {Array.<Number>=} data.bymonthday           The days for the BYMONTHDAY part\n     * @param {Array.<Number>=} data.byyearday            The days for the BYYEARDAY part\n     * @param {Array.<Number>=} data.byweekno             The weeks for the BYWEEKNO part\n     * @param {Array.<Number>=} data.bymonth              The month for the BYMONTH part\n     * @param {Array.<Number>=} data.bysetpos             The positionals for the BYSETPOS part\n     */\n    fromData: function fromData(data) {\n      for (var key in data) {\n        var uckey = key.toUpperCase();\n\n        if (uckey in partDesign) {\n          if (Array.isArray(data[key])) {\n            this.parts[uckey] = data[key];\n          } else {\n            this.parts[uckey] = [data[key]];\n          }\n        } else {\n          this[key] = data[key];\n        }\n      }\n\n      if (this.interval && typeof this.interval != \"number\") {\n        optionDesign.INTERVAL(this.interval, this);\n      }\n\n      if (this.wkst && typeof this.wkst != \"number\") {\n        this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst);\n      }\n\n      if (this.until && !(this.until instanceof ICAL.Time)) {\n        this.until = ICAL.Time.fromString(this.until);\n      }\n    },\n\n    /**\n     * The jCal representation of this recurrence type.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var res = Object.create(null);\n      res.freq = this.freq;\n\n      if (this.count) {\n        res.count = this.count;\n      }\n\n      if (this.interval > 1) {\n        res.interval = this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore if */\n        if (!this.parts.hasOwnProperty(k)) {\n          continue;\n        }\n\n        var kparts = this.parts[k];\n\n        if (Array.isArray(kparts) && kparts.length == 1) {\n          res[k.toLowerCase()] = kparts[0];\n        } else {\n          res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);\n        }\n      }\n\n      if (this.until) {\n        res.until = this.until.toString();\n      }\n\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n\n      return res;\n    },\n\n    /**\n     * The string representation of this recurrence rule.\n     * @return {String}\n     */\n    toString: function icalrecur_toString() {\n      // TODO retain order\n      var str = \"FREQ=\" + this.freq;\n\n      if (this.count) {\n        str += \";COUNT=\" + this.count;\n      }\n\n      if (this.interval > 1) {\n        str += \";INTERVAL=\" + this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore else */\n        if (this.parts.hasOwnProperty(k)) {\n          str += \";\" + k + \"=\" + this.parts[k];\n        }\n      }\n\n      if (this.until) {\n        str += ';UNTIL=' + this.until.toICALString();\n      }\n\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        str += ';WKST=' + ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n\n      return str;\n    }\n  };\n\n  function parseNumericValue(type, min, max, value) {\n    var result = value;\n\n    if (value[0] === '+') {\n      result = value.substr(1);\n    }\n\n    result = ICAL.helpers.strictParseInt(result);\n\n    if (min !== undefined && value < min) {\n      throw new Error(type + ': invalid value \"' + value + '\" must be > ' + min);\n    }\n\n    if (max !== undefined && value > max) {\n      throw new Error(type + ': invalid value \"' + value + '\" must be < ' + min);\n    }\n\n    return result;\n  }\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {Number}           Numeric value of given day\n   */\n\n\n  ICAL.Recur.icalDayToNumericDay = function toNumericDay(string, aWeekStart) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    return (DOW_MAP[string] - firstDow + 7) % 7 + 1;\n  };\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @param {ICAL.Time.weekDay=} aWeekStart\n   *        The week start weekday, defaults to SUNDAY\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n\n\n  ICAL.Recur.numericDayToIcalDay = function toIcalDay(num, aWeekStart) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n    var dow = num + firstDow - ICAL.Time.SUNDAY;\n\n    if (dow > 7) {\n      dow -= 7;\n    }\n\n    return REVERSE_DOW_MAP[dow];\n  };\n\n  var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\n  var VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n  /**\n   * Possible frequency values for the FREQ part\n   * (YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY)\n   *\n   * @typedef {String} frequencyValues\n   * @memberof ICAL.Recur\n   */\n\n  var ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY', 'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n  var optionDesign = {\n    FREQ: function FREQ(value, dict, fmtIcal) {\n      // yes this is actually equal or faster then regex.\n      // upside here is we can enumerate the valid values.\n      if (ALLOWED_FREQ.indexOf(value) !== -1) {\n        dict.freq = value;\n      } else {\n        throw new Error('invalid frequency \"' + value + '\" expected: \"' + ALLOWED_FREQ.join(', ') + '\"');\n      }\n    },\n    COUNT: function COUNT(value, dict, fmtIcal) {\n      dict.count = ICAL.helpers.strictParseInt(value);\n    },\n    INTERVAL: function INTERVAL(value, dict, fmtIcal) {\n      dict.interval = ICAL.helpers.strictParseInt(value);\n\n      if (dict.interval < 1) {\n        // 0 or negative values are not allowed, some engines seem to generate\n        // it though. Assume 1 instead.\n        dict.interval = 1;\n      }\n    },\n    UNTIL: function UNTIL(value, dict, fmtIcal) {\n      if (value.length > 10) {\n        dict.until = ICAL.design.icalendar.value['date-time'].fromICAL(value);\n      } else {\n        dict.until = ICAL.design.icalendar.value.date.fromICAL(value);\n      }\n\n      if (!fmtIcal) {\n        dict.until = ICAL.Time.fromString(dict.until);\n      }\n    },\n    WKST: function WKST(value, dict, fmtIcal) {\n      if (VALID_DAY_NAMES.test(value)) {\n        dict.wkst = ICAL.Recur.icalDayToNumericDay(value);\n      } else {\n        throw new Error('invalid WKST value \"' + value + '\"');\n      }\n    }\n  };\n  var partDesign = {\n    BYSECOND: parseNumericValue.bind(this, 'BYSECOND', 0, 60),\n    BYMINUTE: parseNumericValue.bind(this, 'BYMINUTE', 0, 59),\n    BYHOUR: parseNumericValue.bind(this, 'BYHOUR', 0, 23),\n    BYDAY: function BYDAY(value) {\n      if (VALID_BYDAY_PART.test(value)) {\n        return value;\n      } else {\n        throw new Error('invalid BYDAY value \"' + value + '\"');\n      }\n    },\n    BYMONTHDAY: parseNumericValue.bind(this, 'BYMONTHDAY', -31, 31),\n    BYYEARDAY: parseNumericValue.bind(this, 'BYYEARDAY', -366, 366),\n    BYWEEKNO: parseNumericValue.bind(this, 'BYWEEKNO', -53, 53),\n    BYMONTH: parseNumericValue.bind(this, 'BYMONTH', 0, 12),\n    BYSETPOS: parseNumericValue.bind(this, 'BYSETPOS', -366, 366)\n  };\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {ICAL.Recur}           The created recurrence instance\n   */\n\n  ICAL.Recur.fromString = function (string) {\n    var data = ICAL.Recur._stringToData(string, false);\n\n    return new ICAL.Recur(data);\n  };\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                              An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues=} aData.freq    The frequency value\n   * @param {Number=} aData.interval                    The INTERVAL value\n   * @param {ICAL.Time.weekDay=} aData.wkst             The week start value\n   * @param {ICAL.Time=} aData.until                    The end of the recurrence set\n   * @param {Number=} aData.count                       The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond            The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute            The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour              The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday               The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday          The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday           The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno            The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth             The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos            The positionals for the BYSETPOS part\n   */\n\n\n  ICAL.Recur.fromData = function (aData) {\n    return new ICAL.Recur(aData);\n  };\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {ICAL.Recur}       The recurrence instance\n   */\n\n\n  ICAL.Recur._stringToData = function (string, fmtIcal) {\n    var dict = Object.create(null); // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n\n    var values = string.split(';');\n    var len = values.length;\n\n    for (var i = 0; i < len; i++) {\n      var parts = values[i].split('=');\n      var ucname = parts[0].toUpperCase();\n      var lcname = parts[0].toLowerCase();\n      var name = fmtIcal ? lcname : ucname;\n      var value = parts[1];\n\n      if (ucname in partDesign) {\n        var partArr = value.split(',');\n        var partArrIdx = 0;\n        var partArrLen = partArr.length;\n\n        for (; partArrIdx < partArrLen; partArrIdx++) {\n          partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);\n        }\n\n        dict[name] = partArr.length == 1 ? partArr[0] : partArr;\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.RecurIterator = function () {\n  /**\n   * @classdesc\n   * An iterator for a single recurrence rule. This class usually doesn't have\n   * to be instanciated directly, the convenience method\n   * {@link ICAL.Recur#iterator} can be used.\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration from a previous run\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration\n   * from a previous run.\n   *\n   * @class\n   * @alias ICAL.RecurIterator\n   * @param {Object} options                The iterator options\n   * @param {ICAL.Recur} options.rule       The rule to iterate.\n   * @param {ICAL.Time} options.dtstart     The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  function icalrecur_iterator(options) {\n    this.fromData(options);\n  }\n\n  icalrecur_iterator.prototype = {\n    /**\n     * True when iteration is finished.\n     * @type {Boolean}\n     */\n    completed: false,\n\n    /**\n     * The rule that is being iterated\n     * @type {ICAL.Recur}\n     */\n    rule: null,\n\n    /**\n     * The start date of the event being iterated.\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * The last occurrence that was returned from the\n     * {@link ICAL.RecurIterator#next} method.\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * The sequence number from the occurrence\n     * @type {Number}\n     */\n    occurrence_number: 0,\n\n    /**\n     * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n     * @type {Object}\n     * @private\n     */\n    by_indices: null,\n\n    /**\n     * If true, the iterator has already been initialized\n     * @type {Boolean}\n     * @private\n     */\n    initialized: false,\n\n    /**\n     * The initializd by-data.\n     * @type {Object}\n     * @private\n     */\n    by_data: null,\n\n    /**\n     * The expanded yeardays\n     * @type {Array}\n     * @private\n     */\n    days: null,\n\n    /**\n     * The index in the {@link ICAL.RecurIterator#days} array.\n     * @type {Number}\n     * @private\n     */\n    days_index: 0,\n\n    /**\n     * Initialize the recurrence iterator from the passed data object. This\n     * method is usually not called directly, you can initialize the iterator\n     * through the constructor.\n     *\n     * @param {Object} options                The iterator options\n     * @param {ICAL.Recur} options.rule       The rule to iterate.\n     * @param {ICAL.Time} options.dtstart     The start date of the event.\n     * @param {Boolean=} options.initialized  When true, assume that options are\n     *        from a previously constructed iterator. Initialization will not be\n     *        repeated.\n     */\n    fromData: function fromData(options) {\n      this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur);\n\n      if (!this.rule) {\n        throw new Error('iterator requires a (ICAL.Recur) rule');\n      }\n\n      this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!this.dtstart) {\n        throw new Error('iterator requires a (ICAL.Time) dtstart');\n      }\n\n      if (options.by_data) {\n        this.by_data = options.by_data;\n      } else {\n        this.by_data = ICAL.helpers.clone(this.rule.parts, true);\n      }\n\n      if (options.occurrence_number) this.occurrence_number = options.occurrence_number;\n      this.days = options.days || [];\n\n      if (options.last) {\n        this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time);\n      }\n\n      this.by_indices = options.by_indices;\n\n      if (!this.by_indices) {\n        this.by_indices = {\n          \"BYSECOND\": 0,\n          \"BYMINUTE\": 0,\n          \"BYHOUR\": 0,\n          \"BYDAY\": 0,\n          \"BYMONTH\": 0,\n          \"BYWEEKNO\": 0,\n          \"BYMONTHDAY\": 0\n        };\n      }\n\n      this.initialized = options.initialized || false;\n\n      if (!this.initialized) {\n        this.init();\n      }\n    },\n\n    /**\n     * Intialize the iterator\n     * @private\n     */\n    init: function icalrecur_iterator_init() {\n      this.initialized = true;\n      this.last = this.dtstart.clone();\n      var parts = this.by_data;\n\n      if (\"BYDAY\" in parts) {\n        // libical does this earlier when the rule is loaded, but we postpone to\n        // now so we can preserve the original order.\n        this.sort_byday_rules(parts.BYDAY);\n      } // If the BYYEARDAY appares, no other date rule part may appear\n\n\n      if (\"BYYEARDAY\" in parts) {\n        if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts || \"BYMONTHDAY\" in parts || \"BYDAY\" in parts) {\n          throw new Error(\"Invalid BYYEARDAY rule\");\n        }\n      } // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n\n\n      if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n        throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n      } // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n      // BYWEEKNO may appear.\n\n\n      if (this.rule.freq == \"MONTHLY\" && (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n        throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n      } // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n      // BYYEARDAY may appear.\n\n\n      if (this.rule.freq == \"WEEKLY\" && (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n        throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n      } // BYYEARDAY may only appear in YEARLY rules\n\n\n      if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n        throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n      }\n\n      this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n      this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n      this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n      this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n      this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n      if (this.rule.freq == \"WEEKLY\") {\n        if (\"BYDAY\" in parts) {\n          var bydayParts = this.ruleDayOfWeek(parts.BYDAY[0], this.rule.wkst);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var wkdy = dow - this.last.dayOfWeek(this.rule.wkst);\n\n          if (this.last.dayOfWeek(this.rule.wkst) < dow && wkdy >= 0 || wkdy < 0) {\n            // Initial time is after first day of BYDAY data\n            this.last.day += wkdy;\n          }\n        } else {\n          var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n          parts.BYDAY = [dayName];\n        }\n      }\n\n      if (this.rule.freq == \"YEARLY\") {\n        for (;;) {\n          this.expand_year_days(this.last.year);\n\n          if (this.days.length > 0) {\n            break;\n          }\n\n          this.increment_year(this.rule.interval);\n        }\n\n        this._nextByYearDay();\n      }\n\n      if (this.rule.freq == \"MONTHLY\" && this.has_by_data(\"BYDAY\")) {\n        var tempLast = null;\n        var initLast = this.last.clone();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year); // Check every weekday in BYDAY with relative dow and pos.\n\n        for (var i in this.by_data.BYDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYDAY.hasOwnProperty(i)) {\n            continue;\n          }\n\n          this.last = initLast.clone();\n          var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var dayOfMonth = this.last.nthWeekDay(dow, pos); // If |pos| >= 6, the byday is invalid for a monthly rule.\n\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          } // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n\n\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n\n        this.last = tempLast.clone(); //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        if (this.last.day < 0) {\n          var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n          this.last.day = daysInMonth + this.last.day + 1;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence from the iterator.\n     * @return {ICAL.Time}\n     */\n    next: function icalrecur_iterator_next() {\n      var before = this.last ? this.last.clone() : null;\n\n      if (this.rule.count && this.occurrence_number >= this.rule.count || this.rule.until && this.last.compare(this.rule.until) > 0) {\n        //XXX: right now this is just a flag and has no impact\n        //     we can simplify the above case to check for completed later.\n        this.completed = true;\n        return null;\n      }\n\n      if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n        // First of all, give the instance that was initialized\n        this.occurrence_number++;\n        return this.last;\n      }\n\n      var valid;\n\n      do {\n        valid = 1;\n\n        switch (this.rule.freq) {\n          case \"SECONDLY\":\n            this.next_second();\n            break;\n\n          case \"MINUTELY\":\n            this.next_minute();\n            break;\n\n          case \"HOURLY\":\n            this.next_hour();\n            break;\n\n          case \"DAILY\":\n            this.next_day();\n            break;\n\n          case \"WEEKLY\":\n            this.next_week();\n            break;\n\n          case \"MONTHLY\":\n            valid = this.next_month();\n            break;\n\n          case \"YEARLY\":\n            this.next_year();\n            break;\n\n          default:\n            return null;\n        }\n      } while (!this.check_contracting_rules() || this.last.compare(this.dtstart) < 0 || !valid); // TODO is this valid?\n\n\n      if (this.last.compare(before) == 0) {\n        throw new Error(\"Same occurrence found twice, protecting \" + \"you from death by recursion\");\n      }\n\n      if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n        this.completed = true;\n        return null;\n      } else {\n        this.occurrence_number++;\n        return this.last;\n      }\n    },\n    next_second: function next_second() {\n      return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n    },\n    increment_second: function increment_second(inc) {\n      return this.increment_generic(inc, \"second\", 60, \"minute\");\n    },\n    next_minute: function next_minute() {\n      return this.next_generic(\"BYMINUTE\", \"MINUTELY\", \"minute\", \"hour\", \"next_second\");\n    },\n    increment_minute: function increment_minute(inc) {\n      return this.increment_generic(inc, \"minute\", 60, \"hour\");\n    },\n    next_hour: function next_hour() {\n      return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\", \"monthday\", \"next_minute\");\n    },\n    increment_hour: function increment_hour(inc) {\n      this.increment_generic(inc, \"hour\", 24, \"monthday\");\n    },\n    next_day: function next_day() {\n      var has_by_day = (\"BYDAY\" in this.by_data);\n      var this_freq = this.rule.freq == \"DAILY\";\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (this_freq) {\n        this.increment_monthday(this.rule.interval);\n      } else {\n        this.increment_monthday(1);\n      }\n\n      return 0;\n    },\n    next_week: function next_week() {\n      var end_of_data = 0;\n\n      if (this.next_weekday_by_week() == 0) {\n        return end_of_data;\n      }\n\n      if (this.has_by_data(\"BYWEEKNO\")) {\n        var idx = ++this.by_indices.BYWEEKNO;\n\n        if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n          this.by_indices.BYWEEKNO = 0;\n          end_of_data = 1;\n        } // HACK should be first month of the year\n\n\n        this.last.month = 1;\n        this.last.day = 1;\n        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n        this.last.day += 7 * week_no;\n\n        if (end_of_data) {\n          this.increment_year(1);\n        }\n      } else {\n        // Jump to the next week\n        this.increment_monthday(7 * this.rule.interval);\n      }\n\n      return end_of_data;\n    },\n\n    /**\n     * Normalize each by day rule for a given year/month.\n     * Takes into account ordering and negative rules\n     *\n     * @private\n     * @param {Number} year         Current year.\n     * @param {Number} month        Current month.\n     * @param {Array}  rules        Array of rules.\n     *\n     * @return {Array} sorted and normalized rules.\n     *                 Negative rules will be expanded to their\n     *                 correct positive values for easier processing.\n     */\n    normalizeByMonthDayRules: function normalizeByMonthDayRules(year, month, rules) {\n      var daysInMonth = ICAL.Time.daysInMonth(month, year); // XXX: This is probably bad for performance to allocate\n      //      a new array for each month we scan, if possible\n      //      we should try to optimize this...\n\n      var newRules = [];\n      var ruleIdx = 0;\n      var len = rules.length;\n      var rule;\n\n      for (; ruleIdx < len; ruleIdx++) {\n        rule = rules[ruleIdx]; // if this rule falls outside of given\n        // month discard it.\n\n        if (Math.abs(rule) > daysInMonth) {\n          continue;\n        } // negative case\n\n\n        if (rule < 0) {\n          // we add (not subtract its a negative number)\n          // one from the rule because 1 === last day of month\n          rule = daysInMonth + (rule + 1);\n        } else if (rule === 0) {\n          // skip zero its invalid.\n          continue;\n        } // only add unique items...\n\n\n        if (newRules.indexOf(rule) === -1) {\n          newRules.push(rule);\n        }\n      } // unique and sort\n\n\n      return newRules.sort(function (a, b) {\n        return a - b;\n      });\n    },\n\n    /**\n     * NOTES:\n     * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n     * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n     * both conditions match a given date (this.last.day) iteration stops.\n     *\n     * @private\n     * @param {Boolean=} isInit     When given true will not increment the\n     *                                current day (this.last).\n     */\n    _byDayAndMonthDay: function _byDayAndMonthDay(isInit) {\n      var byMonthDay; // setup in initMonth\n\n      var byDay = this.by_data.BYDAY;\n      var date;\n      var dateIdx = 0;\n      var dateLen; // setup in initMonth\n\n      var dayLen = byDay.length; // we are not valid by default\n\n      var dataIsValid = 0;\n      var daysInMonth;\n      var self = this; // we need a copy of this, because a DateTime gets normalized\n      // automatically if the day is out of range. At some points we\n      // set the last day to 0 to start counting.\n\n      var lastDay = this.last.day;\n\n      function initMonth() {\n        daysInMonth = ICAL.Time.daysInMonth(self.last.month, self.last.year);\n        byMonthDay = self.normalizeByMonthDayRules(self.last.year, self.last.month, self.by_data.BYMONTHDAY);\n        dateLen = byMonthDay.length; // For the case of more than one occurrence in one month\n        // we have to be sure to start searching after the last\n        // found date or at the last BYMONTHDAY, unless we are\n        // initializing the iterator because in this case we have\n        // to consider the last found date too.\n\n        while (byMonthDay[dateIdx] <= lastDay && !(isInit && byMonthDay[dateIdx] == lastDay) && dateIdx < dateLen - 1) {\n          dateIdx++;\n        }\n      }\n\n      function nextMonth() {\n        // since the day is incremented at the start\n        // of the loop below, we need to start at 0\n        lastDay = 0;\n        self.increment_month();\n        dateIdx = 0;\n        initMonth();\n      }\n\n      initMonth(); // should come after initMonth\n\n      if (isInit) {\n        lastDay -= 1;\n      } // Use a counter to avoid an infinite loop with malformed rules.\n      // Stop checking after 4 years so we consider also a leap year.\n\n\n      var monthsCounter = 48;\n\n      while (!dataIsValid && monthsCounter) {\n        monthsCounter--; // increment the current date. This is really\n        // important otherwise we may fall into the infinite\n        // loop trap. The initial date takes care of the case\n        // where the current date is the date we are looking\n        // for.\n\n        date = lastDay + 1;\n\n        if (date > daysInMonth) {\n          nextMonth();\n          continue;\n        } // find next date\n\n\n        var next = byMonthDay[dateIdx++]; // this logic is dependant on the BYMONTHDAYS\n        // being in order (which is done by #normalizeByMonthDayRules)\n\n        if (next >= date) {\n          // if the next month day is in the future jump to it.\n          lastDay = next;\n        } else {\n          // in this case the 'next' monthday has past\n          // we must move to the month.\n          nextMonth();\n          continue;\n        } // Now we can loop through the day rules to see\n        // if one matches the current month date.\n\n\n        for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n          var parts = this.ruleDayOfWeek(byDay[dayIdx]);\n          var pos = parts[0];\n          var dow = parts[1];\n          this.last.day = lastDay;\n\n          if (this.last.isNthWeekDay(dow, pos)) {\n            // when we find the valid one we can mark\n            // the conditions as met and break the loop.\n            // (Because we have this condition above\n            //  it will also break the parent loop).\n            dataIsValid = 1;\n            break;\n          }\n        } // Its completely possible that the combination\n        // cannot be matched in the current month.\n        // When we reach the end of possible combinations\n        // in the current month we iterate to the next one.\n        // since dateIdx is incremented right after getting\n        // \"next\", we don't need dateLen -1 here.\n\n\n        if (!dataIsValid && dateIdx === dateLen) {\n          nextMonth();\n          continue;\n        }\n      }\n\n      if (monthsCounter <= 0) {\n        // Checked 4 years without finding a Byday that matches\n        // a Bymonthday. Maybe the rule is not correct.\n        throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n      }\n\n      return dataIsValid;\n    },\n    next_month: function next_month() {\n      var this_freq = this.rule.freq == \"MONTHLY\";\n      var data_valid = 1;\n\n      if (this.next_hour() == 0) {\n        return data_valid;\n      }\n\n      if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n        data_valid = this._byDayAndMonthDay();\n      } else if (this.has_by_data(\"BYDAY\")) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var setpos = 0;\n        var setpos_total = 0;\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          var last_day = this.last.day;\n\n          for (var day = 1; day <= daysInMonth; day++) {\n            this.last.day = day;\n\n            if (this.is_day_in_byday(this.last)) {\n              setpos_total++;\n\n              if (day <= last_day) {\n                setpos++;\n              }\n            }\n          }\n\n          this.last.day = last_day;\n        }\n\n        data_valid = 0;\n\n        for (var day = this.last.day + 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(++setpos) || this.check_set_position(setpos - setpos_total - 1)) {\n              data_valid = 1;\n              break;\n            }\n          }\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          this.increment_month();\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n              data_valid = 1;\n            }\n          } else {\n            data_valid = 0;\n          }\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        this.by_indices.BYMONTHDAY++;\n\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          this.by_indices.BYMONTHDAY = 0;\n          this.increment_month();\n        }\n\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n        if (day < 0) {\n          day = daysInMonth + day + 1;\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          data_valid = this.is_day_in_byday(this.last);\n        } else {\n          this.last.day = day;\n        }\n      } else {\n        this.increment_month();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n\n        if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n          data_valid = 0;\n        } else {\n          this.last.day = this.by_data.BYMONTHDAY[0];\n        }\n      }\n\n      return data_valid;\n    },\n    next_weekday_by_week: function next_weekday_by_week() {\n      var end_of_data = 0;\n\n      if (this.next_hour() == 0) {\n        return end_of_data;\n      }\n\n      if (!this.has_by_data(\"BYDAY\")) {\n        return 1;\n      }\n\n      for (;;) {\n        var tt = new ICAL.Time();\n        this.by_indices.BYDAY++;\n\n        if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n          this.by_indices.BYDAY = 0;\n          end_of_data = 1;\n        }\n\n        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n        var parts = this.ruleDayOfWeek(coded_day);\n        var dow = parts[1];\n        dow -= this.rule.wkst;\n\n        if (dow < 0) {\n          dow += 7;\n        }\n\n        tt.year = this.last.year;\n        tt.month = this.last.month;\n        tt.day = this.last.day;\n        var startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n        if (dow + startOfWeek < 1) {\n          // The selected date is in the previous year\n          if (!end_of_data) {\n            continue;\n          }\n        }\n\n        var next = ICAL.Time.fromDayOfYear(startOfWeek + dow, this.last.year);\n        /**\n         * The normalization horrors below are due to\n         * the fact that when the year/month/day changes\n         * it can effect the other operations that come after.\n         */\n\n        this.last.year = next.year;\n        this.last.month = next.month;\n        this.last.day = next.day;\n        return end_of_data;\n      }\n    },\n    next_year: function next_year() {\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (++this.days_index == this.days.length) {\n        this.days_index = 0;\n\n        do {\n          this.increment_year(this.rule.interval);\n          this.expand_year_days(this.last.year);\n        } while (this.days.length == 0);\n      }\n\n      this._nextByYearDay();\n\n      return 1;\n    },\n    _nextByYearDay: function _nextByYearDay() {\n      var doy = this.days[this.days_index];\n      var year = this.last.year;\n\n      if (doy < 1) {\n        // Time.fromDayOfYear(doy, year) indexes relative to the\n        // start of the given year. That is different from the\n        // semantics of BYYEARDAY where negative indexes are an\n        // offset from the end of the given year.\n        doy += 1;\n        year += 1;\n      }\n\n      var next = ICAL.Time.fromDayOfYear(doy, year);\n      this.last.day = next.day;\n      this.last.month = next.month;\n    },\n\n    /**\n     * @param dow (eg: '1TU', '-1MO')\n     * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday\n     * @return [pos, numericDow] (eg: [1, 3]) numericDow is relative to aWeekStart\n     */\n    ruleDayOfWeek: function ruleDayOfWeek(dow, aWeekStart) {\n      var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n\n      if (matches) {\n        var pos = parseInt(matches[1] || 0, 10);\n        dow = ICAL.Recur.icalDayToNumericDay(matches[2], aWeekStart);\n        return [pos, dow];\n      } else {\n        return [0, 0];\n      }\n    },\n    next_generic: function next_generic(aRuleType, aInterval, aDateAttr, aFollowingAttr, aPreviousIncr) {\n      var has_by_rule = (aRuleType in this.by_data);\n      var this_freq = this.rule.freq == aInterval;\n      var end_of_data = 0;\n\n      if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n        return end_of_data;\n      }\n\n      if (has_by_rule) {\n        this.by_indices[aRuleType]++;\n        var idx = this.by_indices[aRuleType];\n        var dta = this.by_data[aRuleType];\n\n        if (this.by_indices[aRuleType] == dta.length) {\n          this.by_indices[aRuleType] = 0;\n          end_of_data = 1;\n        }\n\n        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n      } else if (this_freq) {\n        this[\"increment_\" + aDateAttr](this.rule.interval);\n      }\n\n      if (has_by_rule && end_of_data && this_freq) {\n        this[\"increment_\" + aFollowingAttr](1);\n      }\n\n      return end_of_data;\n    },\n    increment_monthday: function increment_monthday(inc) {\n      for (var i = 0; i < inc; i++) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        this.last.day++;\n\n        if (this.last.day > daysInMonth) {\n          this.last.day -= daysInMonth;\n          this.increment_month();\n        }\n      }\n    },\n    increment_month: function increment_month() {\n      this.last.day = 1;\n\n      if (this.has_by_data(\"BYMONTH\")) {\n        this.by_indices.BYMONTH++;\n\n        if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n          this.by_indices.BYMONTH = 0;\n          this.increment_year(1);\n        }\n\n        this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n      } else {\n        if (this.rule.freq == \"MONTHLY\") {\n          this.last.month += this.rule.interval;\n        } else {\n          this.last.month++;\n        }\n\n        this.last.month--;\n        var years = ICAL.helpers.trunc(this.last.month / 12);\n        this.last.month %= 12;\n        this.last.month++;\n\n        if (years != 0) {\n          this.increment_year(years);\n        }\n      }\n    },\n    increment_year: function increment_year(inc) {\n      this.last.year += inc;\n    },\n    increment_generic: function increment_generic(inc, aDateAttr, aFactor, aNextIncrement) {\n      this.last[aDateAttr] += inc;\n      var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);\n      this.last[aDateAttr] %= aFactor;\n\n      if (nextunit != 0) {\n        this[\"increment_\" + aNextIncrement](nextunit);\n      }\n    },\n    has_by_data: function has_by_data(aRuleType) {\n      return aRuleType in this.rule.parts;\n    },\n    expand_year_days: function expand_year_days(aYear) {\n      var t = new ICAL.Time();\n      this.days = []; // We need our own copy with a few keys set\n\n      var parts = {};\n      var rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n\n      for (var p in rules) {\n        /* istanbul ignore else */\n        if (rules.hasOwnProperty(p)) {\n          var part = rules[p];\n\n          if (part in this.rule.parts) {\n            parts[part] = this.rule.parts[part];\n          }\n        }\n      }\n\n      if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n        var valid = 1;\n        var validWeeks = {};\n        t.year = aYear;\n        t.isDate = true;\n\n        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n          var month = this.by_data.BYMONTH[monthIdx];\n          t.month = month;\n          t.day = 1;\n          var first_week = t.weekNumber(this.rule.wkst);\n          t.day = ICAL.Time.daysInMonth(month, aYear);\n          var last_week = t.weekNumber(this.rule.wkst);\n\n          for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n            validWeeks[monthIdx] = 1;\n          }\n        }\n\n        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n          var weekno = this.by_data.BYWEEKNO[weekIdx];\n\n          if (weekno < 52) {\n            valid &= validWeeks[weekIdx];\n          } else {\n            valid = 0;\n          }\n        }\n\n        if (valid) {\n          delete parts.BYMONTH;\n        } else {\n          delete parts.BYWEEKNO;\n        }\n      }\n\n      var partCount = Object.keys(parts).length;\n\n      if (partCount == 0) {\n        var t1 = this.dtstart.clone();\n        t1.year = this.last.year;\n        this.days.push(t1.dayOfYear());\n      } else if (partCount == 1 && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n\n          var t2 = this.dtstart.clone();\n          t2.year = aYear;\n          t2.month = this.by_data.BYMONTH[monthkey];\n          t2.isDate = true;\n          this.days.push(t2.dayOfYear());\n        }\n      } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n        for (var monthdaykey in this.by_data.BYMONTHDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n            continue;\n          }\n\n          var t3 = this.dtstart.clone();\n          var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n\n          if (day_ < 0) {\n            var daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear);\n            day_ = day_ + daysInMonth + 1;\n          }\n\n          t3.day = day_;\n          t3.year = aYear;\n          t3.isDate = true;\n          this.days.push(t3.dayOfYear());\n        }\n      } else if (partCount == 2 && \"BYMONTHDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n\n          var month_ = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month_, aYear);\n\n          for (var monthdaykey in this.by_data.BYMONTHDAY) {\n            /* istanbul ignore if */\n            if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n              continue;\n            }\n\n            var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n\n            if (day_ < 0) {\n              day_ = day_ + daysInMonth + 1;\n            }\n\n            t.day = day_;\n            t.month = month_;\n            t.year = aYear;\n            t.isDate = true;\n            this.days.push(t.dayOfYear());\n          }\n        }\n      } else if (partCount == 1 && \"BYWEEKNO\" in parts) {// TODO unimplemented in libical\n      } else if (partCount == 2 && \"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {// TODO unimplemented in libical\n      } else if (partCount == 1 && \"BYDAY\" in parts) {\n        this.days = this.days.concat(this.expand_by_day(aYear));\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n\n          var month = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month, aYear);\n          t.year = aYear;\n          t.month = this.by_data.BYMONTH[monthkey];\n          t.day = 1;\n          t.isDate = true;\n          var first_dow = t.dayOfWeek();\n          var doy_offset = t.dayOfYear() - 1;\n          t.day = daysInMonth;\n          var last_dow = t.dayOfWeek();\n\n          if (this.has_by_data(\"BYSETPOS\")) {\n            var set_pos_counter = 0;\n            var by_month_day = [];\n\n            for (var day = 1; day <= daysInMonth; day++) {\n              t.day = day;\n\n              if (this.is_day_in_byday(t)) {\n                by_month_day.push(day);\n              }\n            }\n\n            for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n              if (this.check_set_position(spIndex + 1) || this.check_set_position(spIndex - by_month_day.length)) {\n                this.days.push(doy_offset + by_month_day[spIndex]);\n              }\n            }\n          } else {\n            for (var daycodedkey in this.by_data.BYDAY) {\n              /* istanbul ignore if */\n              if (!this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {\n                continue;\n              }\n\n              var coded_day = this.by_data.BYDAY[daycodedkey];\n              var bydayParts = this.ruleDayOfWeek(coded_day);\n              var pos = bydayParts[0];\n              var dow = bydayParts[1];\n              var month_day;\n              var first_matching_day = (dow + 7 - first_dow) % 7 + 1;\n              var last_matching_day = daysInMonth - (last_dow + 7 - dow) % 7;\n\n              if (pos == 0) {\n                for (var day = first_matching_day; day <= daysInMonth; day += 7) {\n                  this.days.push(doy_offset + day);\n                }\n              } else if (pos > 0) {\n                month_day = first_matching_day + (pos - 1) * 7;\n\n                if (month_day <= daysInMonth) {\n                  this.days.push(doy_offset + month_day);\n                }\n              } else {\n                month_day = last_matching_day + (pos + 1) * 7;\n\n                if (month_day > 0) {\n                  this.days.push(doy_offset + month_day);\n                }\n              }\n            }\n          }\n        } // Return dates in order of occurrence (1,2,3,...) instead\n        // of by groups of weekdays (1,8,15,...,2,9,16,...).\n\n\n        this.days.sort(function (a, b) {\n          return a - b;\n        }); // Comparator function allows to sort numbers.\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts && \"BYMONTH\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 && this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          var weekno = tt.weekNumber(this.rule.wkst);\n\n          if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {// TODO unimplemted in libical\n      } else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n        this.days = this.days.concat(this.by_data.BYYEARDAY);\n      } else {\n        this.days = [];\n      }\n\n      return 0;\n    },\n    expand_by_day: function expand_by_day(aYear) {\n      var days_list = [];\n      var tmp = this.last.clone();\n      tmp.year = aYear;\n      tmp.month = 1;\n      tmp.day = 1;\n      tmp.isDate = true;\n      var start_dow = tmp.dayOfWeek();\n      tmp.month = 12;\n      tmp.day = 31;\n      tmp.isDate = true;\n      var end_dow = tmp.dayOfWeek();\n      var end_year_day = tmp.dayOfYear();\n\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n\n        if (pos == 0) {\n          var tmp_start_doy = (dow + 7 - start_dow) % 7 + 1;\n\n          for (var doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n            days_list.push(doy);\n          }\n        } else if (pos > 0) {\n          var first;\n\n          if (dow >= start_dow) {\n            first = dow - start_dow + 1;\n          } else {\n            first = dow - start_dow + 8;\n          }\n\n          days_list.push(first + (pos - 1) * 7);\n        } else {\n          var last;\n          pos = -pos;\n\n          if (dow <= end_dow) {\n            last = end_year_day - end_dow + dow;\n          } else {\n            last = end_year_day - end_dow + dow - 7;\n          }\n\n          days_list.push(last - (pos - 1) * 7);\n        }\n      }\n\n      return days_list;\n    },\n    is_day_in_byday: function is_day_in_byday(tt) {\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n        var this_dow = tt.dayOfWeek();\n\n        if (pos == 0 && dow == this_dow || tt.nthWeekDay(dow, pos) == tt.day) {\n          return 1;\n        }\n      }\n\n      return 0;\n    },\n\n    /**\n     * Checks if given value is in BYSETPOS.\n     *\n     * @private\n     * @param {Numeric} aPos position to check for.\n     * @return {Boolean} false unless BYSETPOS rules exist\n     *                   and the given value is present in rules.\n     */\n    check_set_position: function check_set_position(aPos) {\n      if (this.has_by_data('BYSETPOS')) {\n        var idx = this.by_data.BYSETPOS.indexOf(aPos); // negative numbers are not false-y\n\n        return idx !== -1;\n      }\n\n      return false;\n    },\n    sort_byday_rules: function icalrecur_sort_byday_rules(aRules) {\n      for (var i = 0; i < aRules.length; i++) {\n        for (var j = 0; j < i; j++) {\n          var one = this.ruleDayOfWeek(aRules[j], this.rule.wkst)[1];\n          var two = this.ruleDayOfWeek(aRules[i], this.rule.wkst)[1];\n\n          if (one > two) {\n            var tmp = aRules[i];\n            aRules[i] = aRules[j];\n            aRules[j] = tmp;\n          }\n        }\n      }\n    },\n    check_contract_restriction: function check_contract_restriction(aRuleType, v) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n      var pass = false;\n\n      if (aRuleType in this.by_data && ruleMapValue == icalrecur_iterator.CONTRACT) {\n        var ruleType = this.by_data[aRuleType];\n\n        for (var bydatakey in ruleType) {\n          /* istanbul ignore else */\n          if (ruleType.hasOwnProperty(bydatakey)) {\n            if (ruleType[bydatakey] == v) {\n              pass = true;\n              break;\n            }\n          }\n        }\n      } else {\n        // Not a contracting byrule or has no data, test passes\n        pass = true;\n      }\n\n      return pass;\n    },\n    check_contracting_rules: function check_contracting_rules() {\n      var dow = this.last.dayOfWeek();\n      var weekNo = this.last.weekNumber(this.rule.wkst);\n      var doy = this.last.dayOfYear();\n      return this.check_contract_restriction(\"BYSECOND\", this.last.second) && this.check_contract_restriction(\"BYMINUTE\", this.last.minute) && this.check_contract_restriction(\"BYHOUR\", this.last.hour) && this.check_contract_restriction(\"BYDAY\", ICAL.Recur.numericDayToIcalDay(dow)) && this.check_contract_restriction(\"BYWEEKNO\", weekNo) && this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) && this.check_contract_restriction(\"BYMONTH\", this.last.month) && this.check_contract_restriction(\"BYYEARDAY\", doy);\n    },\n    setup_defaults: function setup_defaults(aRuleType, req, deftime) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n\n      if (ruleMapValue != icalrecur_iterator.CONTRACT) {\n        if (!(aRuleType in this.by_data)) {\n          this.by_data[aRuleType] = [deftime];\n        }\n\n        if (this.rule.freq != req) {\n          return this.by_data[aRuleType][0];\n        }\n      }\n\n      return deftime;\n    },\n\n    /**\n     * Convert iterator into a serialize-able object.  Will preserve current\n     * iteration sequence to ensure the seamless continuation of the recurrence\n     * rule.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var result = Object.create(null);\n      result.initialized = this.initialized;\n      result.rule = this.rule.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.by_data = this.by_data;\n      result.days = this.days;\n      result.last = this.last.toJSON();\n      result.by_indices = this.by_indices;\n      result.occurrence_number = this.occurrence_number;\n      return result;\n    }\n  };\n  icalrecur_iterator._indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n  icalrecur_iterator._expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n  icalrecur_iterator.UNKNOWN = 0;\n  icalrecur_iterator.CONTRACT = 1;\n  icalrecur_iterator.EXPAND = 2;\n  icalrecur_iterator.ILLEGAL = 3;\n  return icalrecur_iterator;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.RecurExpansion = function () {\n  function formatTime(item) {\n    return ICAL.helpers.formatClassType(item, ICAL.Time);\n  }\n\n  function compareTime(a, b) {\n    return a.compare(b);\n  }\n\n  function isRecurringComponent(comp) {\n    return comp.hasProperty('rdate') || comp.hasProperty('rrule') || comp.hasProperty('recurrence-id');\n  }\n  /**\n   * @classdesc\n   * Primary class for expanding recurring rules.  Can take multiple rrules,\n   * rdates, exdate(s) and iterate (in order) over each next occurrence.\n   *\n   * Once initialized this class can also be serialized saved and continue\n   * iteration from the last point.\n   *\n   * NOTE: it is intended that this class is to be used\n   *       with ICAL.Event which handles recurrence exceptions.\n   *\n   * @example\n   * // assuming event is a parsed ical component\n   * var event;\n   *\n   * var expand = new ICAL.RecurExpansion({\n   *   component: event,\n   *   dtstart: event.getFirstPropertyValue('dtstart')\n   * });\n   *\n   * // remember there are infinite rules\n   * // so its a good idea to limit the scope\n   * // of the iterations then resume later on.\n   *\n   * // next is always an ICAL.Time or null\n   * var next;\n   *\n   * while (someCondition && (next = expand.next())) {\n   *   // do something with next\n   * }\n   *\n   * // save instance for later\n   * var json = JSON.stringify(expand);\n   *\n   * //...\n   *\n   * // NOTE: if the component's properties have\n   * //       changed you will need to rebuild the\n   * //       class and start over. This only works\n   * //       when the component's recurrence info is the same.\n   * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n   *\n   * @description\n   * The options object can be filled with the specified initial values. It can\n   * also contain additional members, as a result of serializing a previous\n   * expansion state, as shown in the example.\n   *\n   * @class\n   * @alias ICAL.RecurExpansion\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {ICAL.Time} options.dtstart\n   *        Start time of the event\n   * @param {ICAL.Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n\n\n  function RecurExpansion(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  RecurExpansion.prototype = {\n    /**\n     * True when iteration is fully completed.\n     * @type {Boolean}\n     */\n    complete: false,\n\n    /**\n     * Array of rrule iterators.\n     *\n     * @type {ICAL.RecurIterator[]}\n     * @private\n     */\n    ruleIterators: null,\n\n    /**\n     * Array of rdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    ruleDates: null,\n\n    /**\n     * Array of exdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    exDates: null,\n\n    /**\n     * Current position in ruleDates array.\n     * @type {Number}\n     * @private\n     */\n    ruleDateInc: 0,\n\n    /**\n     * Current position in exDates array\n     * @type {Number}\n     * @private\n     */\n    exDateInc: 0,\n\n    /**\n     * Current negative date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    exDate: null,\n\n    /**\n     * Current additional date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    ruleDate: null,\n\n    /**\n     * Start date of recurring rules.\n     *\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * Last expanded time\n     *\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * Initialize the recurrence expansion from the data object. The options\n     * object may also contain additional members, see the\n     * {@link ICAL.RecurExpansion constructor} for more details.\n     *\n     * @param {Object} options\n     *        Recurrence expansion options\n     * @param {ICAL.Time} options.dtstart\n     *        Start time of the event\n     * @param {ICAL.Component=} options.component\n     *        Component for expansion, required if not resuming.\n     */\n    fromData: function fromData(options) {\n      var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!start) {\n        throw new Error('.dtstart (ICAL.Time) must be given');\n      } else {\n        this.dtstart = start;\n      }\n\n      if (options.component) {\n        this._init(options.component);\n      } else {\n        this.last = formatTime(options.last) || start.clone();\n\n        if (!options.ruleIterators) {\n          throw new Error('.ruleIterators or .component must be given');\n        }\n\n        this.ruleIterators = options.ruleIterators.map(function (item) {\n          return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);\n        });\n        this.ruleDateInc = options.ruleDateInc;\n        this.exDateInc = options.exDateInc;\n\n        if (options.ruleDates) {\n          this.ruleDates = options.ruleDates.map(formatTime);\n          this.ruleDate = this.ruleDates[this.ruleDateInc];\n        }\n\n        if (options.exDates) {\n          this.exDates = options.exDates.map(formatTime);\n          this.exDate = this.exDates[this.exDateInc];\n        }\n\n        if (typeof options.complete !== 'undefined') {\n          this.complete = options.complete;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence in the series.\n     * @return {ICAL.Time}\n     */\n    next: function next() {\n      var iter;\n      var ruleOfDay;\n      var next;\n      var compare;\n      var maxTries = 500;\n      var currentTry = 0;\n\n      while (true) {\n        if (currentTry++ > maxTries) {\n          throw new Error('max tries have occured, rule may be impossible to forfill.');\n        }\n\n        next = this.ruleDate;\n        iter = this._nextRecurrenceIter(this.last); // no more matches\n        // because we increment the rule day or rule\n        // _after_ we choose a value this should be\n        // the only spot where we need to worry about the\n        // end of events.\n\n        if (!next && !iter) {\n          // there are no more iterators or rdates\n          this.complete = true;\n          break;\n        } // no next rule day or recurrence rule is first.\n\n\n        if (!next || iter && next.compare(iter.last) > 0) {\n          // must be cloned, recur will reuse the time element.\n          next = iter.last.clone(); // move to next so we can continue\n\n          iter.next();\n        } // if the ruleDate is still next increment it.\n\n\n        if (this.ruleDate === next) {\n          this._nextRuleDay();\n        }\n\n        this.last = next; // check the negative rules\n\n        if (this.exDate) {\n          compare = this.exDate.compare(this.last);\n\n          if (compare < 0) {\n            this._nextExDay();\n          } // if the current rule is excluded skip it.\n\n\n          if (compare === 0) {\n            this._nextExDay();\n\n            continue;\n          }\n        } //XXX: The spec states that after we resolve the final\n        //     list of dates we execute exdate this seems somewhat counter\n        //     intuitive to what I have seen most servers do so for now\n        //     I exclude based on the original date not the one that may\n        //     have been modified by the exception.\n\n\n        return this.last;\n      }\n    },\n\n    /**\n     * Converts object into a serialize-able format. This format can be passed\n     * back into the expansion to resume iteration.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      function toJSON(item) {\n        return item.toJSON();\n      }\n\n      var result = Object.create(null);\n      result.ruleIterators = this.ruleIterators.map(toJSON);\n\n      if (this.ruleDates) {\n        result.ruleDates = this.ruleDates.map(toJSON);\n      }\n\n      if (this.exDates) {\n        result.exDates = this.exDates.map(toJSON);\n      }\n\n      result.ruleDateInc = this.ruleDateInc;\n      result.exDateInc = this.exDateInc;\n      result.last = this.last.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.complete = this.complete;\n      return result;\n    },\n\n    /**\n     * Extract all dates from the properties in the given component. The\n     * properties will be filtered by the property name.\n     *\n     * @private\n     * @param {ICAL.Component} component        The component to search in\n     * @param {String} propertyName             The property name to search for\n     * @return {ICAL.Time[]}                    The extracted dates.\n     */\n    _extractDates: function _extractDates(component, propertyName) {\n      function handleProp(prop) {\n        idx = ICAL.helpers.binsearchInsert(result, prop, compareTime); // ordered insert\n\n        result.splice(idx, 0, prop);\n      }\n\n      var result = [];\n      var props = component.getAllProperties(propertyName);\n      var len = props.length;\n      var i = 0;\n      var prop;\n      var idx;\n\n      for (; i < len; i++) {\n        props[i].getValues().forEach(handleProp);\n      }\n\n      return result;\n    },\n\n    /**\n     * Initialize the recurrence expansion.\n     *\n     * @private\n     * @param {ICAL.Component} component    The component to initialize from.\n     */\n    _init: function _init(component) {\n      this.ruleIterators = [];\n      this.last = this.dtstart.clone(); // to provide api consistency non-recurring\n      // events can also use the iterator though it will\n      // only return a single time.\n\n      if (!isRecurringComponent(component)) {\n        this.ruleDate = this.last.clone();\n        this.complete = true;\n        return;\n      }\n\n      if (component.hasProperty('rdate')) {\n        this.ruleDates = this._extractDates(component, 'rdate'); // special hack for cases where first rdate is prior\n        // to the start date. We only check for the first rdate.\n        // This is mostly for google's crazy recurring date logic\n        // (contacts birthdays).\n\n        if (this.ruleDates[0] && this.ruleDates[0].compare(this.dtstart) < 0) {\n          this.ruleDateInc = 0;\n          this.last = this.ruleDates[0].clone();\n        } else {\n          this.ruleDateInc = ICAL.helpers.binsearchInsert(this.ruleDates, this.last, compareTime);\n        }\n\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (component.hasProperty('rrule')) {\n        var rules = component.getAllProperties('rrule');\n        var i = 0;\n        var len = rules.length;\n        var rule;\n        var iter;\n\n        for (; i < len; i++) {\n          rule = rules[i].getFirstValue();\n          iter = rule.iterator(this.dtstart);\n          this.ruleIterators.push(iter); // increment to the next occurrence so future\n          // calls to next return times beyond the initial iteration.\n          // XXX: I find this suspicious might be a bug?\n\n          iter.next();\n        }\n      }\n\n      if (component.hasProperty('exdate')) {\n        this.exDates = this._extractDates(component, 'exdate'); // if we have a .last day we increment the index to beyond it.\n\n        this.exDateInc = ICAL.helpers.binsearchInsert(this.exDates, this.last, compareTime);\n        this.exDate = this.exDates[this.exDateInc];\n      }\n    },\n\n    /**\n     * Advance to the next exdate\n     * @private\n     */\n    _nextExDay: function _nextExDay() {\n      this.exDate = this.exDates[++this.exDateInc];\n    },\n\n    /**\n     * Advance to the next rule date\n     * @private\n     */\n    _nextRuleDay: function _nextRuleDay() {\n      this.ruleDate = this.ruleDates[++this.ruleDateInc];\n    },\n\n    /**\n     * Find and return the recurrence rule with the most recent event and\n     * return it.\n     *\n     * @private\n     * @return {?ICAL.RecurIterator}    Found iterator.\n     */\n    _nextRecurrenceIter: function _nextRecurrenceIter() {\n      var iters = this.ruleIterators;\n\n      if (iters.length === 0) {\n        return null;\n      }\n\n      var len = iters.length;\n      var iter;\n      var iterTime;\n      var iterIdx = 0;\n      var chosenIter; // loop through each iterator\n\n      for (; iterIdx < len; iterIdx++) {\n        iter = iters[iterIdx];\n        iterTime = iter.last; // if iteration is complete\n        // then we must exclude it from\n        // the search and remove it.\n\n        if (iter.completed) {\n          len--;\n\n          if (iterIdx !== 0) {\n            iterIdx--;\n          }\n\n          iters.splice(iterIdx, 1);\n          continue;\n        } // find the most recent possible choice\n\n\n        if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n          // that iterator is saved\n          chosenIter = iter;\n        }\n      } // the chosen iterator is returned but not mutated\n      // this iterator contains the most recent event.\n\n\n      return chosenIter;\n    }\n  };\n  return RecurExpansion;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Event = function () {\n  /**\n   * @classdesc\n   * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n   * object, followed by the component/property layer. The highest level is the\n   * event representation, which this class is part of. See the\n   * {@tutorial layers} guide for more details.\n   *\n   * @class\n   * @alias ICAL.Event\n   * @param {ICAL.Component=} component         The ICAL.Component to base this event on\n   * @param {Object} options                    Options for this event\n   * @param {Boolean} options.strictExceptions\n   *          When true, will verify exceptions are related by their UUID\n   * @param {Array<ICAL.Component|ICAL.Event>} options.exceptions\n   *          Exceptions to this event, either as components or events. If not\n   *            specified exceptions will automatically be set in relation of\n   *            component's parent\n   */\n  function Event(component, options) {\n    if (!(component instanceof ICAL.Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new ICAL.Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    } else if (this.component.parent && !this.isRecurrenceException()) {\n      this.component.parent.getAllSubcomponents('vevent').forEach(function (event) {\n        if (event.hasProperty('recurrence-id')) {\n          this.relateException(event);\n        }\n      }, this);\n    }\n  }\n\n  Event.prototype = {\n    THISANDFUTURE: 'THISANDFUTURE',\n\n    /**\n     * List of related event exceptions.\n     *\n     * @type {ICAL.Event[]}\n     */\n    exceptions: null,\n\n    /**\n     * When true, will verify exceptions are related by their UUID.\n     *\n     * @type {Boolean}\n     */\n    strictExceptions: false,\n\n    /**\n     * Relates a given event exception to this object.  If the given component\n     * does not share the UID of this event it cannot be related and will throw\n     * an exception.\n     *\n     * If this component is an exception it cannot have other exceptions\n     * related to it.\n     *\n     * @param {ICAL.Component|ICAL.Event} obj       Component or event\n     */\n    relateException: function relateException(obj) {\n      if (this.isRecurrenceException()) {\n        throw new Error('cannot relate exception to exceptions');\n      }\n\n      if (obj instanceof ICAL.Component) {\n        obj = new ICAL.Event(obj);\n      }\n\n      if (this.strictExceptions && obj.uid !== this.uid) {\n        throw new Error('attempted to relate unrelated exception');\n      }\n\n      var id = obj.recurrenceId.toString(); // we don't sort or manage exceptions directly\n      // here the recurrence expander handles that.\n\n      this.exceptions[id] = obj; // index RANGE=THISANDFUTURE exceptions so we can\n      // look them up later in getOccurrenceDetails.\n\n      if (obj.modifiesFuture()) {\n        var item = [obj.recurrenceId.toUnixTime(), id]; // we keep them sorted so we can find the nearest\n        // value later on...\n\n        var idx = ICAL.helpers.binsearchInsert(this.rangeExceptions, item, compareRangeException);\n        this.rangeExceptions.splice(idx, 0, item);\n      }\n    },\n\n    /**\n     * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n     * value.\n     *\n     * @return {Boolean}        True, when exception is within range\n     */\n    modifiesFuture: function modifiesFuture() {\n      if (!this.component.hasProperty('recurrence-id')) {\n        return false;\n      }\n\n      var range = this.component.getFirstProperty('recurrence-id').getParameter('range');\n      return range === this.THISANDFUTURE;\n    },\n\n    /**\n     * Finds the range exception nearest to the given date.\n     *\n     * @param {ICAL.Time} time usually an occurrence time of an event\n     * @return {?ICAL.Event} the related event/exception or null\n     */\n    findRangeException: function findRangeException(time) {\n      if (!this.rangeExceptions.length) {\n        return null;\n      }\n\n      var utc = time.toUnixTime();\n      var idx = ICAL.helpers.binsearchInsert(this.rangeExceptions, [utc], compareRangeException);\n      idx -= 1; // occurs before\n\n      if (idx < 0) {\n        return null;\n      }\n\n      var rangeItem = this.rangeExceptions[idx];\n      /* istanbul ignore next: sanity check only */\n\n      if (utc < rangeItem[0]) {\n        return null;\n      }\n\n      return rangeItem[1];\n    },\n\n    /**\n     * This object is returned by {@link ICAL.Event#getOccurrenceDetails getOccurrenceDetails}\n     *\n     * @typedef {Object} occurrenceDetails\n     * @memberof ICAL.Event\n     * @property {ICAL.Time} recurrenceId       The passed in recurrence id\n     * @property {ICAL.Event} item              The occurrence\n     * @property {ICAL.Time} startDate          The start of the occurrence\n     * @property {ICAL.Time} endDate            The end of the occurrence\n     */\n\n    /**\n     * Returns the occurrence details based on its start time.  If the\n     * occurrence has an exception will return the details for that exception.\n     *\n     * NOTE: this method is intend to be used in conjunction\n     *       with the {@link ICAL.Event#iterator iterator} method.\n     *\n     * @param {ICAL.Time} occurrence time occurrence\n     * @return {ICAL.Event.occurrenceDetails} Information about the occurrence\n     */\n    getOccurrenceDetails: function getOccurrenceDetails(occurrence) {\n      var id = occurrence.toString();\n      var utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString();\n      var item;\n      var result = {\n        //XXX: Clone?\n        recurrenceId: occurrence\n      };\n\n      if (id in this.exceptions) {\n        item = result.item = this.exceptions[id];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else if (utcId in this.exceptions) {\n        item = this.exceptions[utcId];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else {\n        // range exceptions (RANGE=THISANDFUTURE) have a\n        // lower priority then direct exceptions but\n        // must be accounted for first. Their item is\n        // always the first exception with the range prop.\n        var rangeExceptionId = this.findRangeException(occurrence);\n        var end;\n\n        if (rangeExceptionId) {\n          var exception = this.exceptions[rangeExceptionId]; // range exception must modify standard time\n          // by the difference (if any) in start/end times.\n\n          result.item = exception;\n          var startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n          if (!startDiff) {\n            var original = exception.recurrenceId.clone();\n            var newStart = exception.startDate.clone(); // zones must be same otherwise subtract may be incorrect.\n\n            original.zone = newStart.zone;\n            startDiff = newStart.subtractDate(original);\n            this._rangeExceptionCache[rangeExceptionId] = startDiff;\n          }\n\n          var start = occurrence.clone();\n          start.zone = exception.startDate.zone;\n          start.addDuration(startDiff);\n          end = start.clone();\n          end.addDuration(exception.duration);\n          result.startDate = start;\n          result.endDate = end;\n        } else {\n          // no range exception standard expansion\n          end = occurrence.clone();\n          end.addDuration(this.duration);\n          result.endDate = end;\n          result.startDate = occurrence;\n          result.item = this;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Builds a recur expansion instance for a specific point in time (defaults\n     * to startDate).\n     *\n     * @param {ICAL.Time} startTime     Starting point for expansion\n     * @return {ICAL.RecurExpansion}    Expansion object\n     */\n    iterator: function iterator(startTime) {\n      return new ICAL.RecurExpansion({\n        component: this.component,\n        dtstart: startTime || this.startDate\n      });\n    },\n\n    /**\n     * Checks if the event is recurring\n     *\n     * @return {Boolean}        True, if event is recurring\n     */\n    isRecurring: function isRecurring() {\n      var comp = this.component;\n      return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n    },\n\n    /**\n     * Checks if the event describes a recurrence exception. See\n     * {@tutorial terminology} for details.\n     *\n     * @return {Boolean}    True, if the even describes a recurrence exception\n     */\n    isRecurrenceException: function isRecurrenceException() {\n      return this.component.hasProperty('recurrence-id');\n    },\n\n    /**\n     * Returns the types of recurrences this event may have.\n     *\n     * Returned as an object with the following possible keys:\n     *\n     *    - YEARLY\n     *    - MONTHLY\n     *    - WEEKLY\n     *    - DAILY\n     *    - MINUTELY\n     *    - SECONDLY\n     *\n     * @return {Object.<ICAL.Recur.frequencyValues, Boolean>}\n     *          Object of recurrence flags\n     */\n    getRecurrenceTypes: function getRecurrenceTypes() {\n      var rules = this.component.getAllProperties('rrule');\n      var i = 0;\n      var len = rules.length;\n      var result = Object.create(null);\n\n      for (; i < len; i++) {\n        var value = rules[i].getFirstValue();\n        result[value.freq] = true;\n      }\n\n      return result;\n    },\n\n    /**\n     * The uid of this event\n     * @type {String}\n     */\n    get uid() {\n      return this._firstProp('uid');\n    },\n\n    set uid(value) {\n      this._setProp('uid', value);\n    },\n\n    /**\n     * The start date\n     * @type {ICAL.Time}\n     */\n    get startDate() {\n      return this._firstProp('dtstart');\n    },\n\n    set startDate(value) {\n      this._setTime('dtstart', value);\n    },\n\n    /**\n     * The end date. This can be the result directly from the property, or the\n     * end date calculated from start date and duration. Setting the property\n     * will remove any duration properties.\n     * @type {ICAL.Time}\n     */\n    get endDate() {\n      var endDate = this._firstProp('dtend');\n\n      if (!endDate) {\n        var duration = this._firstProp('duration');\n\n        endDate = this.startDate.clone();\n\n        if (duration) {\n          endDate.addDuration(duration);\n        } else if (endDate.isDate) {\n          endDate.day += 1;\n        }\n      }\n\n      return endDate;\n    },\n\n    set endDate(value) {\n      if (this.component.hasProperty('duration')) {\n        this.component.removeProperty('duration');\n      }\n\n      this._setTime('dtend', value);\n    },\n\n    /**\n     * The duration. This can be the result directly from the property, or the\n     * duration calculated from start date and end date. Setting the property\n     * will remove any `dtend` properties.\n     * @type {ICAL.Duration}\n     */\n    get duration() {\n      var duration = this._firstProp('duration');\n\n      if (!duration) {\n        return this.endDate.subtractDateTz(this.startDate);\n      }\n\n      return duration;\n    },\n\n    set duration(value) {\n      if (this.component.hasProperty('dtend')) {\n        this.component.removeProperty('dtend');\n      }\n\n      this._setProp('duration', value);\n    },\n\n    /**\n     * The location of the event.\n     * @type {String}\n     */\n    get location() {\n      return this._firstProp('location');\n    },\n\n    set location(value) {\n      return this._setProp('location', value);\n    },\n\n    /**\n     * The attendees in the event\n     * @type {ICAL.Property[]}\n     * @readonly\n     */\n    get attendees() {\n      //XXX: This is way lame we should have a better\n      //     data structure for this later.\n      return this.component.getAllProperties('attendee');\n    },\n\n    /**\n     * The event summary\n     * @type {String}\n     */\n    get summary() {\n      return this._firstProp('summary');\n    },\n\n    set summary(value) {\n      this._setProp('summary', value);\n    },\n\n    /**\n     * The event description.\n     * @type {String}\n     */\n    get description() {\n      return this._firstProp('description');\n    },\n\n    set description(value) {\n      this._setProp('description', value);\n    },\n\n    /**\n     * The organizer value as an uri. In most cases this is a mailto: uri, but\n     * it can also be something else, like urn:uuid:...\n     * @type {String}\n     */\n    get organizer() {\n      return this._firstProp('organizer');\n    },\n\n    set organizer(value) {\n      this._setProp('organizer', value);\n    },\n\n    /**\n     * The sequence value for this event. Used for scheduling\n     * see {@tutorial terminology}.\n     * @type {Number}\n     */\n    get sequence() {\n      return this._firstProp('sequence');\n    },\n\n    set sequence(value) {\n      this._setProp('sequence', value);\n    },\n\n    /**\n     * The recurrence id for this event. See {@tutorial terminology} for details.\n     * @type {ICAL.Time}\n     */\n    get recurrenceId() {\n      return this._firstProp('recurrence-id');\n    },\n\n    set recurrenceId(value) {\n      this._setTime('recurrence-id', value);\n    },\n\n    /**\n     * Set/update a time property's value.\n     * This will also update the TZID of the property.\n     *\n     * TODO: this method handles the case where we are switching\n     * from a known timezone to an implied timezone (one without TZID).\n     * This does _not_ handle the case of moving between a known\n     *  (by TimezoneService) timezone to an unknown timezone...\n     *\n     * We will not add/remove/update the VTIMEZONE subcomponents\n     *  leading to invalid ICAL data...\n     * @private\n     * @param {String} propName     The property name\n     * @param {ICAL.Time} time      The time to set\n     */\n    _setTime: function _setTime(propName, time) {\n      var prop = this.component.getFirstProperty(propName);\n\n      if (!prop) {\n        prop = new ICAL.Property(propName);\n        this.component.addProperty(prop);\n      } // utc and local don't get a tzid\n\n\n      if (time.zone === ICAL.Timezone.localTimezone || time.zone === ICAL.Timezone.utcTimezone) {\n        // remove the tzid\n        prop.removeParameter('tzid');\n      } else {\n        prop.setParameter('tzid', time.zone.tzid);\n      }\n\n      prop.setValue(time);\n    },\n    _setProp: function _setProp(name, value) {\n      this.component.updatePropertyWithValue(name, value);\n    },\n    _firstProp: function _firstProp(name) {\n      return this.component.getFirstPropertyValue(name);\n    },\n\n    /**\n     * The string representation of this event.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.component.toString();\n    }\n  };\n\n  function compareRangeException(a, b) {\n    if (a[0] > b[0]) return 1;\n    if (b[0] > a[0]) return -1;\n    return 0;\n  }\n\n  return Event;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.ComponentParser = function () {\n  /**\n   * @classdesc\n   * The ComponentParser is used to process a String or jCal Object,\n   * firing callbacks for various found components, as well as completion.\n   *\n   * @example\n   * var options = {\n   *   // when false no events will be emitted for type\n   *   parseEvent: true,\n   *   parseTimezone: true\n   * };\n   *\n   * var parser = new ICAL.ComponentParser(options);\n   *\n   * parser.onevent(eventComponent) {\n   *   //...\n   * }\n   *\n   * // ontimezone, etc...\n   *\n   * parser.oncomplete = function() {\n   *\n   * };\n   *\n   * parser.process(stringOrComponent);\n   *\n   * @class\n   * @alias ICAL.ComponentParser\n   * @param {Object=} options        Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  function ComponentParser(options) {\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    var key;\n\n    for (key in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(key)) {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  ComponentParser.prototype = {\n    /**\n     * When true, parse events\n     *\n     * @type {Boolean}\n     */\n    parseEvent: true,\n\n    /**\n     * When true, parse timezones\n     *\n     * @type {Boolean}\n     */\n    parseTimezone: true,\n\n    /* SAX like events here for reference */\n\n    /**\n     * Fired when parsing is complete\n     * @callback\n     */\n    oncomplete:\n    /* istanbul ignore next */\n    function oncomplete() {},\n\n    /**\n     * Fired if an error occurs during parsing.\n     *\n     * @callback\n     * @param {Error} err details of error\n     */\n    onerror:\n    /* istanbul ignore next */\n    function onerror(err) {},\n\n    /**\n     * Fired when a top level component (VTIMEZONE) is found\n     *\n     * @callback\n     * @param {ICAL.Timezone} component     Timezone object\n     */\n    ontimezone:\n    /* istanbul ignore next */\n    function ontimezone(component) {},\n\n    /**\n     * Fired when a top level component (VEVENT) is found.\n     *\n     * @callback\n     * @param {ICAL.Event} component    Top level component\n     */\n    onevent:\n    /* istanbul ignore next */\n    function onevent(component) {},\n\n    /**\n     * Process a string or parse ical object.  This function itself will return\n     * nothing but will start the parsing process.\n     *\n     * Events must be registered prior to calling this method.\n     *\n     * @param {ICAL.Component|String|Object} ical      The component to process,\n     *        either in its final form, as a jCal Object, or string representation\n     */\n    process: function process(ical) {\n      //TODO: this is sync now in the future we will have a incremental parser.\n      if (typeof ical === 'string') {\n        ical = ICAL.parse(ical);\n      }\n\n      if (!(ical instanceof ICAL.Component)) {\n        ical = new ICAL.Component(ical);\n      }\n\n      var components = ical.getAllSubcomponents();\n      var i = 0;\n      var len = components.length;\n      var component;\n\n      for (; i < len; i++) {\n        component = components[i];\n\n        switch (component.name) {\n          case 'vtimezone':\n            if (this.parseTimezone) {\n              var tzid = component.getFirstPropertyValue('tzid');\n\n              if (tzid) {\n                this.ontimezone(new ICAL.Timezone({\n                  tzid: tzid,\n                  component: component\n                }));\n              }\n            }\n\n            break;\n\n          case 'vevent':\n            if (this.parseEvent) {\n              this.onevent(new ICAL.Event(component));\n            }\n\n            break;\n\n          default:\n            continue;\n        }\n      } //XXX: ideally we should do a \"nextTick\" here\n      //     so in all cases this is actually async.\n\n\n      this.oncomplete();\n    }\n  };\n  return ComponentParser;\n}();"],"sourceRoot":""}