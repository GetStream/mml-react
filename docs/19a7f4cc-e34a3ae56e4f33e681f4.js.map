{"version":3,"sources":["webpack:///../node_modules/ical.js/build/ical.js"],"names":["OPTIONS","zones","TimezoneService","ICAL","module","exports","foldLength","newLineChar","helpers","isStrictlyNaN","number","isNaN","strictParseInt","string","result","parseInt","Error","formatClassType","data","type","unescapedIndexOf","buffer","search","pos","indexOf","binsearchInsert","list","seekVal","cmpfunc","length","mid","cmpval","low","high","Math","floor","dumpn","debug","console","input","log","dump","arguments","clone","aSrc","aDeep","Date","getTime","Array","isArray","arr","i","push","obj","name","Object","prototype","hasOwnProperty","call","foldline","aLine","line","substr","pad2","String","trunc","ceil","inherits","base","child","extra","F","extend","source","target","key","descr","getOwnPropertyDescriptor","defineProperty","design","FROM_VCARD_NEWLINE","TO_VCARD_NEWLINE","createTextType","fromNewline","toNewline","matches","fromICAL","aValue","structuredEscape","value","newline","RegExp","replace","replaceNewlineReplace","replaceNewline","toICAL","regEx","str","DEFAULT_TYPE_TEXT","defaultType","DEFAULT_TYPE_TEXT_MULTI","multiValue","DEFAULT_TYPE_TEXT_STRUCTURED","structuredValue","DEFAULT_TYPE_INTEGER","DEFAULT_TYPE_DATETIME_DATE","allowedTypes","DEFAULT_TYPE_DATETIME","DEFAULT_TYPE_URI","DEFAULT_TYPE_UTCOFFSET","DEFAULT_TYPE_RECUR","DEFAULT_TYPE_DATE_ANDOR_TIME","commonProperties","commonValues","values","float","parsed","parseFloat","integer","decorate","UtcOffset","fromString","undecorate","toString","icalValues","text","uri","aString","Binary","aBinary","aProp","Time","fromDateString","fromDateTimeString","duration","Duration","period","parts","split","isValueString","join","Period","fromJSON","toJSON","recur","Recur","_stringToData","k","val","date","numericDayToIcalDay","toUpperCase","fromData","aRecur","time","icalProperties","detectType","vcardValues","VCardTime","fromDateAndOrTimeString","splitzone","_splitZone","zone","isFromIcal","lastChar","signChar","sign","timestamp","vcardProperties","vcard3Values","binary","vcard","vcard3Properties","fn","n","nickname","photo","bday","adr","label","tel","email","mailer","tz","geo","title","role","logo","agent","org","note","prodid","rev","sound","class","icalSet","param","allowXName","allowIanaToken","valueType","multiValueSeparateDQuote","property","vcardSet","vcard3Set","defaultSet","components","vcard3","vevent","vtodo","vjournal","valarm","vtimezone","daylight","standard","icalendar","getDesignSet","componentName","stringify","jCal","len","component","designSet","props","propIdx","propLen","designSetName","comps","compIdx","compLen","noFold","paramName","jsName","params","map","_rfc6868Unescape","propertyValue","propDetails","isDefault","slice","delim","innerMulti","x","RFC6868_REPLACE_MAP","parse","CHAR","ParserError","message","this","e","stack","shift","parser","state","root","_eachLine","err","_handleContentLine","lastParamIndex","lastValuePos","parsedParams","valuePos","paramPos","substring","toLowerCase","_parseParameters","newComponent","pop","propertyDetails","_parseMultiValue","_parseValue","start","lcname","mvdelim","lastParam","_rfc6868Escape","extendedValue","nextPos","propValuePos","delimiter","lastPos","callback","firstChar","newlineOffset","trim","Component","parent","_hydratedPropertyCount","_hydratedComponentCount","_designSet","_hydrateComponent","index","_components","comp","_hydrateProperty","_properties","prop","Property","getFirstSubcomponent","getAllSubcomponents","jCalLen","hasProperty","getFirstProperty","getFirstPropertyValue","getFirstValue","getAllProperties","_removeObjectByIndex","jCalIndex","cache","splice","_removeObject","nameOrObject","objects","cached","_removeAllObjects","addSubcomponent","removeSubcomponent","idx","nameOrComp","removed","removeAllSubcomponents","addProperty","TypeError","removeProperty","addPropertyWithValue","setValue","updatePropertyWithValue","nameOrProp","removeAllProperties","_parent","getDefaultType","_updateType","p","designSetChanged","isDecorated","isMultiValue","isStructuredValue","_hydrateValue","_values","_decorate","_undecorate","_setDecoratedValue","getParameter","setParameter","removeParameter","details","resetType","removeAllValues","getValues","setValues","icaltype","toICALString","aData","hours","minutes","factor","fromSeconds","toSeconds","_normalize","aSeconds","secs","abs","compare","other","a","b","options","instance","decodeValue","_b64_decode","setEncodedValue","_b64_encode","h1","h2","h3","h4","bits","b64","ac","enc","tmp_arr","charCodeAt","charAt","r","o1","o2","o3","fromCharCode","wrappedJSObject","end","icalclass","getDuration","subtractDate","getEnd","addDuration","DURATION_LETTERS","parseDurationChunk","letter","object","isNegative","num","weeks","days","seconds","propsToCopy","reset","aOther","thisSeconds","otherSeconds","normalize","aStr","dict","create","chunks","numeric","Timezone","tzid","location","tznames","latitude","longitude","expandedUntilYear","changes","utcOffset","tt","utcTimezone","localTimezone","_ensureCoverage","year","tt_change","month","day","hour","minute","second","change_num","_findNearbyChange","change_num_to_use","step","change","prevUtcOffset","adjust_change","_compare_change_fn","zone_change","tmp_change","prev_zone_change","is_daylight","aYear","_minimumExpansionYear","today","now","changesEndYear","EXTRA_COVERAGE","MAX_YEAR","subcomps","_expandComponent","sort","aComponent","dtstart","convert_tzoffset","offset","init_changes","changebase","rdatekey","isDate","rrule","until","adjust","occ","iterator","next","convert_time","from_zone","to_zone","utc","Z","UTC","GMT","has","get","register","timezone","remove","_time","_dowCache","_wnCache","_cachedUnixTime","_pendingNormalization","epochTime","resetTo","fromJSDate","aDate","useUTC","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","aZone","dayOfWeek","dowCacheKey","q","m","Y","h","dayOfYear","is_leap","isLeapYear","daysInYearPassedMonth","startOfWeek","aWeekStart","firstDow","SUNDAY","endOfWeek","startOfMonth","endOfMonth","daysInMonth","startOfYear","endOfYear","startDoyWeek","aFirstDayOfWeek","delta","getDominicalLetter","nthWeekDay","aDayOfWeek","aPos","weekday","otherDay","isNthWeekDay","dow","weekNumber","week1","wnCacheKey","dt","isoyear","weekOneStarts","daysBetween","answer","aDuration","mult","unixTime","toUnixTime","subtractDateTz","compareDateOnlyTz","cmp","attr","_cmp_attr","convertToZone","rc","copy","zone_equals","toJSDate","aExtraDays","aExtraHours","aExtraMinutes","aExtraSeconds","aTime","minutesOverflow","hoursOverflow","daysOverflow","yearsOverflow","fromUnixTime","epoch","ms","defineAttr","set","fromDayOfYear","aDayOfYear","doy","auto_normalize","fromStringv2","t","wkst","DEFAULT_WEEK_START","THURSDAY","yr","dom","MONDAY","TUESDAY","WEDNESDAY","FRIDAY","SATURDAY","apply","p2","y","d","mm","s","hasMonth","hasDay","hasHour","hasMinute","hasSecond","datepart","timepart","aIcalType","part","v","tmz","tm","dtlen","tmlen","hasDashDate","hasDashTime","o","DOW_MAP","SU","MO","TU","WE","TH","FR","SA","REVERSE_DOW_MAP","parseNumericValue","min","max","undefined","interval","count","freq","aStart","RecurIterator","rule","isFinite","isByCount","addComponent","aType","ucname","setComponent","aValues","getComponent","getNextOccurrence","aStartTime","aRecurrenceId","iter","uckey","partDesign","icalDayToNumericDay","res","kparts","VALID_DAY_NAMES","VALID_BYDAY_PART","ALLOWED_FREQ","optionDesign","FREQ","fmtIcal","COUNT","INTERVAL","UNTIL","WKST","test","BYSECOND","bind","BYMINUTE","BYHOUR","BYDAY","BYMONTHDAY","BYYEARDAY","BYWEEKNO","BYMONTH","BYSETPOS","partArr","partArrIdx","partArrLen","icalrecur_iterator","completed","last","occurrence_number","by_indices","initialized","by_data","days_index","init","sort_byday_rules","setup_defaults","bydayParts","ruleDayOfWeek","wkdy","dayName","expand_year_days","increment_year","_nextByYearDay","has_by_data","tempLast","initLast","dayOfMonth","increment_month","_byDayAndMonthDay","valid","before","next_second","next_minute","next_hour","next_day","next_week","next_month","next_year","check_contracting_rules","next_generic","increment_second","inc","increment_generic","increment_minute","increment_hour","this_freq","increment_monthday","end_of_data","next_weekday_by_week","week_no","normalizeByMonthDayRules","rules","newRules","ruleIdx","isInit","byMonthDay","dateLen","byDay","dateIdx","dayLen","dataIsValid","self","lastDay","initMonth","nextMonth","monthsCounter","dayIdx","data_valid","setpos","setpos_total","last_day","is_day_in_byday","check_set_position","keys","coded_day","match","aRuleType","aInterval","aDateAttr","aFollowingAttr","aPreviousIncr","has_by_rule","dta","years","aFactor","aNextIncrement","nextunit","validWeeks","monthIdx","first_week","last_week","weekIdx","weekno","partCount","t1","monthkey","t2","monthdaykey","t3","day_","month_","concat","expand_by_day","first_dow","doy_offset","last_dow","by_month_day","spIndex","daycodedkey","month_day","first_matching_day","last_matching_day","expandedDays","daykey","days_list","tmp","start_dow","end_dow","end_year_day","first","this_dow","aRules","j","one","two","check_contract_restriction","indexMapValue","_indexMap","ruleMapValue","_expandMap","pass","CONTRACT","ruleType","bydatakey","weekNo","req","deftime","UNKNOWN","EXPAND","ILLEGAL","RecurExpansion","formatTime","item","compareTime","ruleDates","exDates","complete","ruleIterators","ruleDateInc","exDateInc","exDate","ruleDate","_init","currentTry","_nextRecurrenceIter","_nextRuleDay","_nextExDay","_extractDates","propertyName","handleProp","forEach","iters","iterTime","chosenIter","iterIdx","Event","_rangeExceptionCache","exceptions","rangeExceptions","strictExceptions","relateException","compareRangeException","THISANDFUTURE","isRecurrenceException","uid","id","recurrenceId","modifiesFuture","findRangeException","rangeItem","getOccurrenceDetails","occurrence","utcId","startDate","endDate","rangeExceptionId","exception","startDiff","original","newStart","startTime","isRecurring","getRecurrenceTypes","_firstProp","_setProp","_setTime","propName","ComponentParser","parseEvent","parseTimezone","oncomplete","onerror","ontimezone","onevent","process","ical"],"mappings":"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","file":"19a7f4cc-e34a3ae56e4f33e681f4.js","sourcesContent":["/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/* istanbul ignore next */\n\n/* jshint ignore:start */\nif (typeof module === 'object') {\n  // CommonJS, where exports may be different each time.\n  ICAL = module.exports;\n} else if (typeof ICAL !== 'object') {\n  /* istanbul ignore next */\n\n  /** @ignore */\n  this.ICAL = {};\n}\n/* jshint ignore:end */\n\n/**\n * The number of characters before iCalendar line folding should occur\n * @type {Number}\n * @default 75\n */\n\n\nICAL.foldLength = 75;\n/**\n * The character(s) to be used for a newline. The default value is provided by\n * rfc5545.\n * @type {String}\n * @default \"\\r\\n\"\n */\n\nICAL.newLineChar = '\\r\\n';\n/**\n * Helper functions used in various places within ical.js\n * @namespace\n */\n\nICAL.helpers = {\n  /**\n   * Checks if the given type is of the number type and also NaN.\n   *\n   * @param {Number} number     The number to check\n   * @return {Boolean}          True, if the number is strictly NaN\n   */\n  isStrictlyNaN: function isStrictlyNaN(number) {\n    return typeof number === 'number' && isNaN(number);\n  },\n\n  /**\n   * Parses a string value that is expected to be an integer, when the valid is\n   * not an integer throws a decoration error.\n   *\n   * @param {String} string     Raw string input\n   * @return {Number}           Parsed integer\n   */\n  strictParseInt: function strictParseInt(string) {\n    var result = parseInt(string, 10);\n\n    if (ICAL.helpers.isStrictlyNaN(result)) {\n      throw new Error('Could not extract integer from \"' + string + '\"');\n    }\n\n    return result;\n  },\n\n  /**\n   * Creates or returns a class instance of a given type with the initialization\n   * data if the data is not already an instance of the given type.\n   *\n   * @example\n   * var time = new ICAL.Time(...);\n   * var result = ICAL.helpers.formatClassType(time, ICAL.Time);\n   *\n   * (result instanceof ICAL.Time)\n   * // => true\n   *\n   * result = ICAL.helpers.formatClassType({}, ICAL.Time);\n   * (result isntanceof ICAL.Time)\n   * // => true\n   *\n   *\n   * @param {Object} data       object initialization data\n   * @param {Object} type       object type (like ICAL.Time)\n   * @return {?}                An instance of the found type.\n   */\n  formatClassType: function formatClassType(data, type) {\n    if (typeof data === 'undefined') {\n      return undefined;\n    }\n\n    if (data instanceof type) {\n      return data;\n    }\n\n    return new type(data);\n  },\n\n  /**\n   * Identical to indexOf but will only match values when they are not preceded\n   * by a backslash character.\n   *\n   * @param {String} buffer         String to search\n   * @param {String} search         Value to look for\n   * @param {Number} pos            Start position\n   * @return {Number}               The position, or -1 if not found\n   */\n  unescapedIndexOf: function unescapedIndexOf(buffer, search, pos) {\n    while ((pos = buffer.indexOf(search, pos)) !== -1) {\n      if (pos > 0 && buffer[pos - 1] === '\\\\') {\n        pos += 1;\n      } else {\n        return pos;\n      }\n    }\n\n    return -1;\n  },\n\n  /**\n   * Find the index for insertion using binary search.\n   *\n   * @param {Array} list            The list to search\n   * @param {?} seekVal             The value to insert\n   * @param {function(?,?)} cmpfunc The comparison func, that can\n   *                                  compare two seekVals\n   * @return {Number}               The insert position\n   */\n  binsearchInsert: function binsearchInsert(list, seekVal, cmpfunc) {\n    if (!list.length) return 0;\n    var low = 0,\n        high = list.length - 1,\n        mid,\n        cmpval;\n\n    while (low <= high) {\n      mid = low + Math.floor((high - low) / 2);\n      cmpval = cmpfunc(seekVal, list[mid]);\n      if (cmpval < 0) high = mid - 1;else if (cmpval > 0) low = mid + 1;else break;\n    }\n\n    if (cmpval < 0) return mid; // insertion is displacing, so use mid outright.\n    else if (cmpval > 0) return mid + 1;else return mid;\n  },\n\n  /**\n   * Convenience function for debug output\n   * @private\n   */\n  dumpn:\n  /* istanbul ignore next */\n  function dumpn() {\n    if (!ICAL.debug) {\n      return;\n    }\n\n    if (typeof console !== 'undefined' && 'log' in console) {\n      ICAL.helpers.dumpn = function consoleDumpn(input) {\n        console.log(input);\n      };\n    } else {\n      ICAL.helpers.dumpn = function geckoDumpn(input) {\n        dump(input + '\\n');\n      };\n    }\n\n    ICAL.helpers.dumpn(arguments[0]);\n  },\n\n  /**\n   * Clone the passed object or primitive. By default a shallow clone will be\n   * executed.\n   *\n   * @param {*} aSrc            The thing to clone\n   * @param {Boolean=} aDeep    If true, a deep clone will be performed\n   * @return {*}                The copy of the thing\n   */\n  clone: function clone(aSrc, aDeep) {\n    if (!aSrc || typeof aSrc != \"object\") {\n      return aSrc;\n    } else if (aSrc instanceof Date) {\n      return new Date(aSrc.getTime());\n    } else if (\"clone\" in aSrc) {\n      return aSrc.clone();\n    } else if (Array.isArray(aSrc)) {\n      var arr = [];\n\n      for (var i = 0; i < aSrc.length; i++) {\n        arr.push(aDeep ? ICAL.helpers.clone(aSrc[i], true) : aSrc[i]);\n      }\n\n      return arr;\n    } else {\n      var obj = {};\n\n      for (var name in aSrc) {\n        // uses prototype method to allow use of Object.create(null);\n\n        /* istanbul ignore else */\n        if (Object.prototype.hasOwnProperty.call(aSrc, name)) {\n          if (aDeep) {\n            obj[name] = ICAL.helpers.clone(aSrc[name], true);\n          } else {\n            obj[name] = aSrc[name];\n          }\n        }\n      }\n\n      return obj;\n    }\n  },\n\n  /**\n   * Performs iCalendar line folding. A line ending character is inserted and\n   * the next line begins with a whitespace.\n   *\n   * @example\n   * SUMMARY:This line will be fold\n   *  ed right in the middle of a word.\n   *\n   * @param {String} aLine      The line to fold\n   * @return {String}           The folded line\n   */\n  foldline: function foldline(aLine) {\n    var result = \"\";\n    var line = aLine || \"\";\n\n    while (line.length) {\n      result += ICAL.newLineChar + \" \" + line.substr(0, ICAL.foldLength);\n      line = line.substr(ICAL.foldLength);\n    }\n\n    return result.substr(ICAL.newLineChar.length + 1);\n  },\n\n  /**\n   * Pads the given string or number with zeros so it will have at least two\n   * characters.\n   *\n   * @param {String|Number} data    The string or number to pad\n   * @return {String}               The number padded as a string\n   */\n  pad2: function pad(data) {\n    if (typeof data !== 'string') {\n      // handle fractions.\n      if (typeof data === 'number') {\n        data = parseInt(data);\n      }\n\n      data = String(data);\n    }\n\n    var len = data.length;\n\n    switch (len) {\n      case 0:\n        return '00';\n\n      case 1:\n        return '0' + data;\n\n      default:\n        return data;\n    }\n  },\n\n  /**\n   * Truncates the given number, correctly handling negative numbers.\n   *\n   * @param {Number} number     The number to truncate\n   * @return {Number}           The truncated number\n   */\n  trunc: function trunc(number) {\n    return number < 0 ? Math.ceil(number) : Math.floor(number);\n  },\n\n  /**\n   * Poor-man's cross-browser inheritance for JavaScript. Doesn't support all\n   * the features, but enough for our usage.\n   *\n   * @param {Function} base     The base class constructor function.\n   * @param {Function} child    The child class constructor function.\n   * @param {Object} extra      Extends the prototype with extra properties\n   *                              and methods\n   */\n  inherits: function inherits(base, child, extra) {\n    function F() {}\n\n    F.prototype = base.prototype;\n    child.prototype = new F();\n\n    if (extra) {\n      ICAL.helpers.extend(extra, child.prototype);\n    }\n  },\n\n  /**\n   * Poor-man's cross-browser object extension. Doesn't support all the\n   * features, but enough for our usage. Note that the target's properties are\n   * not overwritten with the source properties.\n   *\n   * @example\n   * var child = ICAL.helpers.extend(parent, {\n   *   \"bar\": 123\n   * });\n   *\n   * @param {Object} source     The object to extend\n   * @param {Object} target     The object to extend with\n   * @return {Object}           Returns the target.\n   */\n  extend: function extend(source, target) {\n    for (var key in source) {\n      var descr = Object.getOwnPropertyDescriptor(source, key);\n\n      if (descr && !Object.getOwnPropertyDescriptor(target, key)) {\n        Object.defineProperty(target, key, descr);\n      }\n    }\n\n    return target;\n  }\n};\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/** @namespace ICAL */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\nICAL.design = function () {\n  'use strict';\n\n  var FROM_ICAL_NEWLINE = /\\\\\\\\|\\\\;|\\\\,|\\\\[Nn]/g;\n  var TO_ICAL_NEWLINE = /\\\\|;|,|\\n/g;\n  var FROM_VCARD_NEWLINE = /\\\\\\\\|\\\\,|\\\\[Nn]/g;\n  var TO_VCARD_NEWLINE = /\\\\|,|\\n/g;\n\n  function createTextType(fromNewline, toNewline) {\n    var result = {\n      matches: /.*/,\n      fromICAL: function fromICAL(aValue, structuredEscape) {\n        return replaceNewline(aValue, fromNewline, structuredEscape);\n      },\n      toICAL: function toICAL(aValue, structuredEscape) {\n        var regEx = toNewline;\n        if (structuredEscape) regEx = new RegExp(regEx.source + '|' + structuredEscape);\n        return aValue.replace(regEx, function (str) {\n          switch (str) {\n            case \"\\\\\":\n              return \"\\\\\\\\\";\n\n            case \";\":\n              return \"\\\\;\";\n\n            case \",\":\n              return \"\\\\,\";\n\n            case \"\\n\":\n              return \"\\\\n\";\n\n            /* istanbul ignore next */\n\n            default:\n              return str;\n          }\n        });\n      }\n    };\n    return result;\n  } // default types used multiple times\n\n\n  var DEFAULT_TYPE_TEXT = {\n    defaultType: \"text\"\n  };\n  var DEFAULT_TYPE_TEXT_MULTI = {\n    defaultType: \"text\",\n    multiValue: \",\"\n  };\n  var DEFAULT_TYPE_TEXT_STRUCTURED = {\n    defaultType: \"text\",\n    structuredValue: \";\"\n  };\n  var DEFAULT_TYPE_INTEGER = {\n    defaultType: \"integer\"\n  };\n  var DEFAULT_TYPE_DATETIME_DATE = {\n    defaultType: \"date-time\",\n    allowedTypes: [\"date-time\", \"date\"]\n  };\n  var DEFAULT_TYPE_DATETIME = {\n    defaultType: \"date-time\"\n  };\n  var DEFAULT_TYPE_URI = {\n    defaultType: \"uri\"\n  };\n  var DEFAULT_TYPE_UTCOFFSET = {\n    defaultType: \"utc-offset\"\n  };\n  var DEFAULT_TYPE_RECUR = {\n    defaultType: \"recur\"\n  };\n  var DEFAULT_TYPE_DATE_ANDOR_TIME = {\n    defaultType: \"date-and-or-time\",\n    allowedTypes: [\"date-time\", \"date\", \"text\"]\n  };\n\n  function replaceNewlineReplace(string) {\n    switch (string) {\n      case \"\\\\\\\\\":\n        return \"\\\\\";\n\n      case \"\\\\;\":\n        return \";\";\n\n      case \"\\\\,\":\n        return \",\";\n\n      case \"\\\\n\":\n      case \"\\\\N\":\n        return \"\\n\";\n\n      /* istanbul ignore next */\n\n      default:\n        return string;\n    }\n  }\n\n  function replaceNewline(value, newline, structuredEscape) {\n    // avoid regex when possible.\n    if (value.indexOf('\\\\') === -1) {\n      return value;\n    }\n\n    if (structuredEscape) newline = new RegExp(newline.source + '|\\\\\\\\' + structuredEscape);\n    return value.replace(newline, replaceNewlineReplace);\n  }\n\n  var commonProperties = {\n    \"categories\": DEFAULT_TYPE_TEXT_MULTI,\n    \"url\": DEFAULT_TYPE_URI,\n    \"version\": DEFAULT_TYPE_TEXT,\n    \"uid\": DEFAULT_TYPE_TEXT\n  };\n  var commonValues = {\n    \"boolean\": {\n      values: [\"TRUE\", \"FALSE\"],\n      fromICAL: function fromICAL(aValue) {\n        switch (aValue) {\n          case 'TRUE':\n            return true;\n\n          case 'FALSE':\n            return false;\n\n          default:\n            //TODO: parser warning\n            return false;\n        }\n      },\n      toICAL: function toICAL(aValue) {\n        if (aValue) {\n          return 'TRUE';\n        }\n\n        return 'FALSE';\n      }\n    },\n    float: {\n      matches: /^[+-]?\\d+\\.\\d+$/,\n      fromICAL: function fromICAL(aValue) {\n        var parsed = parseFloat(aValue);\n\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          // TODO: parser warning\n          return 0.0;\n        }\n\n        return parsed;\n      },\n      toICAL: function toICAL(aValue) {\n        return String(aValue);\n      }\n    },\n    integer: {\n      fromICAL: function fromICAL(aValue) {\n        var parsed = parseInt(aValue);\n\n        if (ICAL.helpers.isStrictlyNaN(parsed)) {\n          return 0;\n        }\n\n        return parsed;\n      },\n      toICAL: function toICAL(aValue) {\n        return String(aValue);\n      }\n    },\n    \"utc-offset\": {\n      toICAL: function toICAL(aValue) {\n        if (aValue.length < 7) {\n          // no seconds\n          // -0500\n          return aValue.substr(0, 3) + aValue.substr(4, 2);\n        } else {\n          // seconds\n          // -050000\n          return aValue.substr(0, 3) + aValue.substr(4, 2) + aValue.substr(7, 2);\n        }\n      },\n      fromICAL: function fromICAL(aValue) {\n        if (aValue.length < 6) {\n          // no seconds\n          // -05:00\n          return aValue.substr(0, 3) + ':' + aValue.substr(3, 2);\n        } else {\n          // seconds\n          // -05:00:00\n          return aValue.substr(0, 3) + ':' + aValue.substr(3, 2) + ':' + aValue.substr(5, 2);\n        }\n      },\n      decorate: function decorate(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    }\n  };\n  var icalParams = {\n    // Although the syntax is DQUOTE uri DQUOTE, I don't think we should\n    // enfoce anything aside from it being a valid content line.\n    //\n    // At least some params require - if multi values are used - DQUOTEs\n    // for each of its values - e.g. delegated-from=\"uri1\",\"uri2\"\n    // To indicate this, I introduced the new k/v pair\n    // multiValueSeparateDQuote: true\n    //\n    // \"ALTREP\": { ... },\n    // CN just wants a param-value\n    // \"CN\": { ... }\n    \"cutype\": {\n      values: [\"INDIVIDUAL\", \"GROUP\", \"RESOURCE\", \"ROOM\", \"UNKNOWN\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"delegated-from\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"delegated-to\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    // \"DIR\": { ... }, // See ALTREP\n    \"encoding\": {\n      values: [\"8BIT\", \"BASE64\"]\n    },\n    // \"FMTTYPE\": { ... }, // See ALTREP\n    \"fbtype\": {\n      values: [\"FREE\", \"BUSY\", \"BUSY-UNAVAILABLE\", \"BUSY-TENTATIVE\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    // \"LANGUAGE\": { ... }, // See ALTREP\n    \"member\": {\n      valueType: \"cal-address\",\n      multiValue: \",\",\n      multiValueSeparateDQuote: true\n    },\n    \"partstat\": {\n      // TODO These values are actually different per-component\n      values: [\"NEEDS-ACTION\", \"ACCEPTED\", \"DECLINED\", \"TENTATIVE\", \"DELEGATED\", \"COMPLETED\", \"IN-PROCESS\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"range\": {\n      values: [\"THISLANDFUTURE\"]\n    },\n    \"related\": {\n      values: [\"START\", \"END\"]\n    },\n    \"reltype\": {\n      values: [\"PARENT\", \"CHILD\", \"SIBLING\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"role\": {\n      values: [\"REQ-PARTICIPANT\", \"CHAIR\", \"OPT-PARTICIPANT\", \"NON-PARTICIPANT\"],\n      allowXName: true,\n      allowIanaToken: true\n    },\n    \"rsvp\": {\n      values: [\"TRUE\", \"FALSE\"]\n    },\n    \"sent-by\": {\n      valueType: \"cal-address\"\n    },\n    \"tzid\": {\n      matches: /^\\//\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"binary\", \"boolean\", \"cal-address\", \"date\", \"date-time\", \"duration\", \"float\", \"integer\", \"period\", \"recur\", \"text\", \"time\", \"uri\", \"utc-offset\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  }; // When adding a value here, be sure to add it to the parameter types!\n\n  var icalValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_ICAL_NEWLINE, TO_ICAL_NEWLINE),\n    uri: {// TODO\n\n      /* ... */\n    },\n    \"binary\": {\n      decorate: function decorate(aString) {\n        return ICAL.Binary.fromString(aString);\n      },\n      undecorate: function undecorate(aBinary) {\n        return aBinary.toString();\n      }\n    },\n    \"cal-address\": {// needs to be an uri\n    },\n    \"date\": {\n      decorate: function decorate(aValue, aProp) {\n        return ICAL.Time.fromDateString(aValue, aProp);\n      },\n\n      /**\n       * undecorates a time object.\n       */\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        // from: 20120901\n        // to: 2012-09-01\n        return aValue.substr(0, 4) + '-' + aValue.substr(4, 2) + '-' + aValue.substr(6, 2);\n      },\n      toICAL: function toICAL(aValue) {\n        // from: 2012-09-01\n        // to: 20120901\n        if (aValue.length > 11) {\n          //TODO: serialize warning?\n          return aValue;\n        }\n\n        return aValue.substr(0, 4) + aValue.substr(5, 2) + aValue.substr(8, 2);\n      }\n    },\n    \"date-time\": {\n      fromICAL: function fromICAL(aValue) {\n        // from: 20120901T130000\n        // to: 2012-09-01T13:00:00\n        var result = aValue.substr(0, 4) + '-' + aValue.substr(4, 2) + '-' + aValue.substr(6, 2) + 'T' + aValue.substr(9, 2) + ':' + aValue.substr(11, 2) + ':' + aValue.substr(13, 2);\n\n        if (aValue[15] && aValue[15] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n      toICAL: function toICAL(aValue) {\n        // from: 2012-09-01T13:00:00\n        // to: 20120901T130000\n        if (aValue.length < 19) {\n          // TODO: error\n          return aValue;\n        }\n\n        var result = aValue.substr(0, 4) + aValue.substr(5, 2) + // grab the (DDTHH) segment\n        aValue.substr(8, 5) + // MM\n        aValue.substr(14, 2) + // SS\n        aValue.substr(17, 2);\n\n        if (aValue[19] && aValue[19] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n      decorate: function decorate(aValue, aProp) {\n        return ICAL.Time.fromDateTimeString(aValue, aProp);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    },\n    duration: {\n      decorate: function decorate(aValue) {\n        return ICAL.Duration.fromString(aValue);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    },\n    period: {\n      fromICAL: function fromICAL(string) {\n        var parts = string.split('/');\n        parts[0] = icalValues['date-time'].fromICAL(parts[0]);\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          parts[1] = icalValues['date-time'].fromICAL(parts[1]);\n        }\n\n        return parts;\n      },\n      toICAL: function toICAL(parts) {\n        parts[0] = icalValues['date-time'].toICAL(parts[0]);\n\n        if (!ICAL.Duration.isValueString(parts[1])) {\n          parts[1] = icalValues['date-time'].toICAL(parts[1]);\n        }\n\n        return parts.join(\"/\");\n      },\n      decorate: function decorate(aValue, aProp) {\n        return ICAL.Period.fromJSON(aValue, aProp);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toJSON();\n      }\n    },\n    recur: {\n      fromICAL: function fromICAL(string) {\n        return ICAL.Recur._stringToData(string, true);\n      },\n      toICAL: function toICAL(data) {\n        var str = \"\";\n\n        for (var k in data) {\n          /* istanbul ignore if */\n          if (!Object.prototype.hasOwnProperty.call(data, k)) {\n            continue;\n          }\n\n          var val = data[k];\n\n          if (k == \"until\") {\n            if (val.length > 10) {\n              val = icalValues['date-time'].toICAL(val);\n            } else {\n              val = icalValues.date.toICAL(val);\n            }\n          } else if (k == \"wkst\") {\n            if (typeof val === 'number') {\n              val = ICAL.Recur.numericDayToIcalDay(val);\n            }\n          } else if (Array.isArray(val)) {\n            val = val.join(\",\");\n          }\n\n          str += k.toUpperCase() + \"=\" + val + \";\";\n        }\n\n        return str.substr(0, str.length - 1);\n      },\n      decorate: function decorate(aValue) {\n        return ICAL.Recur.fromData(aValue);\n      },\n      undecorate: function undecorate(aRecur) {\n        return aRecur.toJSON();\n      }\n    },\n    time: {\n      fromICAL: function fromICAL(aValue) {\n        // from: MMHHSS(Z)?\n        // to: HH:MM:SS(Z)?\n        if (aValue.length < 6) {\n          // TODO: parser exception?\n          return aValue;\n        } // HH::MM::SSZ?\n\n\n        var result = aValue.substr(0, 2) + ':' + aValue.substr(2, 2) + ':' + aValue.substr(4, 2);\n\n        if (aValue[6] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      },\n      toICAL: function toICAL(aValue) {\n        // from: HH:MM:SS(Z)?\n        // to: MMHHSS(Z)?\n        if (aValue.length < 8) {\n          //TODO: error\n          return aValue;\n        }\n\n        var result = aValue.substr(0, 2) + aValue.substr(3, 2) + aValue.substr(6, 2);\n\n        if (aValue[8] === 'Z') {\n          result += 'Z';\n        }\n\n        return result;\n      }\n    }\n  });\n  var icalProperties = ICAL.helpers.extend(commonProperties, {\n    \"action\": DEFAULT_TYPE_TEXT,\n    \"attach\": {\n      defaultType: \"uri\"\n    },\n    \"attendee\": {\n      defaultType: \"cal-address\"\n    },\n    \"calscale\": DEFAULT_TYPE_TEXT,\n    \"class\": DEFAULT_TYPE_TEXT,\n    \"comment\": DEFAULT_TYPE_TEXT,\n    \"completed\": DEFAULT_TYPE_DATETIME,\n    \"contact\": DEFAULT_TYPE_TEXT,\n    \"created\": DEFAULT_TYPE_DATETIME,\n    \"description\": DEFAULT_TYPE_TEXT,\n    \"dtend\": DEFAULT_TYPE_DATETIME_DATE,\n    \"dtstamp\": DEFAULT_TYPE_DATETIME,\n    \"dtstart\": DEFAULT_TYPE_DATETIME_DATE,\n    \"due\": DEFAULT_TYPE_DATETIME_DATE,\n    \"duration\": {\n      defaultType: \"duration\"\n    },\n    \"exdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      multiValue: ','\n    },\n    \"exrule\": DEFAULT_TYPE_RECUR,\n    \"freebusy\": {\n      defaultType: \"period\",\n      multiValue: \",\"\n    },\n    \"geo\": {\n      defaultType: \"float\",\n      structuredValue: \";\"\n    },\n    \"last-modified\": DEFAULT_TYPE_DATETIME,\n    \"location\": DEFAULT_TYPE_TEXT,\n    \"method\": DEFAULT_TYPE_TEXT,\n    \"organizer\": {\n      defaultType: \"cal-address\"\n    },\n    \"percent-complete\": DEFAULT_TYPE_INTEGER,\n    \"priority\": DEFAULT_TYPE_INTEGER,\n    \"prodid\": DEFAULT_TYPE_TEXT,\n    \"related-to\": DEFAULT_TYPE_TEXT,\n    \"repeat\": DEFAULT_TYPE_INTEGER,\n    \"rdate\": {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\", \"period\"],\n      multiValue: ',',\n      detectType: function detectType(string) {\n        if (string.indexOf('/') !== -1) {\n          return 'period';\n        }\n\n        return string.indexOf('T') === -1 ? 'date' : 'date-time';\n      }\n    },\n    \"recurrence-id\": DEFAULT_TYPE_DATETIME_DATE,\n    \"resources\": DEFAULT_TYPE_TEXT_MULTI,\n    \"request-status\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"rrule\": DEFAULT_TYPE_RECUR,\n    \"sequence\": DEFAULT_TYPE_INTEGER,\n    \"status\": DEFAULT_TYPE_TEXT,\n    \"summary\": DEFAULT_TYPE_TEXT,\n    \"transp\": DEFAULT_TYPE_TEXT,\n    \"trigger\": {\n      defaultType: \"duration\",\n      allowedTypes: [\"duration\", \"date-time\"]\n    },\n    \"tzoffsetfrom\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzoffsetto\": DEFAULT_TYPE_UTCOFFSET,\n    \"tzurl\": DEFAULT_TYPE_URI,\n    \"tzid\": DEFAULT_TYPE_TEXT,\n    \"tzname\": DEFAULT_TYPE_TEXT\n  }); // When adding a value here, be sure to add it to the parameter types!\n\n  var vcardValues = ICAL.helpers.extend(commonValues, {\n    text: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    uri: createTextType(FROM_VCARD_NEWLINE, TO_VCARD_NEWLINE),\n    date: {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        if (aValue.length == 8) {\n          return icalValues.date.fromICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 6) {\n          return aValue.substr(0, 4) + '-' + aValue.substr(4);\n        } else {\n          return aValue;\n        }\n      },\n      toICAL: function toICAL(aValue) {\n        if (aValue.length == 10) {\n          return icalValues.date.toICAL(aValue);\n        } else if (aValue[0] == '-' && aValue.length == 7) {\n          return aValue.substr(0, 4) + aValue.substr(5);\n        } else {\n          return aValue;\n        }\n      }\n    },\n    time: {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(\"T\" + aValue, \"time\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue, true);\n\n        var zone = splitzone[0],\n            value = splitzone[1]; //console.log(\"SPLIT: \",splitzone);\n\n        if (value.length == 6) {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2) + ':' + value.substr(4, 2);\n        } else if (value.length == 4 && value[0] != '-') {\n          value = value.substr(0, 2) + ':' + value.substr(2, 2);\n        } else if (value.length == 5) {\n          value = value.substr(0, 3) + ':' + value.substr(3, 2);\n        }\n\n        if (zone.length == 5 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + ':' + zone.substr(3);\n        }\n\n        return value + zone;\n      },\n      toICAL: function toICAL(aValue) {\n        var splitzone = vcardValues.time._splitZone(aValue);\n\n        var zone = splitzone[0],\n            value = splitzone[1];\n\n        if (value.length == 8) {\n          value = value.substr(0, 2) + value.substr(3, 2) + value.substr(6, 2);\n        } else if (value.length == 5 && value[0] != '-') {\n          value = value.substr(0, 2) + value.substr(3, 2);\n        } else if (value.length == 6) {\n          value = value.substr(0, 3) + value.substr(4, 2);\n        }\n\n        if (zone.length == 6 && (zone[0] == '-' || zone[0] == '+')) {\n          zone = zone.substr(0, 3) + zone.substr(4);\n        }\n\n        return value + zone;\n      },\n      _splitZone: function _splitZone(aValue, isFromIcal) {\n        var lastChar = aValue.length - 1;\n        var signChar = aValue.length - (isFromIcal ? 5 : 6);\n        var sign = aValue[signChar];\n        var zone, value;\n\n        if (aValue[lastChar] == 'Z') {\n          zone = aValue[lastChar];\n          value = aValue.substr(0, lastChar);\n        } else if (aValue.length > 6 && (sign == '-' || sign == '+')) {\n          zone = aValue.substr(signChar);\n          value = aValue.substr(0, signChar);\n        } else {\n          zone = \"\";\n          value = aValue;\n        }\n\n        return [zone, value];\n      }\n    },\n    \"date-time\": {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-time\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        return vcardValues['date-and-or-time'].fromICAL(aValue);\n      },\n      toICAL: function toICAL(aValue) {\n        return vcardValues['date-and-or-time'].toICAL(aValue);\n      }\n    },\n    \"date-and-or-time\": {\n      decorate: function decorate(aValue) {\n        return ICAL.VCardTime.fromDateAndOrTimeString(aValue, \"date-and-or-time\");\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      },\n      fromICAL: function fromICAL(aValue) {\n        var parts = aValue.split('T');\n        return (parts[0] ? vcardValues.date.fromICAL(parts[0]) : '') + (parts[1] ? 'T' + vcardValues.time.fromICAL(parts[1]) : '');\n      },\n      toICAL: function toICAL(aValue) {\n        var parts = aValue.split('T');\n        return vcardValues.date.toICAL(parts[0]) + (parts[1] ? 'T' + vcardValues.time.toICAL(parts[1]) : '');\n      }\n    },\n    timestamp: icalValues['date-time'],\n    \"language-tag\": {\n      matches: /^[a-zA-Z0-9\\-]+$/ // Could go with a more strict regex here\n\n    }\n  });\n  var vcardParams = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"time\", \"date-time\", \"date-and-or-time\", \"timestamp\", \"boolean\", \"integer\", \"float\", \"utc-offset\", \"language-tag\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n  var vcardProperties = ICAL.helpers.extend(commonProperties, {\n    \"adr\": {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    \"anniversary\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"bday\": DEFAULT_TYPE_DATE_ANDOR_TIME,\n    \"caladruri\": DEFAULT_TYPE_URI,\n    \"caluri\": DEFAULT_TYPE_URI,\n    \"clientpidmap\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"email\": DEFAULT_TYPE_TEXT,\n    \"fburl\": DEFAULT_TYPE_URI,\n    \"fn\": DEFAULT_TYPE_TEXT,\n    \"gender\": DEFAULT_TYPE_TEXT_STRUCTURED,\n    \"geo\": DEFAULT_TYPE_URI,\n    \"impp\": DEFAULT_TYPE_URI,\n    \"key\": DEFAULT_TYPE_URI,\n    \"kind\": DEFAULT_TYPE_TEXT,\n    \"lang\": {\n      defaultType: \"language-tag\"\n    },\n    \"logo\": DEFAULT_TYPE_URI,\n    \"member\": DEFAULT_TYPE_URI,\n    \"n\": {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    \"nickname\": DEFAULT_TYPE_TEXT_MULTI,\n    \"note\": DEFAULT_TYPE_TEXT,\n    \"org\": {\n      defaultType: \"text\",\n      structuredValue: \";\"\n    },\n    \"photo\": DEFAULT_TYPE_URI,\n    \"related\": DEFAULT_TYPE_URI,\n    \"rev\": {\n      defaultType: \"timestamp\"\n    },\n    \"role\": DEFAULT_TYPE_TEXT,\n    \"sound\": DEFAULT_TYPE_URI,\n    \"source\": DEFAULT_TYPE_URI,\n    \"tel\": {\n      defaultType: \"uri\",\n      allowedTypes: [\"uri\", \"text\"]\n    },\n    \"title\": DEFAULT_TYPE_TEXT,\n    \"tz\": {\n      defaultType: \"text\",\n      allowedTypes: [\"text\", \"utc-offset\", \"uri\"]\n    },\n    \"xml\": DEFAULT_TYPE_TEXT\n  });\n  var vcard3Values = ICAL.helpers.extend(commonValues, {\n    binary: icalValues.binary,\n    date: vcardValues.date,\n    \"date-time\": vcardValues[\"date-time\"],\n    \"phone-number\": {// TODO\n\n      /* ... */\n    },\n    uri: icalValues.uri,\n    text: icalValues.text,\n    time: icalValues.time,\n    vcard: icalValues.text,\n    \"utc-offset\": {\n      toICAL: function toICAL(aValue) {\n        return aValue.substr(0, 7);\n      },\n      fromICAL: function fromICAL(aValue) {\n        return aValue.substr(0, 7);\n      },\n      decorate: function decorate(aValue) {\n        return ICAL.UtcOffset.fromString(aValue);\n      },\n      undecorate: function undecorate(aValue) {\n        return aValue.toString();\n      }\n    }\n  });\n  var vcard3Params = {\n    \"type\": {\n      valueType: \"text\",\n      multiValue: \",\"\n    },\n    \"value\": {\n      // since the value here is a 'type' lowercase is used.\n      values: [\"text\", \"uri\", \"date\", \"date-time\", \"phone-number\", \"time\", \"boolean\", \"integer\", \"float\", \"utc-offset\", \"vcard\", \"binary\"],\n      allowXName: true,\n      allowIanaToken: true\n    }\n  };\n  var vcard3Properties = ICAL.helpers.extend(commonProperties, {\n    fn: DEFAULT_TYPE_TEXT,\n    n: {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    nickname: DEFAULT_TYPE_TEXT_MULTI,\n    photo: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"uri\"]\n    },\n    bday: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function detectType(string) {\n        return string.indexOf('T') === -1 ? 'date' : 'date-time';\n      }\n    },\n    adr: {\n      defaultType: \"text\",\n      structuredValue: \";\",\n      multiValue: \",\"\n    },\n    label: DEFAULT_TYPE_TEXT,\n    tel: {\n      defaultType: \"phone-number\"\n    },\n    email: DEFAULT_TYPE_TEXT,\n    mailer: DEFAULT_TYPE_TEXT,\n    tz: {\n      defaultType: \"utc-offset\",\n      allowedTypes: [\"utc-offset\", \"text\"]\n    },\n    geo: {\n      defaultType: \"float\",\n      structuredValue: \";\"\n    },\n    title: DEFAULT_TYPE_TEXT,\n    role: DEFAULT_TYPE_TEXT,\n    logo: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"uri\"]\n    },\n    agent: {\n      defaultType: \"vcard\",\n      allowedTypes: [\"vcard\", \"text\", \"uri\"]\n    },\n    org: DEFAULT_TYPE_TEXT_STRUCTURED,\n    note: DEFAULT_TYPE_TEXT_MULTI,\n    prodid: DEFAULT_TYPE_TEXT,\n    rev: {\n      defaultType: \"date-time\",\n      allowedTypes: [\"date-time\", \"date\"],\n      detectType: function detectType(string) {\n        return string.indexOf('T') === -1 ? 'date' : 'date-time';\n      }\n    },\n    \"sort-string\": DEFAULT_TYPE_TEXT,\n    sound: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"uri\"]\n    },\n    class: DEFAULT_TYPE_TEXT,\n    key: {\n      defaultType: \"binary\",\n      allowedTypes: [\"binary\", \"text\"]\n    }\n  });\n  /**\n   * iCalendar design set\n   * @type {ICAL.design.designSet}\n   */\n\n  var icalSet = {\n    value: icalValues,\n    param: icalParams,\n    property: icalProperties\n  };\n  /**\n   * vCard 4.0 design set\n   * @type {ICAL.design.designSet}\n   */\n\n  var vcardSet = {\n    value: vcardValues,\n    param: vcardParams,\n    property: vcardProperties\n  };\n  /**\n   * vCard 3.0 design set\n   * @type {ICAL.design.designSet}\n   */\n\n  var vcard3Set = {\n    value: vcard3Values,\n    param: vcard3Params,\n    property: vcard3Properties\n  };\n  /**\n   * The design data, used by the parser to determine types for properties and\n   * other metadata needed to produce correct jCard/jCal data.\n   *\n   * @alias ICAL.design\n   * @namespace\n   */\n\n  var design = {\n    /**\n     * A designSet describes value, parameter and property data. It is used by\n     * ther parser and stringifier in components and properties to determine they\n     * should be represented.\n     *\n     * @typedef {Object} designSet\n     * @memberOf ICAL.design\n     * @property {Object} value       Definitions for value types, keys are type names\n     * @property {Object} param       Definitions for params, keys are param names\n     * @property {Object} property    Defintions for properties, keys are property names\n     */\n\n    /**\n     * The default set for new properties and components if none is specified.\n     * @type {ICAL.design.designSet}\n     */\n    defaultSet: icalSet,\n\n    /**\n     * The default type for unknown properties\n     * @type {String}\n     */\n    defaultType: 'unknown',\n\n    /**\n     * Holds the design set for known top-level components\n     *\n     * @type {Object}\n     * @property {ICAL.design.designSet} vcard       vCard VCARD\n     * @property {ICAL.design.designSet} vevent      iCalendar VEVENT\n     * @property {ICAL.design.designSet} vtodo       iCalendar VTODO\n     * @property {ICAL.design.designSet} vjournal    iCalendar VJOURNAL\n     * @property {ICAL.design.designSet} valarm      iCalendar VALARM\n     * @property {ICAL.design.designSet} vtimezone   iCalendar VTIMEZONE\n     * @property {ICAL.design.designSet} daylight    iCalendar DAYLIGHT\n     * @property {ICAL.design.designSet} standard    iCalendar STANDARD\n     *\n     * @example\n     * var propertyName = 'fn';\n     * var componentDesign = ICAL.design.components.vcard;\n     * var propertyDetails = componentDesign.property[propertyName];\n     * if (propertyDetails.defaultType == 'text') {\n     *   // Yep, sure is...\n     * }\n     */\n    components: {\n      vcard: vcardSet,\n      vcard3: vcard3Set,\n      vevent: icalSet,\n      vtodo: icalSet,\n      vjournal: icalSet,\n      valarm: icalSet,\n      vtimezone: icalSet,\n      daylight: icalSet,\n      standard: icalSet\n    },\n\n    /**\n     * The design set for iCalendar (rfc5545/rfc7265) components.\n     * @type {ICAL.design.designSet}\n     */\n    icalendar: icalSet,\n\n    /**\n     * The design set for vCard (rfc6350/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard: vcardSet,\n\n    /**\n     * The design set for vCard (rfc2425/rfc2426/rfc7095) components.\n     * @type {ICAL.design.designSet}\n     */\n    vcard3: vcard3Set,\n\n    /**\n     * Gets the design set for the given component name.\n     *\n     * @param {String} componentName        The name of the component\n     * @return {ICAL.design.designSet}      The design set for the component\n     */\n    getDesignSet: function getDesignSet(componentName) {\n      var isInDesign = componentName && componentName in design.components;\n      return isInDesign ? design.components[componentName] : design.defaultSet;\n    }\n  };\n  return design;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * Contains various functions to convert jCal and jCard data back into\n * iCalendar and vCard.\n * @namespace\n */\n\n\nICAL.stringify = function () {\n  'use strict';\n\n  var LINE_ENDING = '\\r\\n';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n  /**\n   * Convert a full jCal/jCard array into a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify\n   * @variation function\n   * @param {Array} jCal    The jCal/jCard document\n   * @return {String}       The stringified iCalendar/vCard document\n   */\n\n  function stringify(jCal) {\n    if (typeof jCal[0] == \"string\") {\n      // This is a single component\n      jCal = [jCal];\n    }\n\n    var i = 0;\n    var len = jCal.length;\n    var result = '';\n\n    for (; i < len; i++) {\n      result += stringify.component(jCal[i]) + LINE_ENDING;\n    }\n\n    return result;\n  }\n  /**\n   * Converts an jCal component array into a ICAL string.\n   * Recursive will resolve sub-components.\n   *\n   * Exact component/property order is not saved all\n   * properties will come before subcomponents.\n   *\n   * @function ICAL.stringify.component\n   * @param {Array} component\n   *        jCal/jCard fragment of a component\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this component\n   * @return {String}       The iCalendar/vCard string\n   */\n\n\n  stringify.component = function (component, designSet) {\n    var name = component[0].toUpperCase();\n    var result = 'BEGIN:' + name + LINE_ENDING;\n    var props = component[1];\n    var propIdx = 0;\n    var propLen = props.length;\n    var designSetName = component[0]; // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n\n    if (designSetName === 'vcard' && component[1].length > 0 && !(component[1][0][0] === \"version\" && component[1][0][3] === \"4.0\")) {\n      designSetName = \"vcard3\";\n    }\n\n    designSet = designSet || design.getDesignSet(designSetName);\n\n    for (; propIdx < propLen; propIdx++) {\n      result += stringify.property(props[propIdx], designSet) + LINE_ENDING;\n    }\n\n    var comps = component[2];\n    var compIdx = 0;\n    var compLen = comps.length;\n\n    for (; compIdx < compLen; compIdx++) {\n      result += stringify.component(comps[compIdx], designSet) + LINE_ENDING;\n    }\n\n    result += 'END:' + name;\n    return result;\n  };\n  /**\n   * Converts a single jCal/jCard property to a iCalendar/vCard string.\n   *\n   * @function ICAL.stringify.property\n   * @param {Array} property\n   *        jCal/jCard property array\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   * @param {Boolean} noFold\n   *        If true, the line is not folded\n   * @return {String}       The iCalendar/vCard string\n   */\n\n\n  stringify.property = function (property, designSet, noFold) {\n    var name = property[0].toUpperCase();\n    var jsName = property[0];\n    var params = property[1];\n    var line = name;\n    var paramName;\n\n    for (paramName in params) {\n      var value = params[paramName];\n      /* istanbul ignore else */\n\n      if (params.hasOwnProperty(paramName)) {\n        var multiValue = paramName in designSet.param && designSet.param[paramName].multiValue;\n\n        if (multiValue && Array.isArray(value)) {\n          if (designSet.param[paramName].multiValueSeparateDQuote) {\n            multiValue = '\"' + multiValue + '\"';\n          }\n\n          value = value.map(stringify._rfc6868Unescape);\n          value = stringify.multiValue(value, multiValue, \"unknown\", null, designSet);\n        } else {\n          value = stringify._rfc6868Unescape(value);\n        }\n\n        line += ';' + paramName.toUpperCase();\n        line += '=' + stringify.propertyValue(value);\n      }\n    }\n\n    if (property.length === 3) {\n      // If there are no values, we must assume a blank value\n      return line + ':';\n    }\n\n    var valueType = property[2];\n\n    if (!designSet) {\n      designSet = design.defaultSet;\n    }\n\n    var propDetails;\n    var multiValue = false;\n    var structuredValue = false;\n    var isDefault = false;\n\n    if (jsName in designSet.property) {\n      propDetails = designSet.property[jsName];\n\n      if ('multiValue' in propDetails) {\n        multiValue = propDetails.multiValue;\n      }\n\n      if ('structuredValue' in propDetails && Array.isArray(property[3])) {\n        structuredValue = propDetails.structuredValue;\n      }\n\n      if ('defaultType' in propDetails) {\n        if (valueType === propDetails.defaultType) {\n          isDefault = true;\n        }\n      } else {\n        if (valueType === DEFAULT_VALUE_TYPE) {\n          isDefault = true;\n        }\n      }\n    } else {\n      if (valueType === DEFAULT_VALUE_TYPE) {\n        isDefault = true;\n      }\n    } // push the VALUE property if type is not the default\n    // for the current property.\n\n\n    if (!isDefault) {\n      // value will never contain ;/:/, so we don't escape it here.\n      line += ';VALUE=' + valueType.toUpperCase();\n    }\n\n    line += ':';\n\n    if (multiValue && structuredValue) {\n      line += stringify.multiValue(property[3], structuredValue, valueType, multiValue, designSet, structuredValue);\n    } else if (multiValue) {\n      line += stringify.multiValue(property.slice(3), multiValue, valueType, null, designSet, false);\n    } else if (structuredValue) {\n      line += stringify.multiValue(property[3], structuredValue, valueType, null, designSet, structuredValue);\n    } else {\n      line += stringify.value(property[3], valueType, designSet, false);\n    }\n\n    return noFold ? line : ICAL.helpers.foldline(line);\n  };\n  /**\n   * Handles escaping of property values that may contain:\n   *\n   *    COLON (:), SEMICOLON (;), or COMMA (,)\n   *\n   * If any of the above are present the result is wrapped\n   * in double quotes.\n   *\n   * @function ICAL.stringify.propertyValue\n   * @param {String} value      Raw property value\n   * @return {String}           Given or escaped value when needed\n   */\n\n\n  stringify.propertyValue = function (value) {\n    if (helpers.unescapedIndexOf(value, ',') === -1 && helpers.unescapedIndexOf(value, ':') === -1 && helpers.unescapedIndexOf(value, ';') === -1) {\n      return value;\n    }\n\n    return '\"' + value + '\"';\n  };\n  /**\n   * Converts an array of ical values into a single\n   * string based on a type and a delimiter value (like \",\").\n   *\n   * @function ICAL.stringify.multiValue\n   * @param {Array} values      List of values to convert\n   * @param {String} delim      Used to join the values (\",\", \";\", \":\")\n   * @param {String} type       Lowecase ical value type\n   *        (like boolean, date-time, etc..)\n   * @param {?String} innerMulti If set, each value will again be processed\n   *        Used for structured values\n   * @param {ICAL.design.designSet} designSet\n   *        The design data to use for this property\n   *\n   * @return {String}           iCalendar/vCard string for value\n   */\n\n\n  stringify.multiValue = function (values, delim, type, innerMulti, designSet, structuredValue) {\n    var result = '';\n    var len = values.length;\n    var i = 0;\n\n    for (; i < len; i++) {\n      if (innerMulti && Array.isArray(values[i])) {\n        result += stringify.multiValue(values[i], innerMulti, type, null, designSet, structuredValue);\n      } else {\n        result += stringify.value(values[i], type, designSet, structuredValue);\n      }\n\n      if (i !== len - 1) {\n        result += delim;\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Processes a single ical value runs the associated \"toICAL\" method from the\n   * design value type if available to convert the value.\n   *\n   * @function ICAL.stringify.value\n   * @param {String|Number} value       A formatted value\n   * @param {String} type               Lowercase iCalendar/vCard value type\n   *  (like boolean, date-time, etc..)\n   * @return {String}                   iCalendar/vCard value for single value\n   */\n\n\n  stringify.value = function (value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'toICAL' in designSet.value[type]) {\n      return designSet.value[type].toICAL(value, structuredValue);\n    }\n\n    return value;\n  };\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.stringify so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @param {String} val        The value to unescape\n   * @return {String}           The escaped value\n   */\n\n\n  stringify._rfc6868Unescape = function (val) {\n    return val.replace(/[\\n^\"]/g, function (x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n\n  var RFC6868_REPLACE_MAP = {\n    '\"': \"^'\",\n    \"\\n\": \"^n\",\n    \"^\": \"^^\"\n  };\n  return stringify;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * Contains various functions to parse iCalendar and vCard data.\n * @namespace\n */\n\n\nICAL.parse = function () {\n  'use strict';\n\n  var CHAR = /[^ \\t]/;\n  var MULTIVALUE_DELIMITER = ',';\n  var VALUE_DELIMITER = ':';\n  var PARAM_DELIMITER = ';';\n  var PARAM_NAME_DELIMITER = '=';\n  var DEFAULT_VALUE_TYPE = 'unknown';\n  var DEFAULT_PARAM_TYPE = 'text';\n  var design = ICAL.design;\n  var helpers = ICAL.helpers;\n  /**\n   * An error that occurred during parsing.\n   *\n   * @param {String} message        The error message\n   * @memberof ICAL.parse\n   * @extends {Error}\n   * @class\n   */\n\n  function ParserError(message) {\n    this.message = message;\n    this.name = 'ParserError';\n\n    try {\n      throw new Error();\n    } catch (e) {\n      if (e.stack) {\n        var split = e.stack.split('\\n');\n        split.shift();\n        this.stack = split.join('\\n');\n      }\n    }\n  }\n\n  ParserError.prototype = Error.prototype;\n  /**\n   * Parses iCalendar or vCard data into a raw jCal object. Consult\n   * documentation on the {@tutorial layers|layers of parsing} for more\n   * details.\n   *\n   * @function ICAL.parse\n   * @variation function\n   * @todo Fix the API to be more clear on the return type\n   * @param {String} input      The string data to parse\n   * @return {Object|Object[]}  A single jCal object, or an array thereof\n   */\n\n  function parser(input) {\n    var state = {};\n    var root = state.component = [];\n    state.stack = [root];\n\n    parser._eachLine(input, function (err, line) {\n      parser._handleContentLine(line, state);\n    }); // when there are still items on the stack\n    // throw a fatal error, a component was not closed\n    // correctly in that case.\n\n\n    if (state.stack.length > 1) {\n      throw new ParserError('invalid ical body. component began but did not end');\n    }\n\n    state = null;\n    return root.length == 1 ? root[0] : root;\n  }\n  /**\n   * Parse an iCalendar property value into the jCal for a single property\n   *\n   * @function ICAL.parse.property\n   * @param {String} str\n   *   The iCalendar property string to parse\n   * @param {ICAL.design.designSet=} designSet\n   *   The design data to use for this property\n   * @return {Object}\n   *   The jCal Object containing the property\n   */\n\n\n  parser.property = function (str, designSet) {\n    var state = {\n      component: [[], []],\n      designSet: designSet || design.defaultSet\n    };\n\n    parser._handleContentLine(str, state);\n\n    return state.component[1][0];\n  };\n  /**\n   * Convenience method to parse a component. You can use ICAL.parse() directly\n   * instead.\n   *\n   * @function ICAL.parse.component\n   * @see ICAL.parse(function)\n   * @param {String} str    The iCalendar component string to parse\n   * @return {Object}       The jCal Object containing the component\n   */\n\n\n  parser.component = function (str) {\n    return parser(str);\n  }; // classes & constants\n\n\n  parser.ParserError = ParserError;\n  /**\n   * The state for parsing content lines from an iCalendar/vCard string.\n   *\n   * @private\n   * @memberof ICAL.parse\n   * @typedef {Object} parserState\n   * @property {ICAL.design.designSet} designSet    The design set to use for parsing\n   * @property {ICAL.Component[]} stack             The stack of components being processed\n   * @property {ICAL.Component} component           The currently active component\n   */\n\n  /**\n   * Handles a single line of iCalendar/vCard, updating the state.\n   *\n   * @private\n   * @function ICAL.parse._handleContentLine\n   * @param {String} line               The content line to process\n   * @param {ICAL.parse.parserState}    The current state of the line parsing\n   */\n\n  parser._handleContentLine = function (line, state) {\n    // break up the parts of the line\n    var valuePos = line.indexOf(VALUE_DELIMITER);\n    var paramPos = line.indexOf(PARAM_DELIMITER);\n    var lastParamIndex;\n    var lastValuePos; // name of property or begin/end\n\n    var name;\n    var value; // params is only overridden if paramPos !== -1.\n    // we can't do params = params || {} later on\n    // because it sacrifices ops.\n\n    var params = {};\n    /**\n     * Different property cases\n     *\n     *\n     * 1. RRULE:FREQ=foo\n     *    // FREQ= is not a param but the value\n     *\n     * 2. ATTENDEE;ROLE=REQ-PARTICIPANT;\n     *    // ROLE= is a param because : has not happened yet\n     */\n    // when the parameter delimiter is after the\n    // value delimiter then its not a parameter.\n\n    if (paramPos !== -1 && valuePos !== -1) {\n      // when the parameter delimiter is after the\n      // value delimiter then its not a parameter.\n      if (paramPos > valuePos) {\n        paramPos = -1;\n      }\n    }\n\n    var parsedParams;\n\n    if (paramPos !== -1) {\n      name = line.substring(0, paramPos).toLowerCase();\n      parsedParams = parser._parseParameters(line.substring(paramPos), 0, state.designSet);\n\n      if (parsedParams[2] == -1) {\n        throw new ParserError(\"Invalid parameters in '\" + line + \"'\");\n      }\n\n      params = parsedParams[0];\n      lastParamIndex = parsedParams[1].length + parsedParams[2] + paramPos;\n\n      if ((lastValuePos = line.substring(lastParamIndex).indexOf(VALUE_DELIMITER)) !== -1) {\n        value = line.substring(lastParamIndex + lastValuePos + 1);\n      } else {\n        throw new ParserError(\"Missing parameter value in '\" + line + \"'\");\n      }\n    } else if (valuePos !== -1) {\n      // without parmeters (BEGIN:VCAENDAR, CLASS:PUBLIC)\n      name = line.substring(0, valuePos).toLowerCase();\n      value = line.substring(valuePos + 1);\n\n      if (name === 'begin') {\n        var newComponent = [value.toLowerCase(), [], []];\n\n        if (state.stack.length === 1) {\n          state.component.push(newComponent);\n        } else {\n          state.component[2].push(newComponent);\n        }\n\n        state.stack.push(state.component);\n        state.component = newComponent;\n\n        if (!state.designSet) {\n          state.designSet = design.getDesignSet(state.component[0]);\n        }\n\n        return;\n      } else if (name === 'end') {\n        state.component = state.stack.pop();\n        return;\n      } // If its not begin/end, then this is a property with an empty value,\n      // which should be considered valid.\n\n    } else {\n      /**\n       * Invalid line.\n       * The rational to throw an error is we will\n       * never be certain that the rest of the file\n       * is sane and its unlikely that we can serialize\n       * the result correctly either.\n       */\n      throw new ParserError('invalid line (no token \";\" or \":\") \"' + line + '\"');\n    }\n\n    var valueType;\n    var multiValue = false;\n    var structuredValue = false;\n    var propertyDetails;\n\n    if (name in state.designSet.property) {\n      propertyDetails = state.designSet.property[name];\n\n      if ('multiValue' in propertyDetails) {\n        multiValue = propertyDetails.multiValue;\n      }\n\n      if ('structuredValue' in propertyDetails) {\n        structuredValue = propertyDetails.structuredValue;\n      }\n\n      if (value && 'detectType' in propertyDetails) {\n        valueType = propertyDetails.detectType(value);\n      }\n    } // attempt to determine value\n\n\n    if (!valueType) {\n      if (!('value' in params)) {\n        if (propertyDetails) {\n          valueType = propertyDetails.defaultType;\n        } else {\n          valueType = DEFAULT_VALUE_TYPE;\n        }\n      } else {\n        // possible to avoid this?\n        valueType = params.value.toLowerCase();\n      }\n    }\n\n    delete params.value;\n    /**\n     * Note on `var result` juggling:\n     *\n     * I observed that building the array in pieces has adverse\n     * effects on performance, so where possible we inline the creation.\n     * Its a little ugly but resulted in ~2000 additional ops/sec.\n     */\n\n    var result;\n\n    if (multiValue && structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], multiValue, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else if (multiValue) {\n      result = [name, params, valueType];\n\n      parser._parseMultiValue(value, multiValue, valueType, result, null, state.designSet, false);\n    } else if (structuredValue) {\n      value = parser._parseMultiValue(value, structuredValue, valueType, [], null, state.designSet, structuredValue);\n      result = [name, params, valueType, value];\n    } else {\n      value = parser._parseValue(value, valueType, state.designSet, false);\n      result = [name, params, valueType, value];\n    } // rfc6350 requires that in vCard 4.0 the first component is the VERSION\n    // component with as value 4.0, note that 3.0 does not have this requirement.\n\n\n    if (state.component[0] === 'vcard' && state.component[1].length === 0 && !(name === 'version' && value === '4.0')) {\n      state.designSet = design.getDesignSet(\"vcard3\");\n    }\n\n    state.component[1].push(result);\n  };\n  /**\n   * Parse a value from the raw value into the jCard/jCal value.\n   *\n   * @private\n   * @function ICAL.parse._parseValue\n   * @param {String} value          Original value\n   * @param {String} type           Type of value\n   * @param {Object} designSet      The design data to use for this value\n   * @return {Object} varies on type\n   */\n\n\n  parser._parseValue = function (value, type, designSet, structuredValue) {\n    if (type in designSet.value && 'fromICAL' in designSet.value[type]) {\n      return designSet.value[type].fromICAL(value, structuredValue);\n    }\n\n    return value;\n  };\n  /**\n   * Parse parameters from a string to object.\n   *\n   * @function ICAL.parse._parseParameters\n   * @private\n   * @param {String} line           A single unfolded line\n   * @param {Numeric} start         Position to start looking for properties\n   * @param {Object} designSet      The design data to use for this property\n   * @return {Object} key/value pairs\n   */\n\n\n  parser._parseParameters = function (line, start, designSet) {\n    var lastParam = start;\n    var pos = 0;\n    var delim = PARAM_NAME_DELIMITER;\n    var result = {};\n    var name, lcname;\n    var value,\n        valuePos = -1;\n    var type, multiValue, mvdelim; // find the next '=' sign\n    // use lastParam and pos to find name\n    // check if \" is used if so get value from \"->\"\n    // then increment pos to find next ;\n\n    while (pos !== false && (pos = helpers.unescapedIndexOf(line, delim, pos + 1)) !== -1) {\n      name = line.substr(lastParam + 1, pos - lastParam - 1);\n\n      if (name.length == 0) {\n        throw new ParserError(\"Empty parameter name in '\" + line + \"'\");\n      }\n\n      lcname = name.toLowerCase();\n\n      if (lcname in designSet.param && designSet.param[lcname].valueType) {\n        type = designSet.param[lcname].valueType;\n      } else {\n        type = DEFAULT_PARAM_TYPE;\n      }\n\n      if (lcname in designSet.param) {\n        multiValue = designSet.param[lcname].multiValue;\n\n        if (designSet.param[lcname].multiValueSeparateDQuote) {\n          mvdelim = parser._rfc6868Escape('\"' + multiValue + '\"');\n        }\n      }\n\n      var nextChar = line[pos + 1];\n\n      if (nextChar === '\"') {\n        valuePos = pos + 2;\n        pos = helpers.unescapedIndexOf(line, '\"', valuePos);\n\n        if (multiValue && pos != -1) {\n          var extendedValue = true;\n\n          while (extendedValue) {\n            if (line[pos + 1] == multiValue && line[pos + 2] == '\"') {\n              pos = helpers.unescapedIndexOf(line, '\"', pos + 3);\n            } else {\n              extendedValue = false;\n            }\n          }\n        }\n\n        if (pos === -1) {\n          throw new ParserError('invalid line (no matching double quote) \"' + line + '\"');\n        }\n\n        value = line.substr(valuePos, pos - valuePos);\n        lastParam = helpers.unescapedIndexOf(line, PARAM_DELIMITER, pos);\n\n        if (lastParam === -1) {\n          pos = false;\n        }\n      } else {\n        valuePos = pos + 1; // move to next \";\"\n\n        var nextPos = helpers.unescapedIndexOf(line, PARAM_DELIMITER, valuePos);\n        var propValuePos = helpers.unescapedIndexOf(line, VALUE_DELIMITER, valuePos);\n\n        if (propValuePos !== -1 && nextPos > propValuePos) {\n          // this is a delimiter in the property value, let's stop here\n          nextPos = propValuePos;\n          pos = false;\n        } else if (nextPos === -1) {\n          // no \";\"\n          if (propValuePos === -1) {\n            nextPos = line.length;\n          } else {\n            nextPos = propValuePos;\n          }\n\n          pos = false;\n        } else {\n          lastParam = nextPos;\n          pos = nextPos;\n        }\n\n        value = line.substr(valuePos, nextPos - valuePos);\n      }\n\n      value = parser._rfc6868Escape(value);\n\n      if (multiValue) {\n        var delimiter = mvdelim || multiValue;\n        result[lcname] = parser._parseMultiValue(value, delimiter, type, [], null, designSet);\n      } else {\n        result[lcname] = parser._parseValue(value, type, designSet);\n      }\n    }\n\n    return [result, value, valuePos];\n  };\n  /**\n   * Internal helper for rfc6868. Exposing this on ICAL.parse so that\n   * hackers can disable the rfc6868 parsing if the really need to.\n   *\n   * @function ICAL.parse._rfc6868Escape\n   * @param {String} val        The value to escape\n   * @return {String}           The escaped value\n   */\n\n\n  parser._rfc6868Escape = function (val) {\n    return val.replace(/\\^['n^]/g, function (x) {\n      return RFC6868_REPLACE_MAP[x];\n    });\n  };\n\n  var RFC6868_REPLACE_MAP = {\n    \"^'\": '\"',\n    \"^n\": \"\\n\",\n    \"^^\": \"^\"\n  };\n  /**\n   * Parse a multi value string. This function is used either for parsing\n   * actual multi-value property's values, or for handling parameter values. It\n   * can be used for both multi-value properties and structured value properties.\n   *\n   * @private\n   * @function ICAL.parse._parseMultiValue\n   * @param {String} buffer     The buffer containing the full value\n   * @param {String} delim      The multi-value delimiter\n   * @param {String} type       The value type to be parsed\n   * @param {Array.<?>} result        The array to append results to, varies on value type\n   * @param {String} innerMulti The inner delimiter to split each value with\n   * @param {ICAL.design.designSet} designSet   The design data for this value\n   * @return {?|Array.<?>}            Either an array of results, or the first result\n   */\n\n  parser._parseMultiValue = function (buffer, delim, type, result, innerMulti, designSet, structuredValue) {\n    var pos = 0;\n    var lastPos = 0;\n    var value;\n\n    if (delim.length === 0) {\n      return buffer;\n    } // split each piece\n\n\n    while ((pos = helpers.unescapedIndexOf(buffer, delim, lastPos)) !== -1) {\n      value = buffer.substr(lastPos, pos - lastPos);\n\n      if (innerMulti) {\n        value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n      } else {\n        value = parser._parseValue(value, type, designSet, structuredValue);\n      }\n\n      result.push(value);\n      lastPos = pos + delim.length;\n    } // on the last piece take the rest of string\n\n\n    value = buffer.substr(lastPos);\n\n    if (innerMulti) {\n      value = parser._parseMultiValue(value, innerMulti, type, [], null, designSet, structuredValue);\n    } else {\n      value = parser._parseValue(value, type, designSet, structuredValue);\n    }\n\n    result.push(value);\n    return result.length == 1 ? result[0] : result;\n  };\n  /**\n   * Process a complete buffer of iCalendar/vCard data line by line, correctly\n   * unfolding content. Each line will be processed with the given callback\n   *\n   * @private\n   * @function ICAL.parse._eachLine\n   * @param {String} buffer                         The buffer to process\n   * @param {function(?String, String)} callback    The callback for each line\n   */\n\n\n  parser._eachLine = function (buffer, callback) {\n    var len = buffer.length;\n    var lastPos = buffer.search(CHAR);\n    var pos = lastPos;\n    var line;\n    var firstChar;\n    var newlineOffset;\n\n    do {\n      pos = buffer.indexOf('\\n', lastPos) + 1;\n\n      if (pos > 1 && buffer[pos - 2] === '\\r') {\n        newlineOffset = 2;\n      } else {\n        newlineOffset = 1;\n      }\n\n      if (pos === 0) {\n        pos = len;\n        newlineOffset = 0;\n      }\n\n      firstChar = buffer[lastPos];\n\n      if (firstChar === ' ' || firstChar === '\\t') {\n        // add to line\n        line += buffer.substr(lastPos + 1, pos - lastPos - (newlineOffset + 1));\n      } else {\n        if (line) callback(null, line); // push line\n\n        line = buffer.substr(lastPos, pos - lastPos - newlineOffset);\n      }\n\n      lastPos = pos;\n    } while (pos !== len); // extra ending line\n\n\n    line = line.trim();\n    if (line.length) callback(null, line);\n  };\n\n  return parser;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Component = function () {\n  'use strict';\n\n  var PROPERTY_INDEX = 1;\n  var COMPONENT_INDEX = 2;\n  var NAME_INDEX = 0;\n  /**\n   * @classdesc\n   * Wraps a jCal component, adding convenience methods to add, remove and\n   * update subcomponents and properties.\n   *\n   * @class\n   * @alias ICAL.Component\n   * @param {Array|String} jCal         Raw jCal component data OR name of new\n   *                                      component\n   * @param {ICAL.Component} parent     Parent component to associate\n   */\n\n  function Component(jCal, parent) {\n    if (typeof jCal === 'string') {\n      // jCal spec (name, properties, components)\n      jCal = [jCal, [], []];\n    } // mostly for legacy reasons.\n\n\n    this.jCal = jCal;\n    this.parent = parent || null;\n  }\n\n  Component.prototype = {\n    /**\n     * Hydrated properties are inserted into the _properties array at the same\n     * position as in the jCal array, so its possible the array contains\n     * undefined values for unhydrdated properties. To avoid iterating the\n     * array when checking if all properties have been hydrated, we save the\n     * count here.\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedPropertyCount: 0,\n\n    /**\n     * The same count as for _hydratedPropertyCount, but for subcomponents\n     *\n     * @type {Number}\n     * @private\n     */\n    _hydratedComponentCount: 0,\n\n    /**\n     * The name of this component\n     * @readonly\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The design set for this component, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      var parentDesign = this.parent && this.parent._designSet;\n      return parentDesign || ICAL.design.getDesignSet(this.name);\n    },\n\n    _hydrateComponent: function _hydrateComponent(index) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (this._components[index]) {\n        return this._components[index];\n      }\n\n      var comp = new Component(this.jCal[COMPONENT_INDEX][index], this);\n      this._hydratedComponentCount++;\n      return this._components[index] = comp;\n    },\n    _hydrateProperty: function _hydrateProperty(index) {\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (this._properties[index]) {\n        return this._properties[index];\n      }\n\n      var prop = new ICAL.Property(this.jCal[PROPERTY_INDEX][index], this);\n      this._hydratedPropertyCount++;\n      return this._properties[index] = prop;\n    },\n\n    /**\n     * Finds first sub component, optionally filtered by name.\n     *\n     * @param {String=} name        Optional name to filter by\n     * @return {?ICAL.Component}     The found subcomponent\n     */\n    getFirstSubcomponent: function getFirstSubcomponent(name) {\n      if (name) {\n        var i = 0;\n        var comps = this.jCal[COMPONENT_INDEX];\n        var len = comps.length;\n\n        for (; i < len; i++) {\n          if (comps[i][NAME_INDEX] === name) {\n            var result = this._hydrateComponent(i);\n\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[COMPONENT_INDEX].length) {\n          return this._hydrateComponent(0);\n        }\n      } // ensure we return a value (strict mode)\n\n\n      return null;\n    },\n\n    /**\n     * Finds all sub components, optionally filtering by name.\n     *\n     * @param {String=} name            Optional name to filter by\n     * @return {ICAL.Component[]}       The found sub components\n     */\n    getAllSubcomponents: function getAllSubcomponents(name) {\n      var jCalLen = this.jCal[COMPONENT_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var comps = this.jCal[COMPONENT_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === comps[i][NAME_INDEX]) {\n            result.push(this._hydrateComponent(i));\n          }\n        }\n\n        return result;\n      } else {\n        if (!this._components || this._hydratedComponentCount !== jCalLen) {\n          for (; i < jCalLen; i++) {\n            this._hydrateComponent(i);\n          }\n        }\n\n        return this._components || [];\n      }\n    },\n\n    /**\n     * Returns true when a named property exists.\n     *\n     * @param {String} name     The property name\n     * @return {Boolean}        True, when property is found\n     */\n    hasProperty: function hasProperty(name) {\n      var props = this.jCal[PROPERTY_INDEX];\n      var len = props.length;\n      var i = 0;\n\n      for (; i < len; i++) {\n        // 0 is property name\n        if (props[i][NAME_INDEX] === name) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Finds the first property, optionally with the given name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {?ICAL.Property}     The found property\n     */\n    getFirstProperty: function getFirstProperty(name) {\n      if (name) {\n        var i = 0;\n        var props = this.jCal[PROPERTY_INDEX];\n        var len = props.length;\n\n        for (; i < len; i++) {\n          if (props[i][NAME_INDEX] === name) {\n            var result = this._hydrateProperty(i);\n\n            return result;\n          }\n        }\n      } else {\n        if (this.jCal[PROPERTY_INDEX].length) {\n          return this._hydrateProperty(0);\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Returns first property's value, if available.\n     *\n     * @param {String=} name    Lowercase property name\n     * @return {?String}        The found property value.\n     */\n    getFirstPropertyValue: function getFirstPropertyValue(name) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        return prop.getFirstValue();\n      }\n\n      return null;\n    },\n\n    /**\n     * Get all properties in the component, optionally filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {ICAL.Property[]}    List of properties\n     */\n    getAllProperties: function getAllProperties(name) {\n      var jCalLen = this.jCal[PROPERTY_INDEX].length;\n      var i = 0;\n\n      if (name) {\n        var props = this.jCal[PROPERTY_INDEX];\n        var result = [];\n\n        for (; i < jCalLen; i++) {\n          if (name === props[i][NAME_INDEX]) {\n            result.push(this._hydrateProperty(i));\n          }\n        }\n\n        return result;\n      } else {\n        if (!this._properties || this._hydratedPropertyCount !== jCalLen) {\n          for (; i < jCalLen; i++) {\n            this._hydrateProperty(i);\n          }\n        }\n\n        return this._properties || [];\n      }\n    },\n    _removeObjectByIndex: function _removeObjectByIndex(jCalIndex, cache, index) {\n      cache = cache || []; // remove cached version\n\n      if (cache[index]) {\n        var obj = cache[index];\n\n        if (\"parent\" in obj) {\n          obj.parent = null;\n        }\n      }\n\n      cache.splice(index, 1); // remove it from the jCal\n\n      this.jCal[jCalIndex].splice(index, 1);\n    },\n    _removeObject: function _removeObject(jCalIndex, cache, nameOrObject) {\n      var i = 0;\n      var objects = this.jCal[jCalIndex];\n      var len = objects.length;\n      var cached = this[cache];\n\n      if (typeof nameOrObject === 'string') {\n        for (; i < len; i++) {\n          if (objects[i][NAME_INDEX] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n\n            return true;\n          }\n        }\n      } else if (cached) {\n        for (; i < len; i++) {\n          if (cached[i] && cached[i] === nameOrObject) {\n            this._removeObjectByIndex(jCalIndex, cached, i);\n\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n    _removeAllObjects: function _removeAllObjects(jCalIndex, cache, name) {\n      var cached = this[cache]; // Unfortunately we have to run through all children to reset their\n      // parent property.\n\n      var objects = this.jCal[jCalIndex];\n      var i = objects.length - 1; // descending search required because splice\n      // is used and will effect the indices.\n\n      for (; i >= 0; i--) {\n        if (!name || objects[i][NAME_INDEX] === name) {\n          this._removeObjectByIndex(jCalIndex, cached, i);\n        }\n      }\n    },\n\n    /**\n     * Adds a single sub component.\n     *\n     * @param {ICAL.Component} component        The component to add\n     * @return {ICAL.Component}                 The passed in component\n     */\n    addSubcomponent: function addSubcomponent(component) {\n      if (!this._components) {\n        this._components = [];\n        this._hydratedComponentCount = 0;\n      }\n\n      if (component.parent) {\n        component.parent.removeSubcomponent(component);\n      }\n\n      var idx = this.jCal[COMPONENT_INDEX].push(component.jCal);\n      this._components[idx - 1] = component;\n      this._hydratedComponentCount++;\n      component.parent = this;\n      return component;\n    },\n\n    /**\n     * Removes a single component by name or the instance of a specific\n     * component.\n     *\n     * @param {ICAL.Component|String} nameOrComp    Name of component, or component\n     * @return {Boolean}                            True when comp is removed\n     */\n    removeSubcomponent: function removeSubcomponent(nameOrComp) {\n      var removed = this._removeObject(COMPONENT_INDEX, '_components', nameOrComp);\n\n      if (removed) {\n        this._hydratedComponentCount--;\n      }\n\n      return removed;\n    },\n\n    /**\n     * Removes all components or (if given) all components by a particular\n     * name.\n     *\n     * @param {String=} name            Lowercase component name\n     */\n    removeAllSubcomponents: function removeAllSubcomponents(name) {\n      var removed = this._removeAllObjects(COMPONENT_INDEX, '_components', name);\n\n      this._hydratedComponentCount = 0;\n      return removed;\n    },\n\n    /**\n     * Adds an {@link ICAL.Property} to the component.\n     *\n     * @param {ICAL.Property} property      The property to add\n     * @return {ICAL.Property}              The passed in property\n     */\n    addProperty: function addProperty(property) {\n      if (!(property instanceof ICAL.Property)) {\n        throw new TypeError('must instance of ICAL.Property');\n      }\n\n      if (!this._properties) {\n        this._properties = [];\n        this._hydratedPropertyCount = 0;\n      }\n\n      if (property.parent) {\n        property.parent.removeProperty(property);\n      }\n\n      var idx = this.jCal[PROPERTY_INDEX].push(property.jCal);\n      this._properties[idx - 1] = property;\n      this._hydratedPropertyCount++;\n      property.parent = this;\n      return property;\n    },\n\n    /**\n     * Helper method to add a property with a value to the component.\n     *\n     * @param {String}               name         Property name to add\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    addPropertyWithValue: function addPropertyWithValue(name, value) {\n      var prop = new ICAL.Property(name);\n      prop.setValue(value);\n      this.addProperty(prop);\n      return prop;\n    },\n\n    /**\n     * Helper method that will update or create a property of the given name\n     * and sets its value. If multiple properties with the given name exist,\n     * only the first is updated.\n     *\n     * @param {String}               name         Property name to update\n     * @param {String|Number|Object} value        Property value\n     * @return {ICAL.Property}                    The created property\n     */\n    updatePropertyWithValue: function updatePropertyWithValue(name, value) {\n      var prop = this.getFirstProperty(name);\n\n      if (prop) {\n        prop.setValue(value);\n      } else {\n        prop = this.addPropertyWithValue(name, value);\n      }\n\n      return prop;\n    },\n\n    /**\n     * Removes a single property by name or the instance of the specific\n     * property.\n     *\n     * @param {String|ICAL.Property} nameOrProp     Property name or instance to remove\n     * @return {Boolean}                            True, when deleted\n     */\n    removeProperty: function removeProperty(nameOrProp) {\n      var removed = this._removeObject(PROPERTY_INDEX, '_properties', nameOrProp);\n\n      if (removed) {\n        this._hydratedPropertyCount--;\n      }\n\n      return removed;\n    },\n\n    /**\n     * Removes all properties associated with this component, optionally\n     * filtered by name.\n     *\n     * @param {String=} name        Lowercase property name\n     * @return {Boolean}            True, when deleted\n     */\n    removeAllProperties: function removeAllProperties(name) {\n      var removed = this._removeAllObjects(PROPERTY_INDEX, '_properties', name);\n\n      this._hydratedPropertyCount = 0;\n      return removed;\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toString: function toString() {\n      return ICAL.stringify.component(this.jCal, this._designSet);\n    }\n  };\n  /**\n   * Create an {@link ICAL.Component} by parsing the passed iCalendar string.\n   *\n   * @param {String} str        The iCalendar string to parse\n   */\n\n  Component.fromString = function (str) {\n    return new Component(ICAL.parse.component(str));\n  };\n\n  return Component;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Property = function () {\n  'use strict';\n\n  var NAME_INDEX = 0;\n  var PROP_INDEX = 1;\n  var TYPE_INDEX = 2;\n  var VALUE_INDEX = 3;\n  var design = ICAL.design;\n  /**\n   * @classdesc\n   * Provides a layer on top of the raw jCal object for manipulating a single\n   * property, with its parameters and value.\n   *\n   * @description\n   * Its important to note that mutations done in the wrapper\n   * directly mutate the jCal object used to initialize.\n   *\n   * Can also be used to create new properties by passing\n   * the name of the property (as a String).\n   *\n   * @class\n   * @alias ICAL.Property\n   * @param {Array|String} jCal         Raw jCal representation OR\n   *  the new name of the property\n   *\n   * @param {ICAL.Component=} parent    Parent component\n   */\n\n  function Property(jCal, parent) {\n    this._parent = parent || null;\n\n    if (typeof jCal === 'string') {\n      // We are creating the property by name and need to detect the type\n      this.jCal = [jCal, {}, design.defaultType];\n      this.jCal[TYPE_INDEX] = this.getDefaultType();\n    } else {\n      this.jCal = jCal;\n    }\n\n    this._updateType();\n  }\n\n  Property.prototype = {\n    /**\n     * The value type for this property\n     * @readonly\n     * @type {String}\n     */\n    get type() {\n      return this.jCal[TYPE_INDEX];\n    },\n\n    /**\n     * The name of this property, in lowercase.\n     * @readonly\n     * @type {String}\n     */\n    get name() {\n      return this.jCal[NAME_INDEX];\n    },\n\n    /**\n     * The parent component for this property.\n     * @type {ICAL.Component}\n     */\n    get parent() {\n      return this._parent;\n    },\n\n    set parent(p) {\n      // Before setting the parent, check if the design set has changed. If it\n      // has, we later need to update the type if it was unknown before.\n      var designSetChanged = !this._parent || p && p._designSet != this._parent._designSet;\n      this._parent = p;\n\n      if (this.type == design.defaultType && designSetChanged) {\n        this.jCal[TYPE_INDEX] = this.getDefaultType();\n\n        this._updateType();\n      }\n\n      return p;\n    },\n\n    /**\n     * The design set for this property, e.g. icalendar vs vcard\n     *\n     * @type {ICAL.design.designSet}\n     * @private\n     */\n    get _designSet() {\n      return this.parent ? this.parent._designSet : design.defaultSet;\n    },\n\n    /**\n     * Updates the type metadata from the current jCal type and design set.\n     *\n     * @private\n     */\n    _updateType: function _updateType() {\n      var designSet = this._designSet;\n\n      if (this.type in designSet.value) {\n        var designType = designSet.value[this.type];\n\n        if ('decorate' in designSet.value[this.type]) {\n          this.isDecorated = true;\n        } else {\n          this.isDecorated = false;\n        }\n\n        if (this.name in designSet.property) {\n          this.isMultiValue = 'multiValue' in designSet.property[this.name];\n          this.isStructuredValue = 'structuredValue' in designSet.property[this.name];\n        }\n      }\n    },\n\n    /**\n     * Hydrate a single value. The act of hydrating means turning the raw jCal\n     * value into a potentially wrapped object, for example {@link ICAL.Time}.\n     *\n     * @private\n     * @param {Number} index        The index of the value to hydrate\n     * @return {Object}             The decorated value.\n     */\n    _hydrateValue: function _hydrateValue(index) {\n      if (this._values && this._values[index]) {\n        return this._values[index];\n      } // for the case where there is no value.\n\n\n      if (this.jCal.length <= VALUE_INDEX + index) {\n        return null;\n      }\n\n      if (this.isDecorated) {\n        if (!this._values) {\n          this._values = [];\n        }\n\n        return this._values[index] = this._decorate(this.jCal[VALUE_INDEX + index]);\n      } else {\n        return this.jCal[VALUE_INDEX + index];\n      }\n    },\n\n    /**\n     * Decorate a single value, returning its wrapped object. This is used by\n     * the hydrate function to actually wrap the value.\n     *\n     * @private\n     * @param {?} value         The value to decorate\n     * @return {Object}         The decorated value\n     */\n    _decorate: function _decorate(value) {\n      return this._designSet.value[this.type].decorate(value, this);\n    },\n\n    /**\n     * Undecorate a single value, returning its raw jCal data.\n     *\n     * @private\n     * @param {Object} value         The value to undecorate\n     * @return {?}                   The undecorated value\n     */\n    _undecorate: function _undecorate(value) {\n      return this._designSet.value[this.type].undecorate(value, this);\n    },\n\n    /**\n     * Sets the value at the given index while also hydrating it. The passed\n     * value can either be a decorated or undecorated value.\n     *\n     * @private\n     * @param {?} value             The value to set\n     * @param {Number} index        The index to set it at\n     */\n    _setDecoratedValue: function _setDecoratedValue(value, index) {\n      if (!this._values) {\n        this._values = [];\n      }\n\n      if (typeof value === 'object' && 'icaltype' in value) {\n        // decorated value\n        this.jCal[VALUE_INDEX + index] = this._undecorate(value);\n        this._values[index] = value;\n      } else {\n        // undecorated value\n        this.jCal[VALUE_INDEX + index] = value;\n        this._values[index] = this._decorate(value);\n      }\n    },\n\n    /**\n     * Gets a parameter on the property.\n     *\n     * @param {String}        name   Property name (lowercase)\n     * @return {Array|String}        Property value\n     */\n    getParameter: function getParameter(name) {\n      if (name in this.jCal[PROP_INDEX]) {\n        return this.jCal[PROP_INDEX][name];\n      } else {\n        return undefined;\n      }\n    },\n\n    /**\n     * Sets a parameter on the property.\n     *\n     * @param {String}       name     The parameter name\n     * @param {Array|String} value    The parameter value\n     */\n    setParameter: function setParameter(name, value) {\n      var lcname = name.toLowerCase();\n\n      if (typeof value === \"string\" && lcname in this._designSet.param && 'multiValue' in this._designSet.param[lcname]) {\n        value = [value];\n      }\n\n      this.jCal[PROP_INDEX][name] = value;\n    },\n\n    /**\n     * Removes a parameter\n     *\n     * @param {String} name     The parameter name\n     */\n    removeParameter: function removeParameter(name) {\n      delete this.jCal[PROP_INDEX][name];\n    },\n\n    /**\n     * Get the default type based on this property's name.\n     *\n     * @return {String}     The default type for this property\n     */\n    getDefaultType: function getDefaultType() {\n      var name = this.jCal[NAME_INDEX];\n      var designSet = this._designSet;\n\n      if (name in designSet.property) {\n        var details = designSet.property[name];\n\n        if ('defaultType' in details) {\n          return details.defaultType;\n        }\n      }\n\n      return design.defaultType;\n    },\n\n    /**\n     * Sets type of property and clears out any existing values of the current\n     * type.\n     *\n     * @param {String} type     New iCAL type (see design.*.values)\n     */\n    resetType: function resetType(type) {\n      this.removeAllValues();\n      this.jCal[TYPE_INDEX] = type;\n\n      this._updateType();\n    },\n\n    /**\n     * Finds the first property value.\n     *\n     * @return {String}         First property value\n     */\n    getFirstValue: function getFirstValue() {\n      return this._hydrateValue(0);\n    },\n\n    /**\n     * Gets all values on the property.\n     *\n     * NOTE: this creates an array during each call.\n     *\n     * @return {Array}          List of values\n     */\n    getValues: function getValues() {\n      var len = this.jCal.length - VALUE_INDEX;\n\n      if (len < 1) {\n        // its possible for a property to have no value.\n        return [];\n      }\n\n      var i = 0;\n      var result = [];\n\n      for (; i < len; i++) {\n        result[i] = this._hydrateValue(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Removes all values from this property\n     */\n    removeAllValues: function removeAllValues() {\n      if (this._values) {\n        this._values.length = 0;\n      }\n\n      this.jCal.length = 3;\n    },\n\n    /**\n     * Sets the values of the property.  Will overwrite the existing values.\n     * This can only be used for multi-value properties.\n     *\n     * @param {Array} values    An array of values\n     */\n    setValues: function setValues(values) {\n      if (!this.isMultiValue) {\n        throw new Error(this.name + ': does not not support mulitValue.\\n' + 'override isMultiValue');\n      }\n\n      var len = values.length;\n      var i = 0;\n      this.removeAllValues();\n\n      if (len > 0 && typeof values[0] === 'object' && 'icaltype' in values[0]) {\n        this.resetType(values[0].icaltype);\n      }\n\n      if (this.isDecorated) {\n        for (; i < len; i++) {\n          this._setDecoratedValue(values[i], i);\n        }\n      } else {\n        for (; i < len; i++) {\n          this.jCal[VALUE_INDEX + i] = values[i];\n        }\n      }\n    },\n\n    /**\n     * Sets the current value of the property. If this is a multi-value\n     * property, all other values will be removed.\n     *\n     * @param {String|Object} value     New property value.\n     */\n    setValue: function setValue(value) {\n      this.removeAllValues();\n\n      if (typeof value === 'object' && 'icaltype' in value) {\n        this.resetType(value.icaltype);\n      }\n\n      if (this.isDecorated) {\n        this._setDecoratedValue(value, 0);\n      } else {\n        this.jCal[VALUE_INDEX] = value;\n      }\n    },\n\n    /**\n     * Returns the Object representation of this component. The returned object\n     * is a live jCal object and should be cloned if modified.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      return this.jCal;\n    },\n\n    /**\n     * The string representation of this component.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return ICAL.stringify.property(this.jCal, this._designSet, true);\n    }\n  };\n  /**\n   * Create an {@link ICAL.Property} by parsing the passed iCalendar string.\n   *\n   * @param {String} str                        The iCalendar string to parse\n   * @param {ICAL.design.designSet=} designSet  The design data to use for this property\n   * @return {ICAL.Property}                    The created iCalendar property\n   */\n\n  Property.fromString = function (str, designSet) {\n    return new Property(ICAL.parse.property(str, designSet));\n  };\n\n  return Property;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.UtcOffset = function () {\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.UtcOffset\n   * @param {Object} aData          An object with members of the utc offset\n   * @param {Number=} aData.hours   The hours for the utc offset\n   * @param {Number=} aData.minutes The minutes in the utc offset\n   * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n   */\n  function UtcOffset(aData) {\n    this.fromData(aData);\n  }\n\n  UtcOffset.prototype = {\n    /**\n     * The hours in the utc-offset\n     * @type {Number}\n     */\n    hours: 0,\n\n    /**\n     * The minutes in the utc-offset\n     * @type {Number}\n     */\n    minutes: 0,\n\n    /**\n     * The sign of the utc offset, 1 for positive offset, -1 for negative\n     * offsets.\n     * @type {Number}\n     */\n    factor: 1,\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"utc-offset\"\n     */\n    icaltype: \"utc-offset\",\n\n    /**\n     * Returns a clone of the utc offset object.\n     *\n     * @return {ICAL.UtcOffset}     The cloned object\n     */\n    clone: function clone() {\n      return ICAL.UtcOffset.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData          An object with members of the utc offset\n     * @param {Number=} aData.hours   The hours for the utc offset\n     * @param {Number=} aData.minutes The minutes in the utc offset\n     * @param {Number=} aData.factor  The factor for the utc-offset, either -1 or 1\n     */\n    fromData: function fromData(aData) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (aData.hasOwnProperty(key)) {\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      this._normalize();\n    },\n\n    /**\n     * Sets up the current instance from the given seconds value. The seconds\n     * value is truncated to the minute. Offsets are wrapped when the world\n     * ends, the hour after UTC+14:00 is UTC-12:00.\n     *\n     * @param {Number} aSeconds         The seconds to convert into an offset\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n      this.factor = aSeconds < 0 ? -1 : 1;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      return this;\n    },\n\n    /**\n     * Convert the current offset to a value in seconds\n     *\n     * @return {Number}                 The offset in seconds\n     */\n    toSeconds: function toSeconds() {\n      return this.factor * (60 * this.minutes + 3600 * this.hours);\n    },\n\n    /**\n     * Compare this utc offset with another one.\n     *\n     * @param {ICAL.UtcOffset} other        The other offset to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toSeconds();\n      var b = other.toSeconds();\n      return (a > b) - (b > a);\n    },\n    _normalize: function _normalize() {\n      // Range: 97200 seconds (with 1 hour inbetween)\n      var secs = this.toSeconds();\n      var factor = this.factor;\n\n      while (secs < -43200) {\n        // = UTC-12:00\n        secs += 97200;\n      }\n\n      while (secs > 50400) {\n        // = UTC+14:00\n        secs -= 97200;\n      }\n\n      this.fromSeconds(secs); // Avoid changing the factor when on zero seconds\n\n      if (secs == 0) {\n        this.factor = factor;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this utc-offset.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return ICAL.design.icalendar.value['utc-offset'].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this utc-offset.\n     * @return {String}\n     */\n    toString: function toString() {\n      return (this.factor == 1 ? \"+\" : \"-\") + ICAL.helpers.pad2(this.hours) + ':' + ICAL.helpers.pad2(this.minutes);\n    }\n  };\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed string.\n   *\n   * @param {String} aString    The string to parse\n   * @return {ICAL.Duration}    The created utc-offset instance\n   */\n\n  UtcOffset.fromString = function (aString) {\n    // -05:00\n    var options = {}; //TODO: support seconds per rfc5545 ?\n\n    options.factor = aString[0] === '+' ? 1 : -1;\n    options.hours = ICAL.helpers.strictParseInt(aString.substr(1, 2));\n    options.minutes = ICAL.helpers.strictParseInt(aString.substr(4, 2));\n    return new ICAL.UtcOffset(options);\n  };\n  /**\n   * Creates a new {@link ICAL.UtcOffset} instance from the passed seconds\n   * value.\n   *\n   * @param {Number} aSeconds       The number of seconds to convert\n   */\n\n\n  UtcOffset.fromSeconds = function (aSeconds) {\n    var instance = new UtcOffset();\n    instance.fromSeconds(aSeconds);\n    return instance;\n  };\n\n  return UtcOffset;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Binary = function () {\n  /**\n   * @classdesc\n   * Represents the BINARY value type, which contains extra methods for\n   * encoding and decoding.\n   *\n   * @class\n   * @alias ICAL.Binary\n   * @param {String} aValue     The binary data for this value\n   */\n  function Binary(aValue) {\n    this.value = aValue;\n  }\n\n  Binary.prototype = {\n    /**\n     * The type name, to be used in the jCal object.\n     * @default \"binary\"\n     * @constant\n     */\n    icaltype: \"binary\",\n\n    /**\n     * Base64 decode the current value\n     *\n     * @return {String}         The base64-decoded value\n     */\n    decodeValue: function decodeValue() {\n      return this._b64_decode(this.value);\n    },\n\n    /**\n     * Encodes the passed parameter with base64 and sets the internal\n     * value to the result.\n     *\n     * @param {String} aValue      The raw binary value to encode\n     */\n    setEncodedValue: function setEncodedValue(aValue) {\n      this.value = this._b64_encode(aValue);\n    },\n    _b64_encode: function base64_encode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Bayron Guevara\n      // +   improved by: Thunder.m\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   improved by: Rafał Kukawski (http://kukawski.pl)\n      // *     example 1: base64_encode('Kevin van Zonneveld');\n      // *     returns 1: 'S2V2aW4gdmFuIFpvbm5ldmVsZA=='\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['atob'] == 'function') {\n      //    return atob(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1,\n          o2,\n          o3,\n          h1,\n          h2,\n          h3,\n          h4,\n          bits,\n          i = 0,\n          ac = 0,\n          enc = \"\",\n          tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      do {\n        // pack three octets into four hexets\n        o1 = data.charCodeAt(i++);\n        o2 = data.charCodeAt(i++);\n        o3 = data.charCodeAt(i++);\n        bits = o1 << 16 | o2 << 8 | o3;\n        h1 = bits >> 18 & 0x3f;\n        h2 = bits >> 12 & 0x3f;\n        h3 = bits >> 6 & 0x3f;\n        h4 = bits & 0x3f; // use hexets to index into b64, and append result to encoded string\n\n        tmp_arr[ac++] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n      } while (i < data.length);\n\n      enc = tmp_arr.join('');\n      var r = data.length % 3;\n      return (r ? enc.slice(0, r - 3) : enc) + '==='.slice(r || 3);\n    },\n    _b64_decode: function base64_decode(data) {\n      // http://kevin.vanzonneveld.net\n      // +   original by: Tyler Akins (http://rumkin.com)\n      // +   improved by: Thunder.m\n      // +      input by: Aman Gupta\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +   bugfixed by: Onno Marsman\n      // +   bugfixed by: Pellentesque Malesuada\n      // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // +      input by: Brett Zamir (http://brett-zamir.me)\n      // +   bugfixed by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n      // *     example 1: base64_decode('S2V2aW4gdmFuIFpvbm5ldmVsZA==');\n      // *     returns 1: 'Kevin van Zonneveld'\n      // mozilla has this native\n      // - but breaks in 2.0.0.12!\n      //if (typeof this.window['btoa'] == 'function') {\n      //    return btoa(data);\n      //}\n      var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\" + \"abcdefghijklmnopqrstuvwxyz0123456789+/=\";\n      var o1,\n          o2,\n          o3,\n          h1,\n          h2,\n          h3,\n          h4,\n          bits,\n          i = 0,\n          ac = 0,\n          dec = \"\",\n          tmp_arr = [];\n\n      if (!data) {\n        return data;\n      }\n\n      data += '';\n\n      do {\n        // unpack four hexets into three octets using index points in b64\n        h1 = b64.indexOf(data.charAt(i++));\n        h2 = b64.indexOf(data.charAt(i++));\n        h3 = b64.indexOf(data.charAt(i++));\n        h4 = b64.indexOf(data.charAt(i++));\n        bits = h1 << 18 | h2 << 12 | h3 << 6 | h4;\n        o1 = bits >> 16 & 0xff;\n        o2 = bits >> 8 & 0xff;\n        o3 = bits & 0xff;\n\n        if (h3 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1);\n        } else if (h4 == 64) {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2);\n        } else {\n          tmp_arr[ac++] = String.fromCharCode(o1, o2, o3);\n        }\n      } while (i < data.length);\n\n      dec = tmp_arr.join('');\n      return dec;\n    },\n\n    /**\n     * The string representation of this value\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.value;\n    }\n  };\n  /**\n   * Creates a binary value from the given string.\n   *\n   * @param {String} aString        The binary value string\n   * @return {ICAL.Binary}          The binary value instance\n   */\n\n  Binary.fromString = function (aString) {\n    return new Binary(aString);\n  };\n\n  return Binary;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  /**\n   * @classdesc\n   * This class represents the \"period\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @description\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @class\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   */\n  ICAL.Period = function icalperiod(aData) {\n    this.wrappedJSObject = this;\n\n    if (aData && 'start' in aData) {\n      if (aData.start && !(aData.start instanceof ICAL.Time)) {\n        throw new TypeError('.start must be an instance of ICAL.Time');\n      }\n\n      this.start = aData.start;\n    }\n\n    if (aData && aData.end && aData.duration) {\n      throw new Error('cannot accept both end and duration');\n    }\n\n    if (aData && 'end' in aData) {\n      if (aData.end && !(aData.end instanceof ICAL.Time)) {\n        throw new TypeError('.end must be an instance of ICAL.Time');\n      }\n\n      this.end = aData.end;\n    }\n\n    if (aData && 'duration' in aData) {\n      if (aData.duration && !(aData.duration instanceof ICAL.Duration)) {\n        throw new TypeError('.duration must be an instance of ICAL.Duration');\n      }\n\n      this.duration = aData.duration;\n    }\n  };\n\n  ICAL.Period.prototype = {\n    /**\n     * The start of the period\n     * @type {ICAL.Time}\n     */\n    start: null,\n\n    /**\n     * The end of the period\n     * @type {ICAL.Time}\n     */\n    end: null,\n\n    /**\n     * The duration of the period\n     * @type {ICAL.Duration}\n     */\n    duration: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalperiod\"\n     */\n    icalclass: \"icalperiod\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"period\"\n     */\n    icaltype: \"period\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Period}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Period.fromData({\n        start: this.start ? this.start.clone() : null,\n        end: this.end ? this.end.clone() : null,\n        duration: this.duration ? this.duration.clone() : null\n      });\n    },\n\n    /**\n     * Calculates the duration of the period, either directly or by subtracting\n     * start from end date.\n     *\n     * @return {ICAL.Duration}      The calculated duration\n     */\n    getDuration: function duration() {\n      if (this.duration) {\n        return this.duration;\n      } else {\n        return this.end.subtractDate(this.start);\n      }\n    },\n\n    /**\n     * Calculates the end date of the period, either directly or by adding\n     * duration to start date.\n     *\n     * @return {ICAL.Time}          The calculated end date\n     */\n    getEnd: function getEnd() {\n      if (this.end) {\n        return this.end;\n      } else {\n        var end = this.start.clone();\n        end.addDuration(this.duration);\n        return end;\n      }\n    },\n\n    /**\n     * The string representation of this period.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.start + \"/\" + (this.end || this.duration);\n    },\n\n    /**\n     * The jCal representation of this period type.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      return [this.start.toString(), (this.end || this.duration).toString()];\n    },\n\n    /**\n     * The iCalendar string representation of this period.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return this.start.toICALString() + \"/\" + (this.end || this.duration).toICALString();\n    }\n  };\n  /**\n   * Creates a new {@link ICAL.Period} instance from the passed string.\n   *\n   * @param {String} str            The string to parse\n   * @param {ICAL.Property} prop    The property this period will be on\n   * @return {ICAL.Period}          The created period instance\n   */\n\n  ICAL.Period.fromString = function fromString(str, prop) {\n    var parts = str.split('/');\n\n    if (parts.length !== 2) {\n      throw new Error('Invalid string value: \"' + str + '\" must contain a \"/\" char.');\n    }\n\n    var options = {\n      start: ICAL.Time.fromDateTimeString(parts[0], prop)\n    };\n    var end = parts[1];\n\n    if (ICAL.Duration.isValueString(end)) {\n      options.duration = ICAL.Duration.fromString(end);\n    } else {\n      options.end = ICAL.Time.fromDateTimeString(end, prop);\n    }\n\n    return new ICAL.Period(options);\n  };\n  /**\n   * Creates a new {@link ICAL.Period} instance from the given data object.\n   * The passed data object cannot contain both and end date and a duration.\n   *\n   * @param {Object} aData                  An object with members of the period\n   * @param {ICAL.Time=} aData.start        The start of the period\n   * @param {ICAL.Time=} aData.end          The end of the period\n   * @param {ICAL.Duration=} aData.duration The duration of the period\n   * @return {ICAL.Period}                  The period instance\n   */\n\n\n  ICAL.Period.fromData = function fromData(aData) {\n    return new ICAL.Period(aData);\n  };\n  /**\n   * Returns a new period instance from the given jCal data array. The first\n   * member is always the start date string, the second member is either a\n   * duration or end date string.\n   *\n   * @param {Array<String,String>} aData    The jCal data array\n   * @param {ICAL.Property} aProp           The property this jCal data is on\n   * @return {ICAL.Period}                  The period instance\n   */\n\n\n  ICAL.Period.fromJSON = function (aData, aProp) {\n    if (ICAL.Duration.isValueString(aData[1])) {\n      return ICAL.Period.fromData({\n        start: ICAL.Time.fromDateTimeString(aData[0], aProp),\n        duration: ICAL.Duration.fromString(aData[1])\n      });\n    } else {\n      return ICAL.Period.fromData({\n        start: ICAL.Time.fromDateTimeString(aData[0], aProp),\n        end: ICAL.Time.fromDateTimeString(aData[1], aProp)\n      });\n    }\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  var DURATION_LETTERS = /([PDWHMTS]{1,1})/;\n  /**\n   * @classdesc\n   * This class represents the \"duration\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Duration\n   * @param {Object} data               An object with members of the duration\n   * @param {Number} data.weeks         Duration in weeks\n   * @param {Number} data.days          Duration in days\n   * @param {Number} data.hours         Duration in hours\n   * @param {Number} data.minutes       Duration in minutes\n   * @param {Number} data.seconds       Duration in seconds\n   * @param {Boolean} data.isNegative   If true, the duration is negative\n   */\n\n  ICAL.Duration = function icalduration(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Duration.prototype = {\n    /**\n     * The weeks in this duration\n     * @type {Number}\n     * @default 0\n     */\n    weeks: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    days: 0,\n\n    /**\n     * The days in this duration\n     * @type {Number}\n     * @default 0\n     */\n    hours: 0,\n\n    /**\n     * The minutes in this duration\n     * @type {Number}\n     * @default 0\n     */\n    minutes: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Number}\n     * @default 0\n     */\n    seconds: 0,\n\n    /**\n     * The seconds in this duration\n     * @type {Boolean}\n     * @default false\n     */\n    isNegative: false,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalduration\"\n     */\n    icalclass: \"icalduration\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"duration\"\n     */\n    icaltype: \"duration\",\n\n    /**\n     * Returns a clone of the duration object.\n     *\n     * @return {ICAL.Duration}      The cloned object\n     */\n    clone: function clone() {\n      return ICAL.Duration.fromData(this);\n    },\n\n    /**\n     * The duration value expressed as a number of seconds.\n     *\n     * @return {Number}             The duration value in seconds\n     */\n    toSeconds: function toSeconds() {\n      var seconds = this.seconds + 60 * this.minutes + 3600 * this.hours + 86400 * this.days + 7 * 86400 * this.weeks;\n      return this.isNegative ? -seconds : seconds;\n    },\n\n    /**\n     * Reads the passed seconds value into this duration object. Afterwards,\n     * members like {@link ICAL.Duration#days days} and {@link ICAL.Duration#weeks weeks} will be set up\n     * accordingly.\n     *\n     * @param {Number} aSeconds     The duration value in seconds\n     * @return {ICAL.Duration}      Returns this instance\n     */\n    fromSeconds: function fromSeconds(aSeconds) {\n      var secs = Math.abs(aSeconds);\n      this.isNegative = aSeconds < 0;\n      this.days = ICAL.helpers.trunc(secs / 86400); // If we have a flat number of weeks, use them.\n\n      if (this.days % 7 == 0) {\n        this.weeks = this.days / 7;\n        this.days = 0;\n      } else {\n        this.weeks = 0;\n      }\n\n      secs -= (this.days + 7 * this.weeks) * 86400;\n      this.hours = ICAL.helpers.trunc(secs / 3600);\n      secs -= this.hours * 3600;\n      this.minutes = ICAL.helpers.trunc(secs / 60);\n      secs -= this.minutes * 60;\n      this.seconds = secs;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData               An object with members of the duration\n     * @param {Number} aData.weeks         Duration in weeks\n     * @param {Number} aData.days          Duration in days\n     * @param {Number} aData.hours         Duration in hours\n     * @param {Number} aData.minutes       Duration in minutes\n     * @param {Number} aData.seconds       Duration in seconds\n     * @param {Boolean} aData.isNegative   If true, the duration is negative\n     */\n    fromData: function fromData(aData) {\n      var propsToCopy = [\"weeks\", \"days\", \"hours\", \"minutes\", \"seconds\", \"isNegative\"];\n\n      for (var key in propsToCopy) {\n        /* istanbul ignore if */\n        if (!propsToCopy.hasOwnProperty(key)) {\n          continue;\n        }\n\n        var prop = propsToCopy[key];\n\n        if (aData && prop in aData) {\n          this[prop] = aData[prop];\n        } else {\n          this[prop] = 0;\n        }\n      }\n    },\n\n    /**\n     * Resets the duration instance to the default values, i.e. PT0S\n     */\n    reset: function reset() {\n      this.isNegative = false;\n      this.weeks = 0;\n      this.days = 0;\n      this.hours = 0;\n      this.minutes = 0;\n      this.seconds = 0;\n    },\n\n    /**\n     * Compares the duration instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function compare(aOther) {\n      var thisSeconds = this.toSeconds();\n      var otherSeconds = aOther.toSeconds();\n      return (thisSeconds > otherSeconds) - (thisSeconds < otherSeconds);\n    },\n\n    /**\n     * Normalizes the duration instance. For example, a duration with a value\n     * of 61 seconds will be normalized to 1 minute and 1 second.\n     */\n    normalize: function normalize() {\n      this.fromSeconds(this.toSeconds());\n    },\n\n    /**\n     * The string representation of this duration.\n     * @return {String}\n     */\n    toString: function toString() {\n      if (this.toSeconds() == 0) {\n        return \"PT0S\";\n      } else {\n        var str = \"\";\n        if (this.isNegative) str += \"-\";\n        str += \"P\";\n        if (this.weeks) str += this.weeks + \"W\";\n        if (this.days) str += this.days + \"D\";\n\n        if (this.hours || this.minutes || this.seconds) {\n          str += \"T\";\n          if (this.hours) str += this.hours + \"H\";\n          if (this.minutes) str += this.minutes + \"M\";\n          if (this.seconds) str += this.seconds + \"S\";\n        }\n\n        return str;\n      }\n    },\n\n    /**\n     * The iCalendar string representation of this duration.\n     * @return {String}\n     */\n    toICALString: function toICALString() {\n      return this.toString();\n    }\n  };\n  /**\n   * Returns a new ICAL.Duration instance from the passed seconds value.\n   *\n   * @param {Number} aSeconds       The seconds to create the instance from\n   * @return {ICAL.Duration}        The newly created duration instance\n   */\n\n  ICAL.Duration.fromSeconds = function icalduration_from_seconds(aSeconds) {\n    return new ICAL.Duration().fromSeconds(aSeconds);\n  };\n  /**\n   * Internal helper function to handle a chunk of a duration.\n   *\n   * @param {String} letter type of duration chunk\n   * @param {String} number numeric value or -/+\n   * @param {Object} dict target to assign values to\n   */\n\n\n  function parseDurationChunk(letter, number, object) {\n    var type;\n\n    switch (letter) {\n      case 'P':\n        if (number && number === '-') {\n          object.isNegative = true;\n        } else {\n          object.isNegative = false;\n        } // period\n\n\n        break;\n\n      case 'D':\n        type = 'days';\n        break;\n\n      case 'W':\n        type = 'weeks';\n        break;\n\n      case 'H':\n        type = 'hours';\n        break;\n\n      case 'M':\n        type = 'minutes';\n        break;\n\n      case 'S':\n        type = 'seconds';\n        break;\n\n      default:\n        // Not a valid chunk\n        return 0;\n    }\n\n    if (type) {\n      if (!number && number !== 0) {\n        throw new Error('invalid duration value: Missing number before \"' + letter + '\"');\n      }\n\n      var num = parseInt(number, 10);\n\n      if (ICAL.helpers.isStrictlyNaN(num)) {\n        throw new Error('invalid duration value: Invalid number \"' + number + '\" before \"' + letter + '\"');\n      }\n\n      object[type] = num;\n    }\n\n    return 1;\n  }\n  /**\n   * Checks if the given string is an iCalendar duration value.\n   *\n   * @param {String} value      The raw ical value\n   * @return {Boolean}          True, if the given value is of the\n   *                              duration ical type\n   */\n\n\n  ICAL.Duration.isValueString = function (string) {\n    return string[0] === 'P' || string[1] === 'P';\n  };\n  /**\n   * Creates a new {@link ICAL.Duration} instance from the passed string.\n   *\n   * @param {String} aStr       The string to parse\n   * @return {ICAL.Duration}    The created duration instance\n   */\n\n\n  ICAL.Duration.fromString = function icalduration_from_string(aStr) {\n    var pos = 0;\n    var dict = Object.create(null);\n    var chunks = 0;\n\n    while ((pos = aStr.search(DURATION_LETTERS)) !== -1) {\n      var type = aStr[pos];\n      var numeric = aStr.substr(0, pos);\n      aStr = aStr.substr(pos + 1);\n      chunks += parseDurationChunk(type, numeric, dict);\n    }\n\n    if (chunks < 2) {\n      // There must be at least a chunk with \"P\" and some unit chunk\n      throw new Error('invalid duration value: Not enough duration components in \"' + aStr + '\"');\n    }\n\n    return new ICAL.Duration(dict);\n  };\n  /**\n   * Creates a new ICAL.Duration instance from the given data object.\n   *\n   * @param {Object} aData               An object with members of the duration\n   * @param {Number} aData.weeks         Duration in weeks\n   * @param {Number} aData.days          Duration in days\n   * @param {Number} aData.hours         Duration in hours\n   * @param {Number} aData.minutes       Duration in minutes\n   * @param {Number} aData.seconds       Duration in seconds\n   * @param {Boolean} aData.isNegative   If true, the duration is negative\n   * @return {ICAL.Duration}             The createad duration instance\n   */\n\n\n  ICAL.Duration.fromData = function icalduration_from_data(aData) {\n    return new ICAL.Duration(aData);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2012 */\n\n\n(function () {\n  var OPTIONS = [\"tzid\", \"location\", \"tznames\", \"latitude\", \"longitude\"];\n  /**\n   * @classdesc\n   * Timezone representation, created by passing in a tzid and component.\n   *\n   * @example\n   * var vcalendar;\n   * var timezoneComp = vcalendar.getFirstSubcomponent('vtimezone');\n   * var tzid = timezoneComp.getFirstPropertyValue('tzid');\n   *\n   * var timezone = new ICAL.Timezone({\n   *   component: timezoneComp,\n   *   tzid\n   * });\n   *\n   * @class\n   * @param {ICAL.Component|Object} data options for class\n   * @param {String|ICAL.Component} data.component\n   *        If data is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} data.tzid      The timezone identifier\n   * @param {String} data.location  The timezone locationw\n   * @param {String} data.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} data.latitude  The latitude of the timezone\n   * @param {Number} data.longitude The longitude of the timezone\n   */\n\n  ICAL.Timezone = function icaltimezone(data) {\n    this.wrappedJSObject = this;\n    this.fromData(data);\n  };\n\n  ICAL.Timezone.prototype = {\n    /**\n     * Timezone identifier\n     * @type {String}\n     */\n    tzid: \"\",\n\n    /**\n     * Timezone location\n     * @type {String}\n     */\n    location: \"\",\n\n    /**\n     * Alternative timezone name, for the string representation\n     * @type {String}\n     */\n    tznames: \"\",\n\n    /**\n     * The primary latitude for the timezone.\n     * @type {Number}\n     */\n    latitude: 0.0,\n\n    /**\n     * The primary longitude for the timezone.\n     * @type {Number}\n     */\n    longitude: 0.0,\n\n    /**\n     * The vtimezone component for this timezone.\n     * @type {ICAL.Component}\n     */\n    component: null,\n\n    /**\n     * The year this timezone has been expanded to. All timezone transition\n     * dates until this year are known and can be used for calculation\n     *\n     * @private\n     * @type {Number}\n     */\n    expandedUntilYear: 0,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltimezone\"\n     */\n    icalclass: \"icaltimezone\",\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {ICAL.Component|Object} aData options for class\n     * @param {String|ICAL.Component} aData.component\n     *        If aData is a simple object, then this member can be set to either a\n     *        string containing the component data, or an already parsed\n     *        ICAL.Component\n     * @param {String} aData.tzid      The timezone identifier\n     * @param {String} aData.location  The timezone locationw\n     * @param {String} aData.tznames   An alternative string representation of the\n     *                                  timezone\n     * @param {Number} aData.latitude  The latitude of the timezone\n     * @param {Number} aData.longitude The longitude of the timezone\n     */\n    fromData: function fromData(aData) {\n      this.expandedUntilYear = 0;\n      this.changes = [];\n\n      if (aData instanceof ICAL.Component) {\n        // Either a component is passed directly\n        this.component = aData;\n      } else {\n        // Otherwise the component may be in the data object\n        if (aData && \"component\" in aData) {\n          if (typeof aData.component == \"string\") {\n            // If a string was passed, parse it as a component\n            var jCal = ICAL.parse(aData.component);\n            this.component = new ICAL.Component(jCal);\n          } else if (aData.component instanceof ICAL.Component) {\n            // If it was a component already, then just set it\n            this.component = aData.component;\n          } else {\n            // Otherwise just null out the component\n            this.component = null;\n          }\n        } // Copy remaining passed properties\n\n\n        for (var key in OPTIONS) {\n          /* istanbul ignore else */\n          if (OPTIONS.hasOwnProperty(key)) {\n            var prop = OPTIONS[key];\n\n            if (aData && prop in aData) {\n              this[prop] = aData[prop];\n            }\n          }\n        }\n      } // If we have a component but no TZID, attempt to get it from the\n      // component's properties.\n\n\n      if (this.component instanceof ICAL.Component && !this.tzid) {\n        this.tzid = this.component.getFirstPropertyValue('tzid');\n      }\n\n      return this;\n    },\n\n    /**\n     * Finds the utcOffset the given time would occur in this timezone.\n     *\n     * @param {ICAL.Time} tt        The time to check for\n     * @return {Number} utc offset in seconds\n     */\n    utcOffset: function utcOffset(tt) {\n      if (this == ICAL.Timezone.utcTimezone || this == ICAL.Timezone.localTimezone) {\n        return 0;\n      }\n\n      this._ensureCoverage(tt.year);\n\n      if (!this.changes.length) {\n        return 0;\n      }\n\n      var tt_change = {\n        year: tt.year,\n        month: tt.month,\n        day: tt.day,\n        hour: tt.hour,\n        minute: tt.minute,\n        second: tt.second\n      };\n\n      var change_num = this._findNearbyChange(tt_change);\n\n      var change_num_to_use = -1;\n      var step = 1; // TODO: replace with bin search?\n\n      for (;;) {\n        var change = ICAL.helpers.clone(this.changes[change_num], true);\n\n        if (change.utcOffset < change.prevUtcOffset) {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.utcOffset);\n        } else {\n          ICAL.Timezone.adjust_change(change, 0, 0, 0, change.prevUtcOffset);\n        }\n\n        var cmp = ICAL.Timezone._compare_change_fn(tt_change, change);\n\n        if (cmp >= 0) {\n          change_num_to_use = change_num;\n        } else {\n          step = -1;\n        }\n\n        if (step == -1 && change_num_to_use != -1) {\n          break;\n        }\n\n        change_num += step;\n\n        if (change_num < 0) {\n          return 0;\n        }\n\n        if (change_num >= this.changes.length) {\n          break;\n        }\n      }\n\n      var zone_change = this.changes[change_num_to_use];\n      var utcOffset_change = zone_change.utcOffset - zone_change.prevUtcOffset;\n\n      if (utcOffset_change < 0 && change_num_to_use > 0) {\n        var tmp_change = ICAL.helpers.clone(zone_change, true);\n        ICAL.Timezone.adjust_change(tmp_change, 0, 0, 0, tmp_change.prevUtcOffset);\n\n        if (ICAL.Timezone._compare_change_fn(tt_change, tmp_change) < 0) {\n          var prev_zone_change = this.changes[change_num_to_use - 1];\n          var want_daylight = false; // TODO\n\n          if (zone_change.is_daylight != want_daylight && prev_zone_change.is_daylight == want_daylight) {\n            zone_change = prev_zone_change;\n          }\n        }\n      } // TODO return is_daylight?\n\n\n      return zone_change.utcOffset;\n    },\n    _findNearbyChange: function icaltimezone_find_nearby_change(change) {\n      // find the closest match\n      var idx = ICAL.helpers.binsearchInsert(this.changes, change, ICAL.Timezone._compare_change_fn);\n\n      if (idx >= this.changes.length) {\n        return this.changes.length - 1;\n      }\n\n      return idx;\n    },\n    _ensureCoverage: function _ensureCoverage(aYear) {\n      if (ICAL.Timezone._minimumExpansionYear == -1) {\n        var today = ICAL.Time.now();\n        ICAL.Timezone._minimumExpansionYear = today.year;\n      }\n\n      var changesEndYear = aYear;\n\n      if (changesEndYear < ICAL.Timezone._minimumExpansionYear) {\n        changesEndYear = ICAL.Timezone._minimumExpansionYear;\n      }\n\n      changesEndYear += ICAL.Timezone.EXTRA_COVERAGE;\n\n      if (changesEndYear > ICAL.Timezone.MAX_YEAR) {\n        changesEndYear = ICAL.Timezone.MAX_YEAR;\n      }\n\n      if (!this.changes.length || this.expandedUntilYear < aYear) {\n        var subcomps = this.component.getAllSubcomponents();\n        var compLen = subcomps.length;\n        var compIdx = 0;\n\n        for (; compIdx < compLen; compIdx++) {\n          this._expandComponent(subcomps[compIdx], changesEndYear, this.changes);\n        }\n\n        this.changes.sort(ICAL.Timezone._compare_change_fn);\n        this.expandedUntilYear = changesEndYear;\n      }\n    },\n    _expandComponent: function _expandComponent(aComponent, aYear, changes) {\n      if (!aComponent.hasProperty(\"dtstart\") || !aComponent.hasProperty(\"tzoffsetto\") || !aComponent.hasProperty(\"tzoffsetfrom\")) {\n        return null;\n      }\n\n      var dtstart = aComponent.getFirstProperty(\"dtstart\").getFirstValue();\n      var change;\n\n      function convert_tzoffset(offset) {\n        return offset.factor * (offset.hours * 3600 + offset.minutes * 60);\n      }\n\n      function init_changes() {\n        var changebase = {};\n        changebase.is_daylight = aComponent.name == \"daylight\";\n        changebase.utcOffset = convert_tzoffset(aComponent.getFirstProperty(\"tzoffsetto\").getFirstValue());\n        changebase.prevUtcOffset = convert_tzoffset(aComponent.getFirstProperty(\"tzoffsetfrom\").getFirstValue());\n        return changebase;\n      }\n\n      if (!aComponent.hasProperty(\"rrule\") && !aComponent.hasProperty(\"rdate\")) {\n        change = init_changes();\n        change.year = dtstart.year;\n        change.month = dtstart.month;\n        change.day = dtstart.day;\n        change.hour = dtstart.hour;\n        change.minute = dtstart.minute;\n        change.second = dtstart.second;\n        ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n        changes.push(change);\n      } else {\n        var props = aComponent.getAllProperties(\"rdate\");\n\n        for (var rdatekey in props) {\n          /* istanbul ignore if */\n          if (!props.hasOwnProperty(rdatekey)) {\n            continue;\n          }\n\n          var rdate = props[rdatekey];\n          var time = rdate.getFirstValue();\n          change = init_changes();\n          change.year = time.year;\n          change.month = time.month;\n          change.day = time.day;\n\n          if (time.isDate) {\n            change.hour = dtstart.hour;\n            change.minute = dtstart.minute;\n            change.second = dtstart.second;\n\n            if (dtstart.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n            }\n          } else {\n            change.hour = time.hour;\n            change.minute = time.minute;\n            change.second = time.second;\n\n            if (time.zone != ICAL.Timezone.utcTimezone) {\n              ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n            }\n          }\n\n          changes.push(change);\n        }\n\n        var rrule = aComponent.getFirstProperty(\"rrule\");\n\n        if (rrule) {\n          rrule = rrule.getFirstValue();\n          change = init_changes();\n\n          if (rrule.until && rrule.until.zone == ICAL.Timezone.utcTimezone) {\n            rrule.until.adjust(0, 0, 0, change.prevUtcOffset);\n            rrule.until.zone = ICAL.Timezone.localTimezone;\n          }\n\n          var iterator = rrule.iterator(dtstart);\n          var occ;\n\n          while (occ = iterator.next()) {\n            change = init_changes();\n\n            if (occ.year > aYear || !occ) {\n              break;\n            }\n\n            change.year = occ.year;\n            change.month = occ.month;\n            change.day = occ.day;\n            change.hour = occ.hour;\n            change.minute = occ.minute;\n            change.second = occ.second;\n            change.isDate = occ.isDate;\n            ICAL.Timezone.adjust_change(change, 0, 0, 0, -change.prevUtcOffset);\n            changes.push(change);\n          }\n        }\n      }\n\n      return changes;\n    },\n\n    /**\n     * The string representation of this timezone.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.tznames ? this.tznames : this.tzid;\n    }\n  };\n\n  ICAL.Timezone._compare_change_fn = function icaltimezone_compare_change_fn(a, b) {\n    if (a.year < b.year) return -1;else if (a.year > b.year) return 1;\n    if (a.month < b.month) return -1;else if (a.month > b.month) return 1;\n    if (a.day < b.day) return -1;else if (a.day > b.day) return 1;\n    if (a.hour < b.hour) return -1;else if (a.hour > b.hour) return 1;\n    if (a.minute < b.minute) return -1;else if (a.minute > b.minute) return 1;\n    if (a.second < b.second) return -1;else if (a.second > b.second) return 1;\n    return 0;\n  };\n  /**\n   * Convert the date/time from one zone to the next.\n   *\n   * @param {ICAL.Time} tt                  The time to convert\n   * @param {ICAL.Timezone} from_zone       The source zone to convert from\n   * @param {ICAL.Timezone} to_zone         The target zone to conver to\n   * @return {ICAL.Time}                    The converted date/time object\n   */\n\n\n  ICAL.Timezone.convert_time = function icaltimezone_convert_time(tt, from_zone, to_zone) {\n    if (tt.isDate || from_zone.tzid == to_zone.tzid || from_zone == ICAL.Timezone.localTimezone || to_zone == ICAL.Timezone.localTimezone) {\n      tt.zone = to_zone;\n      return tt;\n    }\n\n    var utcOffset = from_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, -utcOffset);\n    utcOffset = to_zone.utcOffset(tt);\n    tt.adjust(0, 0, 0, utcOffset);\n    return null;\n  };\n  /**\n   * Creates a new ICAL.Timezone instance from the passed data object.\n   *\n   * @param {ICAL.Component|Object} aData options for class\n   * @param {String|ICAL.Component} aData.component\n   *        If aData is a simple object, then this member can be set to either a\n   *        string containing the component data, or an already parsed\n   *        ICAL.Component\n   * @param {String} aData.tzid      The timezone identifier\n   * @param {String} aData.location  The timezone locationw\n   * @param {String} aData.tznames   An alternative string representation of the\n   *                                  timezone\n   * @param {Number} aData.latitude  The latitude of the timezone\n   * @param {Number} aData.longitude The longitude of the timezone\n   */\n\n\n  ICAL.Timezone.fromData = function icaltimezone_fromData(aData) {\n    var tt = new ICAL.Timezone();\n    return tt.fromData(aData);\n  };\n  /**\n   * The instance describing the UTC timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n\n\n  ICAL.Timezone.utcTimezone = ICAL.Timezone.fromData({\n    tzid: \"UTC\"\n  });\n  /**\n   * The instance describing the local timezone\n   * @type {ICAL.Timezone}\n   * @constant\n   * @instance\n   */\n\n  ICAL.Timezone.localTimezone = ICAL.Timezone.fromData({\n    tzid: \"floating\"\n  });\n  /**\n   * Adjust a timezone change object.\n   * @private\n   * @param {Object} change     The timezone change object\n   * @param {Number} days       The extra amount of days\n   * @param {Number} hours      The extra amount of hours\n   * @param {Number} minutes    The extra amount of minutes\n   * @param {Number} seconds    The extra amount of seconds\n   */\n\n  ICAL.Timezone.adjust_change = function icaltimezone_adjust_change(change, days, hours, minutes, seconds) {\n    return ICAL.Time.prototype.adjust.call(change, days, hours, minutes, seconds, change);\n  };\n\n  ICAL.Timezone._minimumExpansionYear = -1;\n  ICAL.Timezone.MAX_YEAR = 2035; // TODO this is because of time_t, which we don't need. Still usefull?\n\n  ICAL.Timezone.EXTRA_COVERAGE = 5;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.TimezoneService = function () {\n  var zones;\n  /**\n   * @classdesc\n   * Singleton class to contain timezones.  Right now its all manual registry in\n   * the future we may use this class to download timezone information or handle\n   * loading pre-expanded timezones.\n   *\n   * @namespace\n   * @alias ICAL.TimezoneService\n   */\n\n  var TimezoneService = {\n    reset: function reset() {\n      zones = Object.create(null);\n      var utc = ICAL.Timezone.utcTimezone;\n      zones.Z = utc;\n      zones.UTC = utc;\n      zones.GMT = utc;\n    },\n\n    /**\n     * Checks if timezone id has been registered.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {Boolean}        False, when not present\n     */\n    has: function has(tzid) {\n      return !!zones[tzid];\n    },\n\n    /**\n     * Returns a timezone by its tzid if present.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The timezone, or null if not found\n     */\n    get: function get(tzid) {\n      return zones[tzid];\n    },\n\n    /**\n     * Registers a timezone object or component.\n     *\n     * @param {String=} name\n     *        The name of the timezone. Defaults to the component's TZID if not\n     *        passed.\n     * @param {ICAL.Component|ICAL.Timezone} zone\n     *        The initialized zone or vtimezone.\n     */\n    register: function register(name, timezone) {\n      if (name instanceof ICAL.Component) {\n        if (name.name === 'vtimezone') {\n          timezone = new ICAL.Timezone(name);\n          name = timezone.tzid;\n        }\n      }\n\n      if (timezone instanceof ICAL.Timezone) {\n        zones[name] = timezone;\n      } else {\n        throw new TypeError('timezone must be ICAL.Timezone or ICAL.Component');\n      }\n    },\n\n    /**\n     * Removes a timezone by its tzid from the list.\n     *\n     * @param {String} tzid     Timezone identifier (e.g. America/Los_Angeles)\n     * @return {?ICAL.Timezone} The removed timezone, or null if not registered\n     */\n    remove: function remove(tzid) {\n      return delete zones[tzid];\n    }\n  }; // initialize defaults\n\n  TimezoneService.reset();\n  return TimezoneService;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  /**\n   * @classdesc\n   * iCalendar Time representation (similar to JS Date object).  Fully\n   * independent of system (OS) timezone / time.  Unlike JS Date, the month\n   * January is 1, not zero.\n   *\n   * @example\n   * var time = new ICAL.Time({\n   *   year: 2012,\n   *   month: 10,\n   *   day: 11\n   *   minute: 0,\n   *   second: 0,\n   *   isDate: false\n   * });\n   *\n   *\n   * @alias ICAL.Time\n   * @class\n   * @param {Object} data           Time initialization\n   * @param {Number=} data.year     The year for this date\n   * @param {Number=} data.month    The month for this date\n   * @param {Number=} data.day      The day for this date\n   * @param {Number=} data.hour     The hour for this date\n   * @param {Number=} data.minute   The minute for this date\n   * @param {Number=} data.second   The second for this date\n   * @param {Boolean=} data.isDate  If true, the instance represents a date (as\n   *                                  opposed to a date-time)\n   * @param {ICAL.Timezone} zone timezone this position occurs in\n   */\n  ICAL.Time = function icaltime(data, zone) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n    /* time defaults */\n\n    time.year = 0;\n    time.month = 1;\n    time.day = 1;\n    time.hour = 0;\n    time.minute = 0;\n    time.second = 0;\n    time.isDate = false;\n    this.fromData(data, zone);\n  };\n\n  ICAL.Time._dowCache = {};\n  ICAL.Time._wnCache = {};\n  ICAL.Time.prototype = {\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icaltime\"\n     */\n    icalclass: \"icaltime\",\n    _cachedUnixTime: null,\n\n    /**\n     * The type name, to be used in the jCal object. This value may change and\n     * is strictly defined by the {@link ICAL.Time#isDate isDate} member.\n     * @readonly\n     * @type {String}\n     * @default \"date-time\"\n     */\n    get icaltype() {\n      return this.isDate ? 'date' : 'date-time';\n    },\n\n    /**\n     * The timezone for this time.\n     * @type {ICAL.Timezone}\n     */\n    zone: null,\n\n    /**\n     * Internal uses to indicate that a change has been made and the next read\n     * operation must attempt to normalize the value (for example changing the\n     * day to 33).\n     *\n     * @type {Boolean}\n     * @private\n     */\n    _pendingNormalization: false,\n\n    /**\n     * Returns a clone of the time object.\n     *\n     * @return {ICAL.Time}              The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Time(this._time, this.zone);\n    },\n\n    /**\n     * Reset the time instance to epoch time\n     */\n    reset: function icaltime_reset() {\n      this.fromData(ICAL.Time.epochTime);\n      this.zone = ICAL.Timezone.utcTimezone;\n    },\n\n    /**\n     * Reset the time instance to the given date/time values.\n     *\n     * @param {Number} year             The year to set\n     * @param {Number} month            The month to set\n     * @param {Number} day              The day to set\n     * @param {Number} hour             The hour to set\n     * @param {Number} minute           The minute to set\n     * @param {Number} second           The second to set\n     * @param {ICAL.Timezone} timezone  The timezone to set\n     */\n    resetTo: function icaltime_resetTo(year, month, day, hour, minute, second, timezone) {\n      this.fromData({\n        year: year,\n        month: month,\n        day: day,\n        hour: hour,\n        minute: minute,\n        second: second,\n        zone: timezone\n      });\n    },\n\n    /**\n     * Set up the current instance from the Javascript date value.\n     *\n     * @param {?Date} aDate     The Javascript Date to read, or null to reset\n     * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n     */\n    fromJSDate: function icaltime_fromJSDate(aDate, useUTC) {\n      if (!aDate) {\n        this.reset();\n      } else {\n        if (useUTC) {\n          this.zone = ICAL.Timezone.utcTimezone;\n          this.year = aDate.getUTCFullYear();\n          this.month = aDate.getUTCMonth() + 1;\n          this.day = aDate.getUTCDate();\n          this.hour = aDate.getUTCHours();\n          this.minute = aDate.getUTCMinutes();\n          this.second = aDate.getUTCSeconds();\n        } else {\n          this.zone = ICAL.Timezone.localTimezone;\n          this.year = aDate.getFullYear();\n          this.month = aDate.getMonth() + 1;\n          this.day = aDate.getDate();\n          this.hour = aDate.getHours();\n          this.minute = aDate.getMinutes();\n          this.second = aDate.getSeconds();\n        }\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} aData            Time initialization\n     * @param {Number=} aData.year      The year for this date\n     * @param {Number=} aData.month     The month for this date\n     * @param {Number=} aData.day       The day for this date\n     * @param {Number=} aData.hour      The hour for this date\n     * @param {Number=} aData.minute    The minute for this date\n     * @param {Number=} aData.second    The second for this date\n     * @param {Boolean=} aData.isDate   If true, the instance represents a date\n     *                                    (as opposed to a date-time)\n     * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n     */\n    fromData: function fromData(aData, aZone) {\n      if (aData) {\n        for (var key in aData) {\n          /* istanbul ignore else */\n          if (Object.prototype.hasOwnProperty.call(aData, key)) {\n            // ical type cannot be set\n            if (key === 'icaltype') continue;\n            this[key] = aData[key];\n          }\n        }\n      }\n\n      if (aZone) {\n        this.zone = aZone;\n      }\n\n      if (aData && !(\"isDate\" in aData)) {\n        this.isDate = !(\"hour\" in aData);\n      } else if (aData && \"isDate\" in aData) {\n        this.isDate = aData.isDate;\n      }\n\n      if (aData && \"timezone\" in aData) {\n        var zone = ICAL.TimezoneService.get(aData.timezone);\n        this.zone = zone || ICAL.Timezone.localTimezone;\n      }\n\n      if (aData && \"zone\" in aData) {\n        this.zone = aData.zone;\n      }\n\n      if (!this.zone) {\n        this.zone = ICAL.Timezone.localTimezone;\n      }\n\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Calculate the day of week.\n     * @return {ICAL.Time.weekDay}\n     */\n    dayOfWeek: function icaltime_dayOfWeek() {\n      var dowCacheKey = (this.year << 9) + (this.month << 5) + this.day;\n\n      if (dowCacheKey in ICAL.Time._dowCache) {\n        return ICAL.Time._dowCache[dowCacheKey];\n      } // Using Zeller's algorithm\n\n\n      var q = this.day;\n      var m = this.month + (this.month < 3 ? 12 : 0);\n      var Y = this.year - (this.month < 3 ? 1 : 0);\n      var h = q + Y + ICAL.helpers.trunc((m + 1) * 26 / 10) + ICAL.helpers.trunc(Y / 4);\n      /* istanbul ignore else */\n\n      if (true\n      /* gregorian */\n      ) {\n          h += ICAL.helpers.trunc(Y / 100) * 6 + ICAL.helpers.trunc(Y / 400);\n        } else {\n        h += 5;\n      } // Normalize to 1 = sunday\n\n\n      h = (h + 6) % 7 + 1;\n      ICAL.Time._dowCache[dowCacheKey] = h;\n      return h;\n    },\n\n    /**\n     * Calculate the day of year.\n     * @return {Number}\n     */\n    dayOfYear: function dayOfYear() {\n      var is_leap = ICAL.Time.isLeapYear(this.year) ? 1 : 0;\n      var diypm = ICAL.Time.daysInYearPassedMonth;\n      return diypm[is_leap][this.month - 1] + this.day;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * week. The resulting ICAL.Time instance is of icaltype date, even if this\n     * is a date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The start of the week (cloned)\n     */\n    startOfWeek: function startOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day -= (this.dayOfWeek() + 7 - firstDow) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the week.\n     * The resulting ICAL.Time instance is of icaltype date, even if this is a\n     * date-time.\n     *\n     * @param {ICAL.Time.weekDay=} aWeekStart\n     *        The week start weekday, defaults to SUNDAY\n     * @return {ICAL.Time}      The end of the week (cloned)\n     */\n    endOfWeek: function endOfWeek(aWeekStart) {\n      var firstDow = aWeekStart || ICAL.Time.SUNDAY;\n      var result = this.clone();\n      result.day += (7 - this.dayOfWeek() + firstDow - ICAL.Time.SUNDAY) % 7;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * month. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the month (cloned)\n     */\n    startOfMonth: function startOfMonth() {\n      var result = this.clone();\n      result.day = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * month.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the month (cloned)\n     */\n    endOfMonth: function endOfMonth() {\n      var result = this.clone();\n      result.day = ICAL.Time.daysInMonth(result.month, result.year);\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, rewound to the start of the\n     * year. The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The start of the year (cloned)\n     */\n    startOfYear: function startOfYear() {\n      var result = this.clone();\n      result.day = 1;\n      result.month = 1;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * Returns a copy of the current date/time, shifted to the end of the\n     * year.  The resulting ICAL.Time instance is of icaltype date, even if\n     * this is a date-time.\n     *\n     * @return {ICAL.Time}      The end of the year (cloned)\n     */\n    endOfYear: function endOfYear() {\n      var result = this.clone();\n      result.day = 31;\n      result.month = 12;\n      result.isDate = true;\n      result.hour = 0;\n      result.minute = 0;\n      result.second = 0;\n      return result;\n    },\n\n    /**\n     * First calculates the start of the week, then returns the day of year for\n     * this date. If the day falls into the previous year, the day is zero or negative.\n     *\n     * @param {ICAL.Time.weekDay=} aFirstDayOfWeek\n     *        The week start weekday, defaults to SUNDAY\n     * @return {Number}     The calculated day of year\n     */\n    startDoyWeek: function startDoyWeek(aFirstDayOfWeek) {\n      var firstDow = aFirstDayOfWeek || ICAL.Time.SUNDAY;\n      var delta = this.dayOfWeek() - firstDow;\n      if (delta < 0) delta += 7;\n      return this.dayOfYear() - delta;\n    },\n\n    /**\n     * Get the dominical letter for the current year. Letters range from A - G\n     * for common years, and AG to GF for leap years.\n     *\n     * @param {Number} yr           The year to retrieve the letter for\n     * @return {String}             The dominical letter.\n     */\n    getDominicalLetter: function getDominicalLetter() {\n      return ICAL.Time.getDominicalLetter(this.year);\n    },\n\n    /**\n     * Finds the nthWeekDay relative to the current month (not day).  The\n     * returned value is a day relative the month that this month belongs to so\n     * 1 would indicate the first of the month and 40 would indicate a day in\n     * the following month.\n     *\n     * @param {Number} aDayOfWeek   Day of the week see the day name constants\n     * @param {Number} aPos         Nth occurrence of a given week day values\n     *        of 1 and 0 both indicate the first weekday of that type. aPos may\n     *        be either positive or negative\n     *\n     * @return {Number} numeric value indicating a day relative\n     *                   to the current month of this time object\n     */\n    nthWeekDay: function icaltime_nthWeekDay(aDayOfWeek, aPos) {\n      var daysInMonth = ICAL.Time.daysInMonth(this.month, this.year);\n      var weekday;\n      var pos = aPos;\n      var start = 0;\n      var otherDay = this.clone();\n\n      if (pos >= 0) {\n        otherDay.day = 1; // because 0 means no position has been given\n        // 1 and 0 indicate the same day.\n\n        if (pos != 0) {\n          // remove the extra numeric value\n          pos--;\n        } // set current start offset to current day.\n\n\n        start = otherDay.day; // find the current day of week\n\n        var startDow = otherDay.dayOfWeek(); // calculate the difference between current\n        // day of the week and desired day of the week\n\n        var offset = aDayOfWeek - startDow; // if the offset goes into the past\n        // week we add 7 so its goes into the next\n        // week. We only want to go forward in time here.\n\n        if (offset < 0) // this is really important otherwise we would\n          // end up with dates from in the past.\n          offset += 7; // add offset to start so start is the same\n        // day of the week as the desired day of week.\n\n        start += offset; // because we are going to add (and multiply)\n        // the numeric value of the day we subtract it\n        // from the start position so not to add it twice.\n\n        start -= aDayOfWeek; // set week day\n\n        weekday = aDayOfWeek;\n      } else {\n        // then we set it to the last day in the current month\n        otherDay.day = daysInMonth; // find the ends weekday\n\n        var endDow = otherDay.dayOfWeek();\n        pos++;\n        weekday = endDow - aDayOfWeek;\n\n        if (weekday < 0) {\n          weekday += 7;\n        }\n\n        weekday = daysInMonth - weekday;\n      }\n\n      weekday += pos * 7;\n      return start + weekday;\n    },\n\n    /**\n     * Checks if current time is the nth weekday, relative to the current\n     * month.  Will always return false when rule resolves outside of current\n     * month.\n     *\n     * @param {ICAL.Time.weekDay} aDayOfWeek       Day of week to check\n     * @param {Number} aPos                        Relative position\n     * @return {Boolean}                           True, if its the nth weekday\n     */\n    isNthWeekDay: function isNthWeekDay(aDayOfWeek, aPos) {\n      var dow = this.dayOfWeek();\n\n      if (aPos === 0 && dow === aDayOfWeek) {\n        return true;\n      } // get pos\n\n\n      var day = this.nthWeekDay(aDayOfWeek, aPos);\n\n      if (day === this.day) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Calculates the ISO 8601 week number. The first week of a year is the\n     * week that contains the first Thursday. The year can have 53 weeks, if\n     * January 1st is a Friday.\n     *\n     * Note there are regions where the first week of the year is the one that\n     * starts on January 1st, which may offset the week number. Also, if a\n     * different week start is specified, this will also affect the week\n     * number.\n     *\n     * @see ICAL.Time.weekOneStarts\n     * @param {ICAL.Time.weekDay} aWeekStart        The weekday the week starts with\n     * @return {Number}                             The ISO week number\n     */\n    weekNumber: function weekNumber(aWeekStart) {\n      var wnCacheKey = (this.year << 12) + (this.month << 8) + (this.day << 3) + aWeekStart;\n\n      if (wnCacheKey in ICAL.Time._wnCache) {\n        return ICAL.Time._wnCache[wnCacheKey];\n      } // This function courtesty of Julian Bucknall, published under the MIT license\n      // http://www.boyet.com/articles/publishedarticles/calculatingtheisoweeknumb.html\n      // plus some fixes to be able to use different week starts.\n\n\n      var week1;\n      var dt = this.clone();\n      dt.isDate = true;\n      var isoyear = this.year;\n\n      if (dt.month == 12 && dt.day > 25) {\n        week1 = ICAL.Time.weekOneStarts(isoyear + 1, aWeekStart);\n\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n        } else {\n          isoyear++;\n        }\n      } else {\n        week1 = ICAL.Time.weekOneStarts(isoyear, aWeekStart);\n\n        if (dt.compare(week1) < 0) {\n          week1 = ICAL.Time.weekOneStarts(--isoyear, aWeekStart);\n        }\n      }\n\n      var daysBetween = dt.subtractDate(week1).toSeconds() / 86400;\n      var answer = ICAL.helpers.trunc(daysBetween / 7) + 1;\n      ICAL.Time._wnCache[wnCacheKey] = answer;\n      return answer;\n    },\n\n    /**\n     * Adds the duration to the current time. The instance is modified in\n     * place.\n     *\n     * @param {ICAL.Duration} aDuration         The duration to add\n     */\n    addDuration: function icaltime_add(aDuration) {\n      var mult = aDuration.isNegative ? -1 : 1; // because of the duration optimizations it is much\n      // more efficient to grab all the values up front\n      // then set them directly (which will avoid a normalization call).\n      // So we don't actually normalize until we need it.\n\n      var second = this.second;\n      var minute = this.minute;\n      var hour = this.hour;\n      var day = this.day;\n      second += mult * aDuration.seconds;\n      minute += mult * aDuration.minutes;\n      hour += mult * aDuration.hours;\n      day += mult * aDuration.days;\n      day += mult * 7 * aDuration.weeks;\n      this.second = second;\n      this.minute = minute;\n      this.hour = hour;\n      this.day = day;\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Subtract the date details (_excluding_ timezone).  Useful for finding\n     * the relative difference between two time objects excluding their\n     * timezone differences.\n     *\n     * @param {ICAL.Time} aDate     The date to substract\n     * @return {ICAL.Duration}      The difference as a duration\n     */\n    subtractDate: function icaltime_subtract(aDate) {\n      var unixTime = this.toUnixTime() + this.utcOffset();\n      var other = aDate.toUnixTime() + aDate.utcOffset();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Subtract the date details, taking timezones into account.\n     *\n     * @param {ICAL.Time} aDate  The date to subtract\n     * @return {ICAL.Duration}  The difference in duration\n     */\n    subtractDateTz: function icaltime_subtract_abs(aDate) {\n      var unixTime = this.toUnixTime();\n      var other = aDate.toUnixTime();\n      return ICAL.Duration.fromSeconds(unixTime - other);\n    },\n\n    /**\n     * Compares the ICAL.Time instance with another one.\n     *\n     * @param {ICAL.Duration} aOther        The instance to compare with\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compare: function icaltime_compare(other) {\n      var a = this.toUnixTime();\n      var b = other.toUnixTime();\n      if (a > b) return 1;\n      if (b > a) return -1;\n      return 0;\n    },\n\n    /**\n     * Compares only the date part of this instance with another one.\n     *\n     * @param {ICAL.Duration} other         The instance to compare with\n     * @param {ICAL.Timezone} tz            The timezone to compare in\n     * @return {Number}                     -1, 0 or 1 for less/equal/greater\n     */\n    compareDateOnlyTz: function icaltime_compareDateOnlyTz(other, tz) {\n      function cmp(attr) {\n        return ICAL.Time._cmp_attr(a, b, attr);\n      }\n\n      var a = this.convertToZone(tz);\n      var b = other.convertToZone(tz);\n      var rc = 0;\n      if ((rc = cmp(\"year\")) != 0) return rc;\n      if ((rc = cmp(\"month\")) != 0) return rc;\n      if ((rc = cmp(\"day\")) != 0) return rc;\n      return rc;\n    },\n\n    /**\n     * Convert the instance into another timzone. The returned ICAL.Time\n     * instance is always a copy.\n     *\n     * @param {ICAL.Timezone} zone      The zone to convert to\n     * @return {ICAL.Time}              The copy, converted to the zone\n     */\n    convertToZone: function convertToZone(zone) {\n      var copy = this.clone();\n      var zone_equals = this.zone.tzid == zone.tzid;\n\n      if (!this.isDate && !zone_equals) {\n        ICAL.Timezone.convert_time(copy, this.zone, zone);\n      }\n\n      copy.zone = zone;\n      return copy;\n    },\n\n    /**\n     * Calculates the UTC offset of the current date/time in the timezone it is\n     * in.\n     *\n     * @return {Number}     UTC offset in seconds\n     */\n    utcOffset: function utc_offset() {\n      if (this.zone == ICAL.Timezone.localTimezone || this.zone == ICAL.Timezone.utcTimezone) {\n        return 0;\n      } else {\n        return this.zone.utcOffset(this);\n      }\n    },\n\n    /**\n     * Returns an RFC 5545 compliant ical representation of this object.\n     *\n     * @return {String} ical date/date-time\n     */\n    toICALString: function toICALString() {\n      var string = this.toString();\n\n      if (string.length > 10) {\n        return ICAL.design.icalendar.value['date-time'].toICAL(string);\n      } else {\n        return ICAL.design.icalendar.value.date.toICAL(string);\n      }\n    },\n\n    /**\n     * The string representation of this date/time, in jCal form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var result = this.year + '-' + ICAL.helpers.pad2(this.month) + '-' + ICAL.helpers.pad2(this.day);\n\n      if (!this.isDate) {\n        result += 'T' + ICAL.helpers.pad2(this.hour) + ':' + ICAL.helpers.pad2(this.minute) + ':' + ICAL.helpers.pad2(this.second);\n\n        if (this.zone === ICAL.Timezone.utcTimezone) {\n          result += 'Z';\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Converts the current instance to a Javascript date\n     * @return {Date}\n     */\n    toJSDate: function toJSDate() {\n      if (this.zone == ICAL.Timezone.localTimezone) {\n        if (this.isDate) {\n          return new Date(this.year, this.month - 1, this.day);\n        } else {\n          return new Date(this.year, this.month - 1, this.day, this.hour, this.minute, this.second, 0);\n        }\n      } else {\n        return new Date(this.toUnixTime() * 1000);\n      }\n    },\n    _normalize: function icaltime_normalize() {\n      var isDate = this._time.isDate;\n\n      if (this._time.isDate) {\n        this._time.hour = 0;\n        this._time.minute = 0;\n        this._time.second = 0;\n      }\n\n      this.adjust(0, 0, 0, 0);\n      return this;\n    },\n\n    /**\n     * Adjust the date/time by the given offset\n     *\n     * @param {Number} aExtraDays       The extra amount of days\n     * @param {Number} aExtraHours      The extra amount of hours\n     * @param {Number} aExtraMinutes    The extra amount of minutes\n     * @param {Number} aExtraSeconds    The extra amount of seconds\n     * @param {Number=} aTime           The time to adjust, defaults to the\n     *                                    current instance.\n     */\n    adjust: function icaltime_adjust(aExtraDays, aExtraHours, aExtraMinutes, aExtraSeconds, aTime) {\n      var minutesOverflow,\n          hoursOverflow,\n          daysOverflow = 0,\n          yearsOverflow = 0;\n      var second, minute, hour, day;\n      var daysInMonth;\n      var time = aTime || this._time;\n\n      if (!time.isDate) {\n        second = time.second + aExtraSeconds;\n        time.second = second % 60;\n        minutesOverflow = ICAL.helpers.trunc(second / 60);\n\n        if (time.second < 0) {\n          time.second += 60;\n          minutesOverflow--;\n        }\n\n        minute = time.minute + aExtraMinutes + minutesOverflow;\n        time.minute = minute % 60;\n        hoursOverflow = ICAL.helpers.trunc(minute / 60);\n\n        if (time.minute < 0) {\n          time.minute += 60;\n          hoursOverflow--;\n        }\n\n        hour = time.hour + aExtraHours + hoursOverflow;\n        time.hour = hour % 24;\n        daysOverflow = ICAL.helpers.trunc(hour / 24);\n\n        if (time.hour < 0) {\n          time.hour += 24;\n          daysOverflow--;\n        }\n      } // Adjust month and year first, because we need to know what month the day\n      // is in before adjusting it.\n\n\n      if (time.month > 12) {\n        yearsOverflow = ICAL.helpers.trunc((time.month - 1) / 12);\n      } else if (time.month < 1) {\n        yearsOverflow = ICAL.helpers.trunc(time.month / 12) - 1;\n      }\n\n      time.year += yearsOverflow;\n      time.month -= 12 * yearsOverflow; // Now take care of the days (and adjust month if needed)\n\n      day = time.day + aExtraDays + daysOverflow;\n\n      if (day > 0) {\n        for (;;) {\n          daysInMonth = ICAL.Time.daysInMonth(time.month, time.year);\n\n          if (day <= daysInMonth) {\n            break;\n          }\n\n          time.month++;\n\n          if (time.month > 12) {\n            time.year++;\n            time.month = 1;\n          }\n\n          day -= daysInMonth;\n        }\n      } else {\n        while (day <= 0) {\n          if (time.month == 1) {\n            time.year--;\n            time.month = 12;\n          } else {\n            time.month--;\n          }\n\n          day += ICAL.Time.daysInMonth(time.month, time.year);\n        }\n      }\n\n      time.day = day;\n      this._cachedUnixTime = null;\n      return this;\n    },\n\n    /**\n     * Sets up the current instance from unix time, the number of seconds since\n     * January 1st, 1970.\n     *\n     * @param {Number} seconds      The seconds to set up with\n     */\n    fromUnixTime: function fromUnixTime(seconds) {\n      this.zone = ICAL.Timezone.utcTimezone;\n      var epoch = ICAL.Time.epochTime.clone();\n      epoch.adjust(0, 0, 0, seconds);\n      this.year = epoch.year;\n      this.month = epoch.month;\n      this.day = epoch.day;\n      this.hour = epoch.hour;\n      this.minute = epoch.minute;\n      this.second = Math.floor(epoch.second);\n      this._cachedUnixTime = null;\n    },\n\n    /**\n     * Converts the current instance to seconds since January 1st 1970.\n     *\n     * @return {Number}         Seconds since 1970\n     */\n    toUnixTime: function toUnixTime() {\n      if (this._cachedUnixTime !== null) {\n        return this._cachedUnixTime;\n      }\n\n      var offset = this.utcOffset(); // we use the offset trick to ensure\n      // that we are getting the actual UTC time\n\n      var ms = Date.UTC(this.year, this.month - 1, this.day, this.hour, this.minute, this.second - offset); // seconds\n\n      this._cachedUnixTime = ms / 1000;\n      return this._cachedUnixTime;\n    },\n\n    /**\n     * Converts time to into Object which can be serialized then re-created\n     * using the constructor.\n     *\n     * @example\n     * // toJSON will automatically be called\n     * var json = JSON.stringify(mytime);\n     *\n     * var deserialized = JSON.parse(json);\n     *\n     * var time = new ICAL.Time(deserialized);\n     *\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var copy = ['year', 'month', 'day', 'hour', 'minute', 'second', 'isDate'];\n      var result = Object.create(null);\n      var i = 0;\n      var len = copy.length;\n      var prop;\n\n      for (; i < len; i++) {\n        prop = copy[i];\n        result[prop] = this[prop];\n      }\n\n      if (this.zone) {\n        result.timezone = this.zone.tzid;\n      }\n\n      return result;\n    }\n  };\n\n  (function setupNormalizeAttributes() {\n    // This needs to run before any instances are created!\n    function defineAttr(attr) {\n      Object.defineProperty(ICAL.Time.prototype, attr, {\n        get: function getTimeAttr() {\n          if (this._pendingNormalization) {\n            this._normalize();\n\n            this._pendingNormalization = false;\n          }\n\n          return this._time[attr];\n        },\n        set: function setTimeAttr(val) {\n          this._cachedUnixTime = null;\n          this._pendingNormalization = true;\n          this._time[attr] = val;\n          return val;\n        }\n      });\n    }\n    /* istanbul ignore else */\n\n\n    if (\"defineProperty\" in Object) {\n      defineAttr(\"year\");\n      defineAttr(\"month\");\n      defineAttr(\"day\");\n      defineAttr(\"hour\");\n      defineAttr(\"minute\");\n      defineAttr(\"second\");\n      defineAttr(\"isDate\");\n    }\n  })();\n  /**\n   * Returns the days in the given month\n   *\n   * @param {Number} month      The month to check\n   * @param {Number} year       The year to check\n   * @return {Number}           The number of days in the month\n   */\n\n\n  ICAL.Time.daysInMonth = function icaltime_daysInMonth(month, year) {\n    var _daysInMonth = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    var days = 30;\n    if (month < 1 || month > 12) return days;\n    days = _daysInMonth[month];\n\n    if (month == 2) {\n      days += ICAL.Time.isLeapYear(year);\n    }\n\n    return days;\n  };\n  /**\n   * Checks if the year is a leap year\n   *\n   * @param {Number} year       The year to check\n   * @return {Boolean}          True, if the year is a leap year\n   */\n\n\n  ICAL.Time.isLeapYear = function isLeapYear(year) {\n    if (year <= 1752) {\n      return year % 4 == 0;\n    } else {\n      return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n    }\n  };\n  /**\n   * Create a new ICAL.Time from the day of year and year. The date is returned\n   * in floating timezone.\n   *\n   * @param {Number} aDayOfYear     The day of year\n   * @param {Number} aYear          The year to create the instance in\n   * @return {ICAL.Time}            The created instance with the calculated date\n   */\n\n\n  ICAL.Time.fromDayOfYear = function icaltime_fromDayOfYear(aDayOfYear, aYear) {\n    var year = aYear;\n    var doy = aDayOfYear;\n    var tt = new ICAL.Time();\n    tt.auto_normalize = false;\n    var is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0;\n\n    if (doy < 1) {\n      year--;\n      is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0;\n      doy += ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      return ICAL.Time.fromDayOfYear(doy, year);\n    } else if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][12]) {\n      is_leap = ICAL.Time.isLeapYear(year) ? 1 : 0;\n      doy -= ICAL.Time.daysInYearPassedMonth[is_leap][12];\n      year++;\n      return ICAL.Time.fromDayOfYear(doy, year);\n    }\n\n    tt.year = year;\n    tt.isDate = true;\n\n    for (var month = 11; month >= 0; month--) {\n      if (doy > ICAL.Time.daysInYearPassedMonth[is_leap][month]) {\n        tt.month = month + 1;\n        tt.day = doy - ICAL.Time.daysInYearPassedMonth[is_leap][month];\n        break;\n      }\n    }\n\n    tt.auto_normalize = true;\n    return tt;\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @deprecated                Use {@link ICAL.Time.fromDateString} instead\n   * @param {String} str        The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n\n\n  ICAL.Time.fromStringv2 = function fromString(str) {\n    return new ICAL.Time({\n      year: parseInt(str.substr(0, 4), 10),\n      month: parseInt(str.substr(5, 2), 10),\n      day: parseInt(str.substr(8, 2), 10),\n      isDate: true\n    });\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date string, e.g 2015-01-02.\n   *\n   * @param {String} aValue     The string to create from\n   * @return {ICAL.Time}        The date/time instance\n   */\n\n\n  ICAL.Time.fromDateString = function (aValue) {\n    // Dates should have no timezone.\n    // Google likes to sometimes specify Z on dates\n    // we specifically ignore that to avoid issues.\n    // YYYY-MM-DD\n    // 2012-10-10\n    return new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      isDate: true\n    });\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date-time string, e.g\n   * 2015-01-02T03:04:05. If a property is specified, the timezone is set up\n   * from the property's TZID parameter.\n   *\n   * @param {String} aValue         The string to create from\n   * @param {ICAL.Property=} prop   The property the date belongs to\n   * @return {ICAL.Time}            The date/time instance\n   */\n\n\n  ICAL.Time.fromDateTimeString = function (aValue, prop) {\n    if (aValue.length < 19) {\n      throw new Error('invalid date-time value: \"' + aValue + '\"');\n    }\n\n    var zone;\n\n    if (aValue[19] && aValue[19] === 'Z') {\n      zone = 'Z';\n    } else if (prop) {\n      zone = prop.getParameter('tzid');\n    } // 2012-10-10T10:10:10(Z)?\n\n\n    var time = new ICAL.Time({\n      year: ICAL.helpers.strictParseInt(aValue.substr(0, 4)),\n      month: ICAL.helpers.strictParseInt(aValue.substr(5, 2)),\n      day: ICAL.helpers.strictParseInt(aValue.substr(8, 2)),\n      hour: ICAL.helpers.strictParseInt(aValue.substr(11, 2)),\n      minute: ICAL.helpers.strictParseInt(aValue.substr(14, 2)),\n      second: ICAL.helpers.strictParseInt(aValue.substr(17, 2)),\n      timezone: zone\n    });\n    return time;\n  };\n  /**\n   * Returns a new ICAL.Time instance from a date or date-time string,\n   *\n   * @param {String} aValue         The string to create from\n   * @return {ICAL.Time}            The date/time instance\n   */\n\n\n  ICAL.Time.fromString = function fromString(aValue) {\n    if (aValue.length > 10) {\n      return ICAL.Time.fromDateTimeString(aValue);\n    } else {\n      return ICAL.Time.fromDateString(aValue);\n    }\n  };\n  /**\n   * Creates a new ICAL.Time instance from the given Javascript Date.\n   *\n   * @param {?Date} aDate     The Javascript Date to read, or null to reset\n   * @param {Boolean} useUTC  If true, the UTC values of the date will be used\n   */\n\n\n  ICAL.Time.fromJSDate = function fromJSDate(aDate, useUTC) {\n    var tt = new ICAL.Time();\n    return tt.fromJSDate(aDate, useUTC);\n  };\n  /**\n   * Creates a new ICAL.Time instance from the the passed data object.\n   *\n   * @param {Object} aData            Time initialization\n   * @param {Number=} aData.year      The year for this date\n   * @param {Number=} aData.month     The month for this date\n   * @param {Number=} aData.day       The day for this date\n   * @param {Number=} aData.hour      The hour for this date\n   * @param {Number=} aData.minute    The minute for this date\n   * @param {Number=} aData.second    The second for this date\n   * @param {Boolean=} aData.isDate   If true, the instance represents a date\n   *                                    (as opposed to a date-time)\n   * @param {ICAL.Timezone=} aZone    Timezone this position occurs in\n   */\n\n\n  ICAL.Time.fromData = function fromData(aData, aZone) {\n    var t = new ICAL.Time();\n    return t.fromData(aData, aZone);\n  };\n  /**\n   * Creates a new ICAL.Time instance from the current moment.\n   * @return {ICAL.Time}\n   */\n\n\n  ICAL.Time.now = function icaltime_now() {\n    return ICAL.Time.fromJSDate(new Date(), false);\n  };\n  /**\n   * Returns the date on which ISO week number 1 starts.\n   *\n   * @see ICAL.Time#weekNumber\n   * @param {Number} aYear                  The year to search in\n   * @param {ICAL.Time.weekDay=} aWeekStart The week start weekday, used for calculation.\n   * @return {ICAL.Time}                    The date on which week number 1 starts\n   */\n\n\n  ICAL.Time.weekOneStarts = function weekOneStarts(aYear, aWeekStart) {\n    var t = ICAL.Time.fromData({\n      year: aYear,\n      month: 1,\n      day: 1,\n      isDate: true\n    });\n    var dow = t.dayOfWeek();\n    var wkst = aWeekStart || ICAL.Time.DEFAULT_WEEK_START;\n\n    if (dow > ICAL.Time.THURSDAY) {\n      t.day += 7;\n    }\n\n    if (wkst > ICAL.Time.THURSDAY) {\n      t.day -= 7;\n    }\n\n    t.day -= dow - wkst;\n    return t;\n  };\n  /**\n   * Get the dominical letter for the given year. Letters range from A - G for\n   * common years, and AG to GF for leap years.\n   *\n   * @param {Number} yr           The year to retrieve the letter for\n   * @return {String}             The dominical letter.\n   */\n\n\n  ICAL.Time.getDominicalLetter = function (yr) {\n    var LTRS = \"GFEDCBA\";\n    var dom = (yr + (yr / 4 | 0) + (yr / 400 | 0) - (yr / 100 | 0) - 1) % 7;\n    var isLeap = ICAL.Time.isLeapYear(yr);\n\n    if (isLeap) {\n      return LTRS[(dom + 6) % 7] + LTRS[dom];\n    } else {\n      return LTRS[dom];\n    }\n  };\n  /**\n   * January 1st, 1970 as an ICAL.Time.\n   * @type {ICAL.Time}\n   * @constant\n   * @instance\n   */\n\n\n  ICAL.Time.epochTime = ICAL.Time.fromData({\n    year: 1970,\n    month: 1,\n    day: 1,\n    hour: 0,\n    minute: 0,\n    second: 0,\n    isDate: false,\n    timezone: \"Z\"\n  });\n\n  ICAL.Time._cmp_attr = function _cmp_attr(a, b, attr) {\n    if (a[attr] > b[attr]) return 1;\n    if (a[attr] < b[attr]) return -1;\n    return 0;\n  };\n  /**\n   * The days that have passed in the year after a given month. The array has\n   * two members, one being an array of passed days for non-leap years, the\n   * other analog for leap years.\n   * @example\n   * var isLeapYear = ICAL.Time.isLeapYear(year);\n   * var passedDays = ICAL.Time.daysInYearPassedMonth[isLeapYear][month];\n   * @type {Array.<Array.<Number>>}\n   */\n\n\n  ICAL.Time.daysInYearPassedMonth = [[0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365], [0, 31, 60, 91, 121, 152, 182, 213, 244, 274, 305, 335, 366]];\n  /**\n   * The weekday, 1 = SUNDAY, 7 = SATURDAY. Access via\n   * ICAL.Time.MONDAY, ICAL.Time.TUESDAY, ...\n   *\n   * @typedef {Number} weekDay\n   * @memberof ICAL.Time\n   */\n\n  ICAL.Time.SUNDAY = 1;\n  ICAL.Time.MONDAY = 2;\n  ICAL.Time.TUESDAY = 3;\n  ICAL.Time.WEDNESDAY = 4;\n  ICAL.Time.THURSDAY = 5;\n  ICAL.Time.FRIDAY = 6;\n  ICAL.Time.SATURDAY = 7;\n  /**\n   * The default weekday for the WKST part.\n   * @constant\n   * @default ICAL.Time.MONDAY\n   */\n\n  ICAL.Time.DEFAULT_WEEK_START = ICAL.Time.MONDAY;\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2015 */\n\n\n(function () {\n  /**\n   * Describes a vCard time, which has slight differences to the ICAL.Time.\n   * Properties can be null if not specified, for example for dates with\n   * reduced accuracy or truncation.\n   *\n   * Note that currently not all methods are correctly re-implemented for\n   * VCardTime. For example, comparison will have undefined results when some\n   * members are null.\n   *\n   * Also, normalization is not yet implemented for this class!\n   *\n   * @alias ICAL.VCardTime\n   * @class\n   * @extends {ICAL.Time}\n   * @param {Object} data                           The data for the time instance\n   * @param {Number=} data.year                     The year for this date\n   * @param {Number=} data.month                    The month for this date\n   * @param {Number=} data.day                      The day for this date\n   * @param {Number=} data.hour                     The hour for this date\n   * @param {Number=} data.minute                   The minute for this date\n   * @param {Number=} data.second                   The second for this date\n   * @param {ICAL.Timezone|ICAL.UtcOffset} zone     The timezone to use\n   * @param {String} icaltype                       The type for this date/time object\n   */\n  ICAL.VCardTime = function (data, zone, icaltype) {\n    this.wrappedJSObject = this;\n    var time = this._time = Object.create(null);\n    time.year = null;\n    time.month = null;\n    time.day = null;\n    time.hour = null;\n    time.minute = null;\n    time.second = null;\n    this.icaltype = icaltype || \"date-and-or-time\";\n    this.fromData(data, zone);\n  };\n\n  ICAL.helpers.inherits(ICAL.Time, ICAL.VCardTime,\n  /** @lends ICAL.VCardTime */\n  {\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"vcardtime\"\n     */\n    icalclass: \"vcardtime\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @type {String}\n     * @default \"date-and-or-time\"\n     */\n    icaltype: \"date-and-or-time\",\n\n    /**\n     * The timezone. This can either be floating, UTC, or an instance of\n     * ICAL.UtcOffset.\n     * @type {ICAL.Timezone|ICAL.UtcOFfset}\n     */\n    zone: null,\n\n    /**\n     * Returns a clone of the vcard date/time object.\n     *\n     * @return {ICAL.VCardTime}     The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.VCardTime(this._time, this.zone, this.icaltype);\n    },\n    _normalize: function _normalize() {\n      return this;\n    },\n\n    /**\n     * @inheritdoc\n     */\n    utcOffset: function utcOffset() {\n      if (this.zone instanceof ICAL.UtcOffset) {\n        return this.zone.toSeconds();\n      } else {\n        return ICAL.Time.prototype.utcOffset.apply(this, arguments);\n      }\n    },\n\n    /**\n     * Returns an RFC 6350 compliant representation of this object.\n     *\n     * @return {String}         vcard date/time string\n     */\n    toICALString: function toICALString() {\n      return ICAL.design.vcard.value[this.icaltype].toICAL(this.toString());\n    },\n\n    /**\n     * The string representation of this date/time, in jCard form\n     * (including : and - separators).\n     * @return {String}\n     */\n    toString: function toString() {\n      var p2 = ICAL.helpers.pad2;\n      var y = this.year,\n          m = this.month,\n          d = this.day;\n      var h = this.hour,\n          mm = this.minute,\n          s = this.second;\n      var hasYear = y !== null,\n          hasMonth = m !== null,\n          hasDay = d !== null;\n      var hasHour = h !== null,\n          hasMinute = mm !== null,\n          hasSecond = s !== null;\n      var datepart = (hasYear ? p2(y) + (hasMonth || hasDay ? '-' : '') : hasMonth || hasDay ? '--' : '') + (hasMonth ? p2(m) : '') + (hasDay ? '-' + p2(d) : '');\n      var timepart = (hasHour ? p2(h) : '-') + (hasHour && hasMinute ? ':' : '') + (hasMinute ? p2(mm) : '') + (!hasHour && !hasMinute ? '-' : '') + (hasMinute && hasSecond ? ':' : '') + (hasSecond ? p2(s) : '');\n      var zone;\n\n      if (this.zone === ICAL.Timezone.utcTimezone) {\n        zone = 'Z';\n      } else if (this.zone instanceof ICAL.UtcOffset) {\n        zone = this.zone.toString();\n      } else if (this.zone === ICAL.Timezone.localTimezone) {\n        zone = '';\n      } else if (this.zone instanceof ICAL.Timezone) {\n        var offset = ICAL.UtcOffset.fromSeconds(this.zone.utcOffset(this));\n        zone = offset.toString();\n      } else {\n        zone = '';\n      }\n\n      switch (this.icaltype) {\n        case \"time\":\n          return timepart + zone;\n\n        case \"date-and-or-time\":\n        case \"date-time\":\n          return datepart + (timepart == '--' ? '' : 'T' + timepart + zone);\n\n        case \"date\":\n          return datepart;\n      }\n\n      return null;\n    }\n  });\n  /**\n   * Returns a new ICAL.VCardTime instance from a date and/or time string.\n   *\n   * @param {String} aValue     The string to create from\n   * @param {String} aIcalType  The type for this instance, e.g. date-and-or-time\n   * @return {ICAL.VCardTime}   The date/time instance\n   */\n\n  ICAL.VCardTime.fromDateAndOrTimeString = function (aValue, aIcalType) {\n    function part(v, s, e) {\n      return v ? ICAL.helpers.strictParseInt(v.substr(s, e)) : null;\n    }\n\n    var parts = aValue.split('T');\n    var dt = parts[0],\n        tmz = parts[1];\n    var splitzone = tmz ? ICAL.design.vcard.value.time._splitZone(tmz) : [];\n    var zone = splitzone[0],\n        tm = splitzone[1];\n    var stoi = ICAL.helpers.strictParseInt;\n    var dtlen = dt ? dt.length : 0;\n    var tmlen = tm ? tm.length : 0;\n    var hasDashDate = dt && dt[0] == '-' && dt[1] == '-';\n    var hasDashTime = tm && tm[0] == '-';\n    var o = {\n      year: hasDashDate ? null : part(dt, 0, 4),\n      month: hasDashDate && (dtlen == 4 || dtlen == 7) ? part(dt, 2, 2) : dtlen == 7 ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 5, 2) : null,\n      day: dtlen == 5 ? part(dt, 3, 2) : dtlen == 7 && hasDashDate ? part(dt, 5, 2) : dtlen == 10 ? part(dt, 8, 2) : null,\n      hour: hasDashTime ? null : part(tm, 0, 2),\n      minute: hasDashTime && tmlen == 3 ? part(tm, 1, 2) : tmlen > 4 ? hasDashTime ? part(tm, 1, 2) : part(tm, 3, 2) : null,\n      second: tmlen == 4 ? part(tm, 2, 2) : tmlen == 6 ? part(tm, 4, 2) : tmlen == 8 ? part(tm, 6, 2) : null\n    };\n\n    if (zone == 'Z') {\n      zone = ICAL.Timezone.utcTimezone;\n    } else if (zone && zone[3] == ':') {\n      zone = ICAL.UtcOffset.fromString(zone);\n    } else {\n      zone = null;\n    }\n\n    return new ICAL.VCardTime(o, zone, aIcalType);\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n\n(function () {\n  var DOW_MAP = {\n    SU: ICAL.Time.SUNDAY,\n    MO: ICAL.Time.MONDAY,\n    TU: ICAL.Time.TUESDAY,\n    WE: ICAL.Time.WEDNESDAY,\n    TH: ICAL.Time.THURSDAY,\n    FR: ICAL.Time.FRIDAY,\n    SA: ICAL.Time.SATURDAY\n  };\n  var REVERSE_DOW_MAP = {};\n\n  for (var key in DOW_MAP) {\n    /* istanbul ignore else */\n    if (DOW_MAP.hasOwnProperty(key)) {\n      REVERSE_DOW_MAP[DOW_MAP[key]] = key;\n    }\n  }\n\n  var COPY_PARTS = [\"BYSECOND\", \"BYMINUTE\", \"BYHOUR\", \"BYDAY\", \"BYMONTHDAY\", \"BYYEARDAY\", \"BYWEEKNO\", \"BYMONTH\", \"BYSETPOS\"];\n  /**\n   * @classdesc\n   * This class represents the \"recur\" value type, with various calculation\n   * and manipulation methods.\n   *\n   * @class\n   * @alias ICAL.Recur\n   * @param {Object} data                       An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues} freq   The frequency value\n   * @param {Number=} data.interval             The INTERVAL value\n   * @param {ICAL.Time.weekDay=} data.wkst      The week start value\n   * @param {ICAL.Time=} data.until             The end of the recurrence set\n   * @param {Number=} data.count                The number of occurrences\n   * @param {Array.<Number>=} data.bysecond     The seconds for the BYSECOND part\n   * @param {Array.<Number>=} data.byminute     The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} data.byhour       The hours for the BYHOUR part\n   * @param {Array.<String>=} data.byday        The BYDAY values\n   * @param {Array.<Number>=} data.bymonthday   The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} data.byyearday    The days for the BYYEARDAY part\n   * @param {Array.<Number>=} data.byweekno     The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} data.bymonth      The month for the BYMONTH part\n   * @param {Array.<Number>=} data.bysetpos     The positionals for the BYSETPOS part\n   */\n\n  ICAL.Recur = function icalrecur(data) {\n    this.wrappedJSObject = this;\n    this.parts = {};\n\n    if (data && typeof data === 'object') {\n      this.fromData(data);\n    }\n  };\n\n  ICAL.Recur.prototype = {\n    /**\n     * An object holding the BY-parts of the recurrence rule\n     * @type {Object}\n     */\n    parts: null,\n\n    /**\n     * The interval value for the recurrence rule.\n     * @type {Number}\n     */\n    interval: 1,\n\n    /**\n     * The week start day\n     *\n     * @type {ICAL.Time.weekDay}\n     * @default ICAL.Time.MONDAY\n     */\n    wkst: ICAL.Time.MONDAY,\n\n    /**\n     * The end of the recurrence\n     * @type {?ICAL.Time}\n     */\n    until: null,\n\n    /**\n     * The maximum number of occurrences\n     * @type {?Number}\n     */\n    count: null,\n\n    /**\n     * The frequency value.\n     * @type {ICAL.Recur.frequencyValues}\n     */\n    freq: null,\n\n    /**\n     * The class identifier.\n     * @constant\n     * @type {String}\n     * @default \"icalrecur\"\n     */\n    icalclass: \"icalrecur\",\n\n    /**\n     * The type name, to be used in the jCal object.\n     * @constant\n     * @type {String}\n     * @default \"recur\"\n     */\n    icaltype: \"recur\",\n\n    /**\n     * Create a new iterator for this recurrence rule. The passed start date\n     * must be the start date of the event, not the start of the range to\n     * search in.\n     *\n     * @example\n     * var recur = comp.getFirstPropertyValue('rrule');\n     * var dtstart = comp.getFirstPropertyValue('dtstart');\n     * var iter = recur.iterator(dtstart);\n     * for (var next = iter.next(); next; next = iter.next()) {\n     *   if (next.compare(rangeStart) < 0) {\n     *     continue;\n     *   }\n     *   console.log(next.toString());\n     * }\n     *\n     * @param {ICAL.Time} aStart        The item's start date\n     * @return {ICAL.RecurIterator}     The recurrence iterator\n     */\n    iterator: function iterator(aStart) {\n      return new ICAL.RecurIterator({\n        rule: this,\n        dtstart: aStart\n      });\n    },\n\n    /**\n     * Returns a clone of the recurrence object.\n     *\n     * @return {ICAL.Recur}      The cloned object\n     */\n    clone: function clone() {\n      return new ICAL.Recur(this.toJSON());\n    },\n\n    /**\n     * Checks if the current rule is finite, i.e. has a count or until part.\n     *\n     * @return {Boolean}        True, if the rule is finite\n     */\n    isFinite: function isfinite() {\n      return !!(this.count || this.until);\n    },\n\n    /**\n     * Checks if the current rule has a count part, and not limited by an until\n     * part.\n     *\n     * @return {Boolean}        True, if the rule is by count\n     */\n    isByCount: function isbycount() {\n      return !!(this.count && !this.until);\n    },\n\n    /**\n     * Adds a component (part) to the recurrence rule. This is not a component\n     * in the sense of {@link ICAL.Component}, but a part of the recurrence\n     * rule, i.e. BYMONTH.\n     *\n     * @param {String} aType            The name of the component part\n     * @param {Array|String} aValue     The component value\n     */\n    addComponent: function addPart(aType, aValue) {\n      var ucname = aType.toUpperCase();\n\n      if (ucname in this.parts) {\n        this.parts[ucname].push(aValue);\n      } else {\n        this.parts[ucname] = [aValue];\n      }\n    },\n\n    /**\n     * Sets the component value for the given by-part.\n     *\n     * @param {String} aType        The component part name\n     * @param {Array} aValues       The component values\n     */\n    setComponent: function setComponent(aType, aValues) {\n      this.parts[aType.toUpperCase()] = aValues.slice();\n    },\n\n    /**\n     * Gets (a copy) of the requested component value.\n     *\n     * @param {String} aType        The component part name\n     * @return {Array}              The component part value\n     */\n    getComponent: function getComponent(aType) {\n      var ucname = aType.toUpperCase();\n      return ucname in this.parts ? this.parts[ucname].slice() : [];\n    },\n\n    /**\n     * Retrieves the next occurrence after the given recurrence id. See the\n     * guide on {@tutorial terminology} for more details.\n     *\n     * NOTE: Currently, this method iterates all occurrences from the start\n     * date. It should not be called in a loop for performance reasons. If you\n     * would like to get more than one occurrence, you can iterate the\n     * occurrences manually, see the example on the\n     * {@link ICAL.Recur#iterator iterator} method.\n     *\n     * @param {ICAL.Time} aStartTime        The start of the event series\n     * @param {ICAL.Time} aRecurrenceId     The date of the last occurrence\n     * @return {ICAL.Time}                  The next occurrence after\n     */\n    getNextOccurrence: function getNextOccurrence(aStartTime, aRecurrenceId) {\n      var iter = this.iterator(aStartTime);\n      var next, cdt;\n\n      do {\n        next = iter.next();\n      } while (next && next.compare(aRecurrenceId) <= 0);\n\n      if (next && aRecurrenceId.zone) {\n        next.zone = aRecurrenceId.zone;\n      }\n\n      return next;\n    },\n\n    /**\n     * Sets up the current instance using members from the passed data object.\n     *\n     * @param {Object} data                       An object with members of the recurrence\n     * @param {ICAL.Recur.frequencyValues} freq   The frequency value\n     * @param {Number=} data.interval             The INTERVAL value\n     * @param {ICAL.Time.weekDay=} data.wkst      The week start value\n     * @param {ICAL.Time=} data.until             The end of the recurrence set\n     * @param {Number=} data.count                The number of occurrences\n     * @param {Array.<Number>=} data.bysecond     The seconds for the BYSECOND part\n     * @param {Array.<Number>=} data.byminute     The minutes for the BYMINUTE part\n     * @param {Array.<Number>=} data.byhour       The hours for the BYHOUR part\n     * @param {Array.<String>=} data.byday        The BYDAY values\n     * @param {Array.<Number>=} data.bymonthday   The days for the BYMONTHDAY part\n     * @param {Array.<Number>=} data.byyearday    The days for the BYYEARDAY part\n     * @param {Array.<Number>=} data.byweekno     The weeks for the BYWEEKNO part\n     * @param {Array.<Number>=} data.bymonth      The month for the BYMONTH part\n     * @param {Array.<Number>=} data.bysetpos     The positionals for the BYSETPOS part\n     */\n    fromData: function fromData(data) {\n      for (var key in data) {\n        var uckey = key.toUpperCase();\n\n        if (uckey in partDesign) {\n          if (Array.isArray(data[key])) {\n            this.parts[uckey] = data[key];\n          } else {\n            this.parts[uckey] = [data[key]];\n          }\n        } else {\n          this[key] = data[key];\n        }\n      }\n\n      if (this.wkst && typeof this.wkst != \"number\") {\n        this.wkst = ICAL.Recur.icalDayToNumericDay(this.wkst);\n      }\n\n      if (this.until && !(this.until instanceof ICAL.Time)) {\n        this.until = ICAL.Time.fromString(this.until);\n      }\n    },\n\n    /**\n     * The jCal representation of this recurrence type.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var res = Object.create(null);\n      res.freq = this.freq;\n\n      if (this.count) {\n        res.count = this.count;\n      }\n\n      if (this.interval > 1) {\n        res.interval = this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore if */\n        if (!this.parts.hasOwnProperty(k)) {\n          continue;\n        }\n\n        var kparts = this.parts[k];\n\n        if (Array.isArray(kparts) && kparts.length == 1) {\n          res[k.toLowerCase()] = kparts[0];\n        } else {\n          res[k.toLowerCase()] = ICAL.helpers.clone(this.parts[k]);\n        }\n      }\n\n      if (this.until) {\n        res.until = this.until.toString();\n      }\n\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        res.wkst = ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n\n      return res;\n    },\n\n    /**\n     * The string representation of this recurrence rule.\n     * @return {String}\n     */\n    toString: function icalrecur_toString() {\n      // TODO retain order\n      var str = \"FREQ=\" + this.freq;\n\n      if (this.count) {\n        str += \";COUNT=\" + this.count;\n      }\n\n      if (this.interval > 1) {\n        str += \";INTERVAL=\" + this.interval;\n      }\n\n      for (var k in this.parts) {\n        /* istanbul ignore else */\n        if (this.parts.hasOwnProperty(k)) {\n          str += \";\" + k + \"=\" + this.parts[k];\n        }\n      }\n\n      if (this.until) {\n        str += ';UNTIL=' + this.until.toString();\n      }\n\n      if ('wkst' in this && this.wkst !== ICAL.Time.DEFAULT_WEEK_START) {\n        str += ';WKST=' + ICAL.Recur.numericDayToIcalDay(this.wkst);\n      }\n\n      return str;\n    }\n  };\n\n  function parseNumericValue(type, min, max, value) {\n    var result = value;\n\n    if (value[0] === '+') {\n      result = value.substr(1);\n    }\n\n    result = ICAL.helpers.strictParseInt(result);\n\n    if (min !== undefined && value < min) {\n      throw new Error(type + ': invalid value \"' + value + '\" must be > ' + min);\n    }\n\n    if (max !== undefined && value > max) {\n      throw new Error(type + ': invalid value \"' + value + '\" must be < ' + min);\n    }\n\n    return result;\n  }\n  /**\n   * Convert an ical representation of a day (SU, MO, etc..)\n   * into a numeric value of that day.\n   *\n   * @param {String} string     The iCalendar day name\n   * @return {Number}           Numeric value of given day\n   */\n\n\n  ICAL.Recur.icalDayToNumericDay = function toNumericDay(string) {\n    //XXX: this is here so we can deal\n    //     with possibly invalid string values.\n    return DOW_MAP[string];\n  };\n  /**\n   * Convert a numeric day value into its ical representation (SU, MO, etc..)\n   *\n   * @param {Number} num        Numeric value of given day\n   * @return {String}           The ICAL day value, e.g SU,MO,...\n   */\n\n\n  ICAL.Recur.numericDayToIcalDay = function toIcalDay(num) {\n    //XXX: this is here so we can deal with possibly invalid number values.\n    //     Also, this allows consistent mapping between day numbers and day\n    //     names for external users.\n    return REVERSE_DOW_MAP[num];\n  };\n\n  var VALID_DAY_NAMES = /^(SU|MO|TU|WE|TH|FR|SA)$/;\n  var VALID_BYDAY_PART = /^([+-])?(5[0-3]|[1-4][0-9]|[1-9])?(SU|MO|TU|WE|TH|FR|SA)$/;\n  /**\n   * Possible frequency values for the FREQ part\n   * (YEARLY, MONTHLY, WEEKLY, DAILY, HOURLY, MINUTELY, SECONDLY)\n   *\n   * @typedef {String} frequencyValues\n   * @memberof ICAL.Recur\n   */\n\n  var ALLOWED_FREQ = ['SECONDLY', 'MINUTELY', 'HOURLY', 'DAILY', 'WEEKLY', 'MONTHLY', 'YEARLY'];\n  var optionDesign = {\n    FREQ: function FREQ(value, dict, fmtIcal) {\n      // yes this is actually equal or faster then regex.\n      // upside here is we can enumerate the valid values.\n      if (ALLOWED_FREQ.indexOf(value) !== -1) {\n        dict.freq = value;\n      } else {\n        throw new Error('invalid frequency \"' + value + '\" expected: \"' + ALLOWED_FREQ.join(', ') + '\"');\n      }\n    },\n    COUNT: function COUNT(value, dict, fmtIcal) {\n      dict.count = ICAL.helpers.strictParseInt(value);\n    },\n    INTERVAL: function INTERVAL(value, dict, fmtIcal) {\n      dict.interval = ICAL.helpers.strictParseInt(value);\n\n      if (dict.interval < 1) {\n        // 0 or negative values are not allowed, some engines seem to generate\n        // it though. Assume 1 instead.\n        dict.interval = 1;\n      }\n    },\n    UNTIL: function UNTIL(value, dict, fmtIcal) {\n      if (fmtIcal) {\n        if (value.length > 10) {\n          dict.until = ICAL.design.icalendar.value['date-time'].fromICAL(value);\n        } else {\n          dict.until = ICAL.design.icalendar.value.date.fromICAL(value);\n        }\n      } else {\n        dict.until = ICAL.Time.fromString(value);\n      }\n    },\n    WKST: function WKST(value, dict, fmtIcal) {\n      if (VALID_DAY_NAMES.test(value)) {\n        dict.wkst = ICAL.Recur.icalDayToNumericDay(value);\n      } else {\n        throw new Error('invalid WKST value \"' + value + '\"');\n      }\n    }\n  };\n  var partDesign = {\n    BYSECOND: parseNumericValue.bind(this, 'BYSECOND', 0, 60),\n    BYMINUTE: parseNumericValue.bind(this, 'BYMINUTE', 0, 59),\n    BYHOUR: parseNumericValue.bind(this, 'BYHOUR', 0, 23),\n    BYDAY: function BYDAY(value) {\n      if (VALID_BYDAY_PART.test(value)) {\n        return value;\n      } else {\n        throw new Error('invalid BYDAY value \"' + value + '\"');\n      }\n    },\n    BYMONTHDAY: parseNumericValue.bind(this, 'BYMONTHDAY', -31, 31),\n    BYYEARDAY: parseNumericValue.bind(this, 'BYYEARDAY', -366, 366),\n    BYWEEKNO: parseNumericValue.bind(this, 'BYWEEKNO', -53, 53),\n    BYMONTH: parseNumericValue.bind(this, 'BYMONTH', 0, 12),\n    BYSETPOS: parseNumericValue.bind(this, 'BYSETPOS', -366, 366)\n  };\n  /**\n   * Creates a new {@link ICAL.Recur} instance from the passed string.\n   *\n   * @param {String} string         The string to parse\n   * @return {ICAL.Recur}           The created recurrence instance\n   */\n\n  ICAL.Recur.fromString = function (string) {\n    var data = ICAL.Recur._stringToData(string, false);\n\n    return new ICAL.Recur(data);\n  };\n  /**\n   * Creates a new {@link ICAL.Recur} instance using members from the passed\n   * data object.\n   *\n   * @param {Object} aData                      An object with members of the recurrence\n   * @param {ICAL.Recur.frequencyValues} freq   The frequency value\n   * @param {Number=} aData.interval            The INTERVAL value\n   * @param {ICAL.Time.weekDay=} aData.wkst     The week start value\n   * @param {ICAL.Time=} aData.until            The end of the recurrence set\n   * @param {Number=} aData.count               The number of occurrences\n   * @param {Array.<Number>=} aData.bysecond    The seconds for the BYSECOND part\n   * @param {Array.<Number>=} aData.byminute    The minutes for the BYMINUTE part\n   * @param {Array.<Number>=} aData.byhour      The hours for the BYHOUR part\n   * @param {Array.<String>=} aData.byday       The BYDAY values\n   * @param {Array.<Number>=} aData.bymonthday  The days for the BYMONTHDAY part\n   * @param {Array.<Number>=} aData.byyearday   The days for the BYYEARDAY part\n   * @param {Array.<Number>=} aData.byweekno    The weeks for the BYWEEKNO part\n   * @param {Array.<Number>=} aData.bymonth     The month for the BYMONTH part\n   * @param {Array.<Number>=} aData.bysetpos    The positionals for the BYSETPOS part\n   */\n\n\n  ICAL.Recur.fromData = function (aData) {\n    return new ICAL.Recur(aData);\n  };\n  /**\n   * Converts a recurrence string to a data object, suitable for the fromData\n   * method.\n   *\n   * @param {String} string     The string to parse\n   * @param {Boolean} fmtIcal   If true, the string is considered to be an\n   *                              iCalendar string\n   * @return {ICAL.Recur}       The recurrence instance\n   */\n\n\n  ICAL.Recur._stringToData = function (string, fmtIcal) {\n    var dict = Object.create(null); // split is slower in FF but fast enough.\n    // v8 however this is faster then manual split?\n\n    var values = string.split(';');\n    var len = values.length;\n\n    for (var i = 0; i < len; i++) {\n      var parts = values[i].split('=');\n      var ucname = parts[0].toUpperCase();\n      var lcname = parts[0].toLowerCase();\n      var name = fmtIcal ? lcname : ucname;\n      var value = parts[1];\n\n      if (ucname in partDesign) {\n        var partArr = value.split(',');\n        var partArrIdx = 0;\n        var partArrLen = partArr.length;\n\n        for (; partArrIdx < partArrLen; partArrIdx++) {\n          partArr[partArrIdx] = partDesign[ucname](partArr[partArrIdx]);\n        }\n\n        dict[name] = partArr.length == 1 ? partArr[0] : partArr;\n      } else if (ucname in optionDesign) {\n        optionDesign[ucname](value, dict, fmtIcal);\n      } else {\n        // Don't swallow unknown values. Just set them as they are.\n        dict[lcname] = value;\n      }\n    }\n\n    return dict;\n  };\n})();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.RecurIterator = function () {\n  /**\n   * @classdesc\n   * An iterator for a single recurrence rule. This class usually doesn't have\n   * to be instanciated directly, the convenience method\n   * {@link ICAL.Recur#iterator} can be used.\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration from a previous run\n   *\n   * @description\n   * The options object may contain additional members when resuming iteration\n   * from a previous run.\n   *\n   * @class\n   * @alias ICAL.RecurIterator\n   * @param {Object} options                The iterator options\n   * @param {ICAL.Recur} options.rule       The rule to iterate.\n   * @param {ICAL.Time} options.dtstart     The start date of the event.\n   * @param {Boolean=} options.initialized  When true, assume that options are\n   *        from a previously constructed iterator. Initialization will not be\n   *        repeated.\n   */\n  function icalrecur_iterator(options) {\n    this.fromData(options);\n  }\n\n  icalrecur_iterator.prototype = {\n    /**\n     * True when iteration is finished.\n     * @type {Boolean}\n     */\n    completed: false,\n\n    /**\n     * The rule that is being iterated\n     * @type {ICAL.Recur}\n     */\n    rule: null,\n\n    /**\n     * The start date of the event being iterated.\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * The last occurrence that was returned from the\n     * {@link ICAL.RecurIterator#next} method.\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * The sequence number from the occurrence\n     * @type {Number}\n     */\n    occurrence_number: 0,\n\n    /**\n     * The indices used for the {@link ICAL.RecurIterator#by_data} object.\n     * @type {Object}\n     * @private\n     */\n    by_indices: null,\n\n    /**\n     * If true, the iterator has already been initialized\n     * @type {Boolean}\n     * @private\n     */\n    initialized: false,\n\n    /**\n     * The initializd by-data.\n     * @type {Object}\n     * @private\n     */\n    by_data: null,\n\n    /**\n     * The expanded yeardays\n     * @type {Array}\n     * @private\n     */\n    days: null,\n\n    /**\n     * The index in the {@link ICAL.RecurIterator#days} array.\n     * @type {Number}\n     * @private\n     */\n    days_index: 0,\n\n    /**\n     * Initialize the recurrence iterator from the passed data object. This\n     * method is usually not called directly, you can initialize the iterator\n     * through the constructor.\n     *\n     * @param {Object} options                The iterator options\n     * @param {ICAL.Recur} options.rule       The rule to iterate.\n     * @param {ICAL.Time} options.dtstart     The start date of the event.\n     * @param {Boolean=} options.initialized  When true, assume that options are\n     *        from a previously constructed iterator. Initialization will not be\n     *        repeated.\n     */\n    fromData: function fromData(options) {\n      this.rule = ICAL.helpers.formatClassType(options.rule, ICAL.Recur);\n\n      if (!this.rule) {\n        throw new Error('iterator requires a (ICAL.Recur) rule');\n      }\n\n      this.dtstart = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!this.dtstart) {\n        throw new Error('iterator requires a (ICAL.Time) dtstart');\n      }\n\n      if (options.by_data) {\n        this.by_data = options.by_data;\n      } else {\n        this.by_data = ICAL.helpers.clone(this.rule.parts, true);\n      }\n\n      if (options.occurrence_number) this.occurrence_number = options.occurrence_number;\n      this.days = options.days || [];\n\n      if (options.last) {\n        this.last = ICAL.helpers.formatClassType(options.last, ICAL.Time);\n      }\n\n      this.by_indices = options.by_indices;\n\n      if (!this.by_indices) {\n        this.by_indices = {\n          \"BYSECOND\": 0,\n          \"BYMINUTE\": 0,\n          \"BYHOUR\": 0,\n          \"BYDAY\": 0,\n          \"BYMONTH\": 0,\n          \"BYWEEKNO\": 0,\n          \"BYMONTHDAY\": 0\n        };\n      }\n\n      this.initialized = options.initialized || false;\n\n      if (!this.initialized) {\n        this.init();\n      }\n    },\n\n    /**\n     * Intialize the iterator\n     * @private\n     */\n    init: function icalrecur_iterator_init() {\n      this.initialized = true;\n      this.last = this.dtstart.clone();\n      var parts = this.by_data;\n\n      if (\"BYDAY\" in parts) {\n        // libical does this earlier when the rule is loaded, but we postpone to\n        // now so we can preserve the original order.\n        this.sort_byday_rules(parts.BYDAY, this.rule.wkst);\n      } // If the BYYEARDAY appares, no other date rule part may appear\n\n\n      if (\"BYYEARDAY\" in parts) {\n        if (\"BYMONTH\" in parts || \"BYWEEKNO\" in parts || \"BYMONTHDAY\" in parts || \"BYDAY\" in parts) {\n          throw new Error(\"Invalid BYYEARDAY rule\");\n        }\n      } // BYWEEKNO and BYMONTHDAY rule parts may not both appear\n\n\n      if (\"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {\n        throw new Error(\"BYWEEKNO does not fit to BYMONTHDAY\");\n      } // For MONTHLY recurrences (FREQ=MONTHLY) neither BYYEARDAY nor\n      // BYWEEKNO may appear.\n\n\n      if (this.rule.freq == \"MONTHLY\" && (\"BYYEARDAY\" in parts || \"BYWEEKNO\" in parts)) {\n        throw new Error(\"For MONTHLY recurrences neither BYYEARDAY nor BYWEEKNO may appear\");\n      } // For WEEKLY recurrences (FREQ=WEEKLY) neither BYMONTHDAY nor\n      // BYYEARDAY may appear.\n\n\n      if (this.rule.freq == \"WEEKLY\" && (\"BYYEARDAY\" in parts || \"BYMONTHDAY\" in parts)) {\n        throw new Error(\"For WEEKLY recurrences neither BYMONTHDAY nor BYYEARDAY may appear\");\n      } // BYYEARDAY may only appear in YEARLY rules\n\n\n      if (this.rule.freq != \"YEARLY\" && \"BYYEARDAY\" in parts) {\n        throw new Error(\"BYYEARDAY may only appear in YEARLY rules\");\n      }\n\n      this.last.second = this.setup_defaults(\"BYSECOND\", \"SECONDLY\", this.dtstart.second);\n      this.last.minute = this.setup_defaults(\"BYMINUTE\", \"MINUTELY\", this.dtstart.minute);\n      this.last.hour = this.setup_defaults(\"BYHOUR\", \"HOURLY\", this.dtstart.hour);\n      this.last.day = this.setup_defaults(\"BYMONTHDAY\", \"DAILY\", this.dtstart.day);\n      this.last.month = this.setup_defaults(\"BYMONTH\", \"MONTHLY\", this.dtstart.month);\n\n      if (this.rule.freq == \"WEEKLY\") {\n        if (\"BYDAY\" in parts) {\n          var bydayParts = this.ruleDayOfWeek(parts.BYDAY[0]);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var wkdy = dow - this.last.dayOfWeek();\n\n          if (this.last.dayOfWeek() < dow && wkdy >= 0 || wkdy < 0) {\n            // Initial time is after first day of BYDAY data\n            this.last.day += wkdy;\n          }\n        } else {\n          var dayName = ICAL.Recur.numericDayToIcalDay(this.dtstart.dayOfWeek());\n          parts.BYDAY = [dayName];\n        }\n      }\n\n      if (this.rule.freq == \"YEARLY\") {\n        for (;;) {\n          this.expand_year_days(this.last.year);\n\n          if (this.days.length > 0) {\n            break;\n          }\n\n          this.increment_year(this.rule.interval);\n        }\n\n        this._nextByYearDay();\n      }\n\n      if (this.rule.freq == \"MONTHLY\" && this.has_by_data(\"BYDAY\")) {\n        var tempLast = null;\n        var initLast = this.last.clone();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year); // Check every weekday in BYDAY with relative dow and pos.\n\n        for (var i in this.by_data.BYDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYDAY.hasOwnProperty(i)) {\n            continue;\n          }\n\n          this.last = initLast.clone();\n          var bydayParts = this.ruleDayOfWeek(this.by_data.BYDAY[i]);\n          var pos = bydayParts[0];\n          var dow = bydayParts[1];\n          var dayOfMonth = this.last.nthWeekDay(dow, pos); // If |pos| >= 6, the byday is invalid for a monthly rule.\n\n          if (pos >= 6 || pos <= -6) {\n            throw new Error(\"Malformed values in BYDAY part\");\n          } // If a Byday with pos=+/-5 is not in the current month it\n          // must be searched in the next months.\n\n\n          if (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n            // Skip if we have already found a \"last\" in this month.\n            if (tempLast && tempLast.month == initLast.month) {\n              continue;\n            }\n\n            while (dayOfMonth > daysInMonth || dayOfMonth <= 0) {\n              this.increment_month();\n              daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n              dayOfMonth = this.last.nthWeekDay(dow, pos);\n            }\n          }\n\n          this.last.day = dayOfMonth;\n\n          if (!tempLast || this.last.compare(tempLast) < 0) {\n            tempLast = this.last.clone();\n          }\n        }\n\n        this.last = tempLast.clone(); //XXX: This feels like a hack, but we need to initialize\n        //     the BYMONTHDAY case correctly and byDayAndMonthDay handles\n        //     this case. It accepts a special flag which will avoid incrementing\n        //     the initial value without the flag days that match the start time\n        //     would be missed.\n\n        if (this.has_by_data('BYMONTHDAY')) {\n          this._byDayAndMonthDay(true);\n        }\n\n        if (this.last.day > daysInMonth || this.last.day == 0) {\n          throw new Error(\"Malformed values in BYDAY part\");\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        if (this.last.day < 0) {\n          var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n          this.last.day = daysInMonth + this.last.day + 1;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence from the iterator.\n     * @return {ICAL.Time}\n     */\n    next: function icalrecur_iterator_next() {\n      var before = this.last ? this.last.clone() : null;\n\n      if (this.rule.count && this.occurrence_number >= this.rule.count || this.rule.until && this.last.compare(this.rule.until) > 0) {\n        //XXX: right now this is just a flag and has no impact\n        //     we can simplify the above case to check for completed later.\n        this.completed = true;\n        return null;\n      }\n\n      if (this.occurrence_number == 0 && this.last.compare(this.dtstart) >= 0) {\n        // First of all, give the instance that was initialized\n        this.occurrence_number++;\n        return this.last;\n      }\n\n      var valid;\n\n      do {\n        valid = 1;\n\n        switch (this.rule.freq) {\n          case \"SECONDLY\":\n            this.next_second();\n            break;\n\n          case \"MINUTELY\":\n            this.next_minute();\n            break;\n\n          case \"HOURLY\":\n            this.next_hour();\n            break;\n\n          case \"DAILY\":\n            this.next_day();\n            break;\n\n          case \"WEEKLY\":\n            this.next_week();\n            break;\n\n          case \"MONTHLY\":\n            valid = this.next_month();\n            break;\n\n          case \"YEARLY\":\n            this.next_year();\n            break;\n\n          default:\n            return null;\n        }\n      } while (!this.check_contracting_rules() || this.last.compare(this.dtstart) < 0 || !valid); // TODO is this valid?\n\n\n      if (this.last.compare(before) == 0) {\n        throw new Error(\"Same occurrence found twice, protecting \" + \"you from death by recursion\");\n      }\n\n      if (this.rule.until && this.last.compare(this.rule.until) > 0) {\n        this.completed = true;\n        return null;\n      } else {\n        this.occurrence_number++;\n        return this.last;\n      }\n    },\n    next_second: function next_second() {\n      return this.next_generic(\"BYSECOND\", \"SECONDLY\", \"second\", \"minute\");\n    },\n    increment_second: function increment_second(inc) {\n      return this.increment_generic(inc, \"second\", 60, \"minute\");\n    },\n    next_minute: function next_minute() {\n      return this.next_generic(\"BYMINUTE\", \"MINUTELY\", \"minute\", \"hour\", \"next_second\");\n    },\n    increment_minute: function increment_minute(inc) {\n      return this.increment_generic(inc, \"minute\", 60, \"hour\");\n    },\n    next_hour: function next_hour() {\n      return this.next_generic(\"BYHOUR\", \"HOURLY\", \"hour\", \"monthday\", \"next_minute\");\n    },\n    increment_hour: function increment_hour(inc) {\n      this.increment_generic(inc, \"hour\", 24, \"monthday\");\n    },\n    next_day: function next_day() {\n      var has_by_day = (\"BYDAY\" in this.by_data);\n      var this_freq = this.rule.freq == \"DAILY\";\n\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (this_freq) {\n        this.increment_monthday(this.rule.interval);\n      } else {\n        this.increment_monthday(1);\n      }\n\n      return 0;\n    },\n    next_week: function next_week() {\n      var end_of_data = 0;\n\n      if (this.next_weekday_by_week() == 0) {\n        return end_of_data;\n      }\n\n      if (this.has_by_data(\"BYWEEKNO\")) {\n        var idx = ++this.by_indices.BYWEEKNO;\n\n        if (this.by_indices.BYWEEKNO == this.by_data.BYWEEKNO.length) {\n          this.by_indices.BYWEEKNO = 0;\n          end_of_data = 1;\n        } // HACK should be first month of the year\n\n\n        this.last.month = 1;\n        this.last.day = 1;\n        var week_no = this.by_data.BYWEEKNO[this.by_indices.BYWEEKNO];\n        this.last.day += 7 * week_no;\n\n        if (end_of_data) {\n          this.increment_year(1);\n        }\n      } else {\n        // Jump to the next week\n        this.increment_monthday(7 * this.rule.interval);\n      }\n\n      return end_of_data;\n    },\n\n    /**\n     * Normalize each by day rule for a given year/month.\n     * Takes into account ordering and negative rules\n     *\n     * @private\n     * @param {Number} year         Current year.\n     * @param {Number} month        Current month.\n     * @param {Array}  rules        Array of rules.\n     *\n     * @return {Array} sorted and normalized rules.\n     *                 Negative rules will be expanded to their\n     *                 correct positive values for easier processing.\n     */\n    normalizeByMonthDayRules: function normalizeByMonthDayRules(year, month, rules) {\n      var daysInMonth = ICAL.Time.daysInMonth(month, year); // XXX: This is probably bad for performance to allocate\n      //      a new array for each month we scan, if possible\n      //      we should try to optimize this...\n\n      var newRules = [];\n      var ruleIdx = 0;\n      var len = rules.length;\n      var rule;\n\n      for (; ruleIdx < len; ruleIdx++) {\n        rule = rules[ruleIdx]; // if this rule falls outside of given\n        // month discard it.\n\n        if (Math.abs(rule) > daysInMonth) {\n          continue;\n        } // negative case\n\n\n        if (rule < 0) {\n          // we add (not subtract its a negative number)\n          // one from the rule because 1 === last day of month\n          rule = daysInMonth + (rule + 1);\n        } else if (rule === 0) {\n          // skip zero its invalid.\n          continue;\n        } // only add unique items...\n\n\n        if (newRules.indexOf(rule) === -1) {\n          newRules.push(rule);\n        }\n      } // unique and sort\n\n\n      return newRules.sort(function (a, b) {\n        return a - b;\n      });\n    },\n\n    /**\n     * NOTES:\n     * We are given a list of dates in the month (BYMONTHDAY) (23, etc..)\n     * Also we are given a list of days (BYDAY) (MO, 2SU, etc..) when\n     * both conditions match a given date (this.last.day) iteration stops.\n     *\n     * @private\n     * @param {Boolean=} isInit     When given true will not increment the\n     *                                current day (this.last).\n     */\n    _byDayAndMonthDay: function _byDayAndMonthDay(isInit) {\n      var byMonthDay; // setup in initMonth\n\n      var byDay = this.by_data.BYDAY;\n      var date;\n      var dateIdx = 0;\n      var dateLen; // setup in initMonth\n\n      var dayLen = byDay.length; // we are not valid by default\n\n      var dataIsValid = 0;\n      var daysInMonth;\n      var self = this; // we need a copy of this, because a DateTime gets normalized\n      // automatically if the day is out of range. At some points we\n      // set the last day to 0 to start counting.\n\n      var lastDay = this.last.day;\n\n      function initMonth() {\n        daysInMonth = ICAL.Time.daysInMonth(self.last.month, self.last.year);\n        byMonthDay = self.normalizeByMonthDayRules(self.last.year, self.last.month, self.by_data.BYMONTHDAY);\n        dateLen = byMonthDay.length; // For the case of more than one occurrence in one month\n        // we have to be sure to start searching after the last\n        // found date or at the last BYMONTHDAY, unless we are\n        // initializing the iterator because in this case we have\n        // to consider the last found date too.\n\n        while (byMonthDay[dateIdx] <= lastDay && !(isInit && byMonthDay[dateIdx] == lastDay) && dateIdx < dateLen - 1) {\n          dateIdx++;\n        }\n      }\n\n      function nextMonth() {\n        // since the day is incremented at the start\n        // of the loop below, we need to start at 0\n        lastDay = 0;\n        self.increment_month();\n        dateIdx = 0;\n        initMonth();\n      }\n\n      initMonth(); // should come after initMonth\n\n      if (isInit) {\n        lastDay -= 1;\n      } // Use a counter to avoid an infinite loop with malformed rules.\n      // Stop checking after 4 years so we consider also a leap year.\n\n\n      var monthsCounter = 48;\n\n      while (!dataIsValid && monthsCounter) {\n        monthsCounter--; // increment the current date. This is really\n        // important otherwise we may fall into the infinite\n        // loop trap. The initial date takes care of the case\n        // where the current date is the date we are looking\n        // for.\n\n        date = lastDay + 1;\n\n        if (date > daysInMonth) {\n          nextMonth();\n          continue;\n        } // find next date\n\n\n        var next = byMonthDay[dateIdx++]; // this logic is dependant on the BYMONTHDAYS\n        // being in order (which is done by #normalizeByMonthDayRules)\n\n        if (next >= date) {\n          // if the next month day is in the future jump to it.\n          lastDay = next;\n        } else {\n          // in this case the 'next' monthday has past\n          // we must move to the month.\n          nextMonth();\n          continue;\n        } // Now we can loop through the day rules to see\n        // if one matches the current month date.\n\n\n        for (var dayIdx = 0; dayIdx < dayLen; dayIdx++) {\n          var parts = this.ruleDayOfWeek(byDay[dayIdx]);\n          var pos = parts[0];\n          var dow = parts[1];\n          this.last.day = lastDay;\n\n          if (this.last.isNthWeekDay(dow, pos)) {\n            // when we find the valid one we can mark\n            // the conditions as met and break the loop.\n            // (Because we have this condition above\n            //  it will also break the parent loop).\n            dataIsValid = 1;\n            break;\n          }\n        } // Its completely possible that the combination\n        // cannot be matched in the current month.\n        // When we reach the end of possible combinations\n        // in the current month we iterate to the next one.\n        // since dateIdx is incremented right after getting\n        // \"next\", we don't need dateLen -1 here.\n\n\n        if (!dataIsValid && dateIdx === dateLen) {\n          nextMonth();\n          continue;\n        }\n      }\n\n      if (monthsCounter <= 0) {\n        // Checked 4 years without finding a Byday that matches\n        // a Bymonthday. Maybe the rule is not correct.\n        throw new Error(\"Malformed values in BYDAY combined with BYMONTHDAY parts\");\n      }\n\n      return dataIsValid;\n    },\n    next_month: function next_month() {\n      var this_freq = this.rule.freq == \"MONTHLY\";\n      var data_valid = 1;\n\n      if (this.next_hour() == 0) {\n        return data_valid;\n      }\n\n      if (this.has_by_data(\"BYDAY\") && this.has_by_data(\"BYMONTHDAY\")) {\n        data_valid = this._byDayAndMonthDay();\n      } else if (this.has_by_data(\"BYDAY\")) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var setpos = 0;\n        var setpos_total = 0;\n\n        if (this.has_by_data(\"BYSETPOS\")) {\n          var last_day = this.last.day;\n\n          for (var day = 1; day <= daysInMonth; day++) {\n            this.last.day = day;\n\n            if (this.is_day_in_byday(this.last)) {\n              setpos_total++;\n\n              if (day <= last_day) {\n                setpos++;\n              }\n            }\n          }\n\n          this.last.day = last_day;\n        }\n\n        data_valid = 0;\n\n        for (var day = this.last.day + 1; day <= daysInMonth; day++) {\n          this.last.day = day;\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(++setpos) || this.check_set_position(setpos - setpos_total - 1)) {\n              data_valid = 1;\n              break;\n            }\n          }\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          this.increment_month();\n\n          if (this.is_day_in_byday(this.last)) {\n            if (!this.has_by_data(\"BYSETPOS\") || this.check_set_position(1)) {\n              data_valid = 1;\n            }\n          } else {\n            data_valid = 0;\n          }\n        }\n      } else if (this.has_by_data(\"BYMONTHDAY\")) {\n        this.by_indices.BYMONTHDAY++;\n\n        if (this.by_indices.BYMONTHDAY >= this.by_data.BYMONTHDAY.length) {\n          this.by_indices.BYMONTHDAY = 0;\n          this.increment_month();\n        }\n\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        var day = this.by_data.BYMONTHDAY[this.by_indices.BYMONTHDAY];\n\n        if (day < 0) {\n          day = daysInMonth + day + 1;\n        }\n\n        if (day > daysInMonth) {\n          this.last.day = 1;\n          data_valid = this.is_day_in_byday(this.last);\n        } else {\n          this.last.day = day;\n        }\n      } else {\n        this.increment_month();\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n\n        if (this.by_data.BYMONTHDAY[0] > daysInMonth) {\n          data_valid = 0;\n        } else {\n          this.last.day = this.by_data.BYMONTHDAY[0];\n        }\n      }\n\n      return data_valid;\n    },\n    next_weekday_by_week: function next_weekday_by_week() {\n      var end_of_data = 0;\n\n      if (this.next_hour() == 0) {\n        return end_of_data;\n      }\n\n      if (!this.has_by_data(\"BYDAY\")) {\n        return 1;\n      }\n\n      for (;;) {\n        var tt = new ICAL.Time();\n        this.by_indices.BYDAY++;\n\n        if (this.by_indices.BYDAY == Object.keys(this.by_data.BYDAY).length) {\n          this.by_indices.BYDAY = 0;\n          end_of_data = 1;\n        }\n\n        var coded_day = this.by_data.BYDAY[this.by_indices.BYDAY];\n        var parts = this.ruleDayOfWeek(coded_day);\n        var dow = parts[1];\n        dow -= this.rule.wkst;\n\n        if (dow < 0) {\n          dow += 7;\n        }\n\n        tt.year = this.last.year;\n        tt.month = this.last.month;\n        tt.day = this.last.day;\n        var startOfWeek = tt.startDoyWeek(this.rule.wkst);\n\n        if (dow + startOfWeek < 1) {\n          // The selected date is in the previous year\n          if (!end_of_data) {\n            continue;\n          }\n        }\n\n        var next = ICAL.Time.fromDayOfYear(startOfWeek + dow, this.last.year);\n        /**\n         * The normalization horrors below are due to\n         * the fact that when the year/month/day changes\n         * it can effect the other operations that come after.\n         */\n\n        this.last.year = next.year;\n        this.last.month = next.month;\n        this.last.day = next.day;\n        return end_of_data;\n      }\n    },\n    next_year: function next_year() {\n      if (this.next_hour() == 0) {\n        return 0;\n      }\n\n      if (++this.days_index == this.days.length) {\n        this.days_index = 0;\n\n        do {\n          this.increment_year(this.rule.interval);\n          this.expand_year_days(this.last.year);\n        } while (this.days.length == 0);\n      }\n\n      this._nextByYearDay();\n\n      return 1;\n    },\n    _nextByYearDay: function _nextByYearDay() {\n      var doy = this.days[this.days_index];\n      var year = this.last.year;\n\n      if (doy < 1) {\n        // Time.fromDayOfYear(doy, year) indexes relative to the\n        // start of the given year. That is different from the\n        // semantics of BYYEARDAY where negative indexes are an\n        // offset from the end of the given year.\n        doy += 1;\n        year += 1;\n      }\n\n      var next = ICAL.Time.fromDayOfYear(doy, year);\n      this.last.day = next.day;\n      this.last.month = next.month;\n    },\n    ruleDayOfWeek: function ruleDayOfWeek(dow) {\n      var matches = dow.match(/([+-]?[0-9])?(MO|TU|WE|TH|FR|SA|SU)/);\n\n      if (matches) {\n        var pos = parseInt(matches[1] || 0, 10);\n        dow = ICAL.Recur.icalDayToNumericDay(matches[2]);\n        return [pos, dow];\n      } else {\n        return [0, 0];\n      }\n    },\n    next_generic: function next_generic(aRuleType, aInterval, aDateAttr, aFollowingAttr, aPreviousIncr) {\n      var has_by_rule = (aRuleType in this.by_data);\n      var this_freq = this.rule.freq == aInterval;\n      var end_of_data = 0;\n\n      if (aPreviousIncr && this[aPreviousIncr]() == 0) {\n        return end_of_data;\n      }\n\n      if (has_by_rule) {\n        this.by_indices[aRuleType]++;\n        var idx = this.by_indices[aRuleType];\n        var dta = this.by_data[aRuleType];\n\n        if (this.by_indices[aRuleType] == dta.length) {\n          this.by_indices[aRuleType] = 0;\n          end_of_data = 1;\n        }\n\n        this.last[aDateAttr] = dta[this.by_indices[aRuleType]];\n      } else if (this_freq) {\n        this[\"increment_\" + aDateAttr](this.rule.interval);\n      }\n\n      if (has_by_rule && end_of_data && this_freq) {\n        this[\"increment_\" + aFollowingAttr](1);\n      }\n\n      return end_of_data;\n    },\n    increment_monthday: function increment_monthday(inc) {\n      for (var i = 0; i < inc; i++) {\n        var daysInMonth = ICAL.Time.daysInMonth(this.last.month, this.last.year);\n        this.last.day++;\n\n        if (this.last.day > daysInMonth) {\n          this.last.day -= daysInMonth;\n          this.increment_month();\n        }\n      }\n    },\n    increment_month: function increment_month() {\n      this.last.day = 1;\n\n      if (this.has_by_data(\"BYMONTH\")) {\n        this.by_indices.BYMONTH++;\n\n        if (this.by_indices.BYMONTH == this.by_data.BYMONTH.length) {\n          this.by_indices.BYMONTH = 0;\n          this.increment_year(1);\n        }\n\n        this.last.month = this.by_data.BYMONTH[this.by_indices.BYMONTH];\n      } else {\n        if (this.rule.freq == \"MONTHLY\") {\n          this.last.month += this.rule.interval;\n        } else {\n          this.last.month++;\n        }\n\n        this.last.month--;\n        var years = ICAL.helpers.trunc(this.last.month / 12);\n        this.last.month %= 12;\n        this.last.month++;\n\n        if (years != 0) {\n          this.increment_year(years);\n        }\n      }\n    },\n    increment_year: function increment_year(inc) {\n      this.last.year += inc;\n    },\n    increment_generic: function increment_generic(inc, aDateAttr, aFactor, aNextIncrement) {\n      this.last[aDateAttr] += inc;\n      var nextunit = ICAL.helpers.trunc(this.last[aDateAttr] / aFactor);\n      this.last[aDateAttr] %= aFactor;\n\n      if (nextunit != 0) {\n        this[\"increment_\" + aNextIncrement](nextunit);\n      }\n    },\n    has_by_data: function has_by_data(aRuleType) {\n      return aRuleType in this.rule.parts;\n    },\n    expand_year_days: function expand_year_days(aYear) {\n      var t = new ICAL.Time();\n      this.days = []; // We need our own copy with a few keys set\n\n      var parts = {};\n      var rules = [\"BYDAY\", \"BYWEEKNO\", \"BYMONTHDAY\", \"BYMONTH\", \"BYYEARDAY\"];\n\n      for (var p in rules) {\n        /* istanbul ignore else */\n        if (rules.hasOwnProperty(p)) {\n          var part = rules[p];\n\n          if (part in this.rule.parts) {\n            parts[part] = this.rule.parts[part];\n          }\n        }\n      }\n\n      if (\"BYMONTH\" in parts && \"BYWEEKNO\" in parts) {\n        var valid = 1;\n        var validWeeks = {};\n        t.year = aYear;\n        t.isDate = true;\n\n        for (var monthIdx = 0; monthIdx < this.by_data.BYMONTH.length; monthIdx++) {\n          var month = this.by_data.BYMONTH[monthIdx];\n          t.month = month;\n          t.day = 1;\n          var first_week = t.weekNumber(this.rule.wkst);\n          t.day = ICAL.Time.daysInMonth(month, aYear);\n          var last_week = t.weekNumber(this.rule.wkst);\n\n          for (monthIdx = first_week; monthIdx < last_week; monthIdx++) {\n            validWeeks[monthIdx] = 1;\n          }\n        }\n\n        for (var weekIdx = 0; weekIdx < this.by_data.BYWEEKNO.length && valid; weekIdx++) {\n          var weekno = this.by_data.BYWEEKNO[weekIdx];\n\n          if (weekno < 52) {\n            valid &= validWeeks[weekIdx];\n          } else {\n            valid = 0;\n          }\n        }\n\n        if (valid) {\n          delete parts.BYMONTH;\n        } else {\n          delete parts.BYWEEKNO;\n        }\n      }\n\n      var partCount = Object.keys(parts).length;\n\n      if (partCount == 0) {\n        var t1 = this.dtstart.clone();\n        t1.year = this.last.year;\n        this.days.push(t1.dayOfYear());\n      } else if (partCount == 1 && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n\n          var t2 = this.dtstart.clone();\n          t2.year = aYear;\n          t2.month = this.by_data.BYMONTH[monthkey];\n          t2.isDate = true;\n          this.days.push(t2.dayOfYear());\n        }\n      } else if (partCount == 1 && \"BYMONTHDAY\" in parts) {\n        for (var monthdaykey in this.by_data.BYMONTHDAY) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n            continue;\n          }\n\n          var t3 = this.dtstart.clone();\n          var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n\n          if (day_ < 0) {\n            var daysInMonth = ICAL.Time.daysInMonth(t3.month, aYear);\n            day_ = day_ + daysInMonth + 1;\n          }\n\n          t3.day = day_;\n          t3.year = aYear;\n          t3.isDate = true;\n          this.days.push(t3.dayOfYear());\n        }\n      } else if (partCount == 2 && \"BYMONTHDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n\n          var month_ = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month_, aYear);\n\n          for (var monthdaykey in this.by_data.BYMONTHDAY) {\n            /* istanbul ignore if */\n            if (!this.by_data.BYMONTHDAY.hasOwnProperty(monthdaykey)) {\n              continue;\n            }\n\n            var day_ = this.by_data.BYMONTHDAY[monthdaykey];\n\n            if (day_ < 0) {\n              day_ = day_ + daysInMonth + 1;\n            }\n\n            t.day = day_;\n            t.month = month_;\n            t.year = aYear;\n            t.isDate = true;\n            this.days.push(t.dayOfYear());\n          }\n        }\n      } else if (partCount == 1 && \"BYWEEKNO\" in parts) {// TODO unimplemented in libical\n      } else if (partCount == 2 && \"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {// TODO unimplemented in libical\n      } else if (partCount == 1 && \"BYDAY\" in parts) {\n        this.days = this.days.concat(this.expand_by_day(aYear));\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTH\" in parts) {\n        for (var monthkey in this.by_data.BYMONTH) {\n          /* istanbul ignore if */\n          if (!this.by_data.BYMONTH.hasOwnProperty(monthkey)) {\n            continue;\n          }\n\n          var month = this.by_data.BYMONTH[monthkey];\n          var daysInMonth = ICAL.Time.daysInMonth(month, aYear);\n          t.year = aYear;\n          t.month = this.by_data.BYMONTH[monthkey];\n          t.day = 1;\n          t.isDate = true;\n          var first_dow = t.dayOfWeek();\n          var doy_offset = t.dayOfYear() - 1;\n          t.day = daysInMonth;\n          var last_dow = t.dayOfWeek();\n\n          if (this.has_by_data(\"BYSETPOS\")) {\n            var set_pos_counter = 0;\n            var by_month_day = [];\n\n            for (var day = 1; day <= daysInMonth; day++) {\n              t.day = day;\n\n              if (this.is_day_in_byday(t)) {\n                by_month_day.push(day);\n              }\n            }\n\n            for (var spIndex = 0; spIndex < by_month_day.length; spIndex++) {\n              if (this.check_set_position(spIndex + 1) || this.check_set_position(spIndex - by_month_day.length)) {\n                this.days.push(doy_offset + by_month_day[spIndex]);\n              }\n            }\n          } else {\n            for (var daycodedkey in this.by_data.BYDAY) {\n              /* istanbul ignore if */\n              if (!this.by_data.BYDAY.hasOwnProperty(daycodedkey)) {\n                continue;\n              }\n\n              var coded_day = this.by_data.BYDAY[daycodedkey];\n              var bydayParts = this.ruleDayOfWeek(coded_day);\n              var pos = bydayParts[0];\n              var dow = bydayParts[1];\n              var month_day;\n              var first_matching_day = (dow + 7 - first_dow) % 7 + 1;\n              var last_matching_day = daysInMonth - (last_dow + 7 - dow) % 7;\n\n              if (pos == 0) {\n                for (var day = first_matching_day; day <= daysInMonth; day += 7) {\n                  this.days.push(doy_offset + day);\n                }\n              } else if (pos > 0) {\n                month_day = first_matching_day + (pos - 1) * 7;\n\n                if (month_day <= daysInMonth) {\n                  this.days.push(doy_offset + month_day);\n                }\n              } else {\n                month_day = last_matching_day + (pos + 1) * 7;\n\n                if (month_day > 0) {\n                  this.days.push(doy_offset + month_day);\n                }\n              }\n            }\n          }\n        } // Return dates in order of occurrence (1,2,3,...) instead\n        // of by groups of weekdays (1,8,15,...,2,9,16,...).\n\n\n        this.days.sort(function (a, b) {\n          return a - b;\n        }); // Comparator function allows to sort numbers.\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 && \"BYDAY\" in parts && \"BYMONTHDAY\" in parts && \"BYMONTH\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n\n          if (this.by_data.BYMONTH.indexOf(tt.month) >= 0 && this.by_data.BYMONTHDAY.indexOf(tt.day) >= 0) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 2 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts) {\n        var expandedDays = this.expand_by_day(aYear);\n\n        for (var daykey in expandedDays) {\n          /* istanbul ignore if */\n          if (!expandedDays.hasOwnProperty(daykey)) {\n            continue;\n          }\n\n          var day = expandedDays[daykey];\n          var tt = ICAL.Time.fromDayOfYear(day, aYear);\n          var weekno = tt.weekNumber(this.rule.wkst);\n\n          if (this.by_data.BYWEEKNO.indexOf(weekno)) {\n            this.days.push(day);\n          }\n        }\n      } else if (partCount == 3 && \"BYDAY\" in parts && \"BYWEEKNO\" in parts && \"BYMONTHDAY\" in parts) {// TODO unimplemted in libical\n      } else if (partCount == 1 && \"BYYEARDAY\" in parts) {\n        this.days = this.days.concat(this.by_data.BYYEARDAY);\n      } else {\n        this.days = [];\n      }\n\n      return 0;\n    },\n    expand_by_day: function expand_by_day(aYear) {\n      var days_list = [];\n      var tmp = this.last.clone();\n      tmp.year = aYear;\n      tmp.month = 1;\n      tmp.day = 1;\n      tmp.isDate = true;\n      var start_dow = tmp.dayOfWeek();\n      tmp.month = 12;\n      tmp.day = 31;\n      tmp.isDate = true;\n      var end_dow = tmp.dayOfWeek();\n      var end_year_day = tmp.dayOfYear();\n\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n\n        if (pos == 0) {\n          var tmp_start_doy = (dow + 7 - start_dow) % 7 + 1;\n\n          for (var doy = tmp_start_doy; doy <= end_year_day; doy += 7) {\n            days_list.push(doy);\n          }\n        } else if (pos > 0) {\n          var first;\n\n          if (dow >= start_dow) {\n            first = dow - start_dow + 1;\n          } else {\n            first = dow - start_dow + 8;\n          }\n\n          days_list.push(first + (pos - 1) * 7);\n        } else {\n          var last;\n          pos = -pos;\n\n          if (dow <= end_dow) {\n            last = end_year_day - end_dow + dow;\n          } else {\n            last = end_year_day - end_dow + dow - 7;\n          }\n\n          days_list.push(last - (pos - 1) * 7);\n        }\n      }\n\n      return days_list;\n    },\n    is_day_in_byday: function is_day_in_byday(tt) {\n      for (var daykey in this.by_data.BYDAY) {\n        /* istanbul ignore if */\n        if (!this.by_data.BYDAY.hasOwnProperty(daykey)) {\n          continue;\n        }\n\n        var day = this.by_data.BYDAY[daykey];\n        var parts = this.ruleDayOfWeek(day);\n        var pos = parts[0];\n        var dow = parts[1];\n        var this_dow = tt.dayOfWeek();\n\n        if (pos == 0 && dow == this_dow || tt.nthWeekDay(dow, pos) == tt.day) {\n          return 1;\n        }\n      }\n\n      return 0;\n    },\n\n    /**\n     * Checks if given value is in BYSETPOS.\n     *\n     * @private\n     * @param {Numeric} aPos position to check for.\n     * @return {Boolean} false unless BYSETPOS rules exist\n     *                   and the given value is present in rules.\n     */\n    check_set_position: function check_set_position(aPos) {\n      if (this.has_by_data('BYSETPOS')) {\n        var idx = this.by_data.BYSETPOS.indexOf(aPos); // negative numbers are not false-y\n\n        return idx !== -1;\n      }\n\n      return false;\n    },\n    sort_byday_rules: function icalrecur_sort_byday_rules(aRules, aWeekStart) {\n      for (var i = 0; i < aRules.length; i++) {\n        for (var j = 0; j < i; j++) {\n          var one = this.ruleDayOfWeek(aRules[j])[1];\n          var two = this.ruleDayOfWeek(aRules[i])[1];\n          one -= aWeekStart;\n          two -= aWeekStart;\n          if (one < 0) one += 7;\n          if (two < 0) two += 7;\n\n          if (one > two) {\n            var tmp = aRules[i];\n            aRules[i] = aRules[j];\n            aRules[j] = tmp;\n          }\n        }\n      }\n    },\n    check_contract_restriction: function check_contract_restriction(aRuleType, v) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n      var pass = false;\n\n      if (aRuleType in this.by_data && ruleMapValue == icalrecur_iterator.CONTRACT) {\n        var ruleType = this.by_data[aRuleType];\n\n        for (var bydatakey in ruleType) {\n          /* istanbul ignore else */\n          if (ruleType.hasOwnProperty(bydatakey)) {\n            if (ruleType[bydatakey] == v) {\n              pass = true;\n              break;\n            }\n          }\n        }\n      } else {\n        // Not a contracting byrule or has no data, test passes\n        pass = true;\n      }\n\n      return pass;\n    },\n    check_contracting_rules: function check_contracting_rules() {\n      var dow = this.last.dayOfWeek();\n      var weekNo = this.last.weekNumber(this.rule.wkst);\n      var doy = this.last.dayOfYear();\n      return this.check_contract_restriction(\"BYSECOND\", this.last.second) && this.check_contract_restriction(\"BYMINUTE\", this.last.minute) && this.check_contract_restriction(\"BYHOUR\", this.last.hour) && this.check_contract_restriction(\"BYDAY\", ICAL.Recur.numericDayToIcalDay(dow)) && this.check_contract_restriction(\"BYWEEKNO\", weekNo) && this.check_contract_restriction(\"BYMONTHDAY\", this.last.day) && this.check_contract_restriction(\"BYMONTH\", this.last.month) && this.check_contract_restriction(\"BYYEARDAY\", doy);\n    },\n    setup_defaults: function setup_defaults(aRuleType, req, deftime) {\n      var indexMapValue = icalrecur_iterator._indexMap[aRuleType];\n      var ruleMapValue = icalrecur_iterator._expandMap[this.rule.freq][indexMapValue];\n\n      if (ruleMapValue != icalrecur_iterator.CONTRACT) {\n        if (!(aRuleType in this.by_data)) {\n          this.by_data[aRuleType] = [deftime];\n        }\n\n        if (this.rule.freq != req) {\n          return this.by_data[aRuleType][0];\n        }\n      }\n\n      return deftime;\n    },\n\n    /**\n     * Convert iterator into a serialize-able object.  Will preserve current\n     * iteration sequence to ensure the seamless continuation of the recurrence\n     * rule.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      var result = Object.create(null);\n      result.initialized = this.initialized;\n      result.rule = this.rule.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.by_data = this.by_data;\n      result.days = this.days;\n      result.last = this.last.toJSON();\n      result.by_indices = this.by_indices;\n      result.occurrence_number = this.occurrence_number;\n      return result;\n    }\n  };\n  icalrecur_iterator._indexMap = {\n    \"BYSECOND\": 0,\n    \"BYMINUTE\": 1,\n    \"BYHOUR\": 2,\n    \"BYDAY\": 3,\n    \"BYMONTHDAY\": 4,\n    \"BYYEARDAY\": 5,\n    \"BYWEEKNO\": 6,\n    \"BYMONTH\": 7,\n    \"BYSETPOS\": 8\n  };\n  icalrecur_iterator._expandMap = {\n    \"SECONDLY\": [1, 1, 1, 1, 1, 1, 1, 1],\n    \"MINUTELY\": [2, 1, 1, 1, 1, 1, 1, 1],\n    \"HOURLY\": [2, 2, 1, 1, 1, 1, 1, 1],\n    \"DAILY\": [2, 2, 2, 1, 1, 1, 1, 1],\n    \"WEEKLY\": [2, 2, 2, 2, 3, 3, 1, 1],\n    \"MONTHLY\": [2, 2, 2, 2, 2, 3, 3, 1],\n    \"YEARLY\": [2, 2, 2, 2, 2, 2, 2, 2]\n  };\n  icalrecur_iterator.UNKNOWN = 0;\n  icalrecur_iterator.CONTRACT = 1;\n  icalrecur_iterator.EXPAND = 2;\n  icalrecur_iterator.ILLEGAL = 3;\n  return icalrecur_iterator;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.RecurExpansion = function () {\n  function formatTime(item) {\n    return ICAL.helpers.formatClassType(item, ICAL.Time);\n  }\n\n  function compareTime(a, b) {\n    return a.compare(b);\n  }\n\n  function isRecurringComponent(comp) {\n    return comp.hasProperty('rdate') || comp.hasProperty('rrule') || comp.hasProperty('recurrence-id');\n  }\n  /**\n   * @classdesc\n   * Primary class for expanding recurring rules.  Can take multiple rrules,\n   * rdates, exdate(s) and iterate (in order) over each next occurrence.\n   *\n   * Once initialized this class can also be serialized saved and continue\n   * iteration from the last point.\n   *\n   * NOTE: it is intended that this class is to be used\n   *       with ICAL.Event which handles recurrence exceptions.\n   *\n   * @example\n   * // assuming event is a parsed ical component\n   * var event;\n   *\n   * var expand = new ICAL.RecurExpansion({\n   *   component: event,\n   *   dtstart: event.getFirstPropertyValue('dtstart')\n   * });\n   *\n   * // remember there are infinite rules\n   * // so its a good idea to limit the scope\n   * // of the iterations then resume later on.\n   *\n   * // next is always an ICAL.Time or null\n   * var next;\n   *\n   * while (someCondition && (next = expand.next())) {\n   *   // do something with next\n   * }\n   *\n   * // save instance for later\n   * var json = JSON.stringify(expand);\n   *\n   * //...\n   *\n   * // NOTE: if the component's properties have\n   * //       changed you will need to rebuild the\n   * //       class and start over. This only works\n   * //       when the component's recurrence info is the same.\n   * var expand = new ICAL.RecurExpansion(JSON.parse(json));\n   *\n   * @description\n   * The options object can be filled with the specified initial values. It can\n   * also contain additional members, as a result of serializing a previous\n   * expansion state, as shown in the example.\n   *\n   * @class\n   * @alias ICAL.RecurExpansion\n   * @param {Object} options\n   *        Recurrence expansion options\n   * @param {ICAL.Time} options.dtstart\n   *        Start time of the event\n   * @param {ICAL.Component=} options.component\n   *        Component for expansion, required if not resuming.\n   */\n\n\n  function RecurExpansion(options) {\n    this.ruleDates = [];\n    this.exDates = [];\n    this.fromData(options);\n  }\n\n  RecurExpansion.prototype = {\n    /**\n     * True when iteration is fully completed.\n     * @type {Boolean}\n     */\n    complete: false,\n\n    /**\n     * Array of rrule iterators.\n     *\n     * @type {ICAL.RecurIterator[]}\n     * @private\n     */\n    ruleIterators: null,\n\n    /**\n     * Array of rdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    ruleDates: null,\n\n    /**\n     * Array of exdate instances.\n     *\n     * @type {ICAL.Time[]}\n     * @private\n     */\n    exDates: null,\n\n    /**\n     * Current position in ruleDates array.\n     * @type {Number}\n     * @private\n     */\n    ruleDateInc: 0,\n\n    /**\n     * Current position in exDates array\n     * @type {Number}\n     * @private\n     */\n    exDateInc: 0,\n\n    /**\n     * Current negative date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    exDate: null,\n\n    /**\n     * Current additional date.\n     *\n     * @type {ICAL.Time}\n     * @private\n     */\n    ruleDate: null,\n\n    /**\n     * Start date of recurring rules.\n     *\n     * @type {ICAL.Time}\n     */\n    dtstart: null,\n\n    /**\n     * Last expanded time\n     *\n     * @type {ICAL.Time}\n     */\n    last: null,\n\n    /**\n     * Initialize the recurrence expansion from the data object. The options\n     * object may also contain additional members, see the\n     * {@link ICAL.RecurExpansion constructor} for more details.\n     *\n     * @param {Object} options\n     *        Recurrence expansion options\n     * @param {ICAL.Time} options.dtstart\n     *        Start time of the event\n     * @param {ICAL.Component=} options.component\n     *        Component for expansion, required if not resuming.\n     */\n    fromData: function fromData(options) {\n      var start = ICAL.helpers.formatClassType(options.dtstart, ICAL.Time);\n\n      if (!start) {\n        throw new Error('.dtstart (ICAL.Time) must be given');\n      } else {\n        this.dtstart = start;\n      }\n\n      if (options.component) {\n        this._init(options.component);\n      } else {\n        this.last = formatTime(options.last) || start.clone();\n\n        if (!options.ruleIterators) {\n          throw new Error('.ruleIterators or .component must be given');\n        }\n\n        this.ruleIterators = options.ruleIterators.map(function (item) {\n          return ICAL.helpers.formatClassType(item, ICAL.RecurIterator);\n        });\n        this.ruleDateInc = options.ruleDateInc;\n        this.exDateInc = options.exDateInc;\n\n        if (options.ruleDates) {\n          this.ruleDates = options.ruleDates.map(formatTime);\n          this.ruleDate = this.ruleDates[this.ruleDateInc];\n        }\n\n        if (options.exDates) {\n          this.exDates = options.exDates.map(formatTime);\n          this.exDate = this.exDates[this.exDateInc];\n        }\n\n        if (typeof options.complete !== 'undefined') {\n          this.complete = options.complete;\n        }\n      }\n    },\n\n    /**\n     * Retrieve the next occurrence in the series.\n     * @return {ICAL.Time}\n     */\n    next: function next() {\n      var iter;\n      var ruleOfDay;\n      var next;\n      var compare;\n      var maxTries = 500;\n      var currentTry = 0;\n\n      while (true) {\n        if (currentTry++ > maxTries) {\n          throw new Error('max tries have occured, rule may be impossible to forfill.');\n        }\n\n        next = this.ruleDate;\n        iter = this._nextRecurrenceIter(this.last); // no more matches\n        // because we increment the rule day or rule\n        // _after_ we choose a value this should be\n        // the only spot where we need to worry about the\n        // end of events.\n\n        if (!next && !iter) {\n          // there are no more iterators or rdates\n          this.complete = true;\n          break;\n        } // no next rule day or recurrence rule is first.\n\n\n        if (!next || iter && next.compare(iter.last) > 0) {\n          // must be cloned, recur will reuse the time element.\n          next = iter.last.clone(); // move to next so we can continue\n\n          iter.next();\n        } // if the ruleDate is still next increment it.\n\n\n        if (this.ruleDate === next) {\n          this._nextRuleDay();\n        }\n\n        this.last = next; // check the negative rules\n\n        if (this.exDate) {\n          compare = this.exDate.compare(this.last);\n\n          if (compare < 0) {\n            this._nextExDay();\n          } // if the current rule is excluded skip it.\n\n\n          if (compare === 0) {\n            this._nextExDay();\n\n            continue;\n          }\n        } //XXX: The spec states that after we resolve the final\n        //     list of dates we execute exdate this seems somewhat counter\n        //     intuitive to what I have seen most servers do so for now\n        //     I exclude based on the original date not the one that may\n        //     have been modified by the exception.\n\n\n        return this.last;\n      }\n    },\n\n    /**\n     * Converts object into a serialize-able format. This format can be passed\n     * back into the expansion to resume iteration.\n     * @return {Object}\n     */\n    toJSON: function toJSON() {\n      function toJSON(item) {\n        return item.toJSON();\n      }\n\n      var result = Object.create(null);\n      result.ruleIterators = this.ruleIterators.map(toJSON);\n\n      if (this.ruleDates) {\n        result.ruleDates = this.ruleDates.map(toJSON);\n      }\n\n      if (this.exDates) {\n        result.exDates = this.exDates.map(toJSON);\n      }\n\n      result.ruleDateInc = this.ruleDateInc;\n      result.exDateInc = this.exDateInc;\n      result.last = this.last.toJSON();\n      result.dtstart = this.dtstart.toJSON();\n      result.complete = this.complete;\n      return result;\n    },\n\n    /**\n     * Extract all dates from the properties in the given component. The\n     * properties will be filtered by the property name.\n     *\n     * @private\n     * @param {ICAL.Component} component        The component to search in\n     * @param {String} propertyName             The property name to search for\n     * @return {ICAL.Time[]}                    The extracted dates.\n     */\n    _extractDates: function _extractDates(component, propertyName) {\n      function handleProp(prop) {\n        idx = ICAL.helpers.binsearchInsert(result, prop, compareTime); // ordered insert\n\n        result.splice(idx, 0, prop);\n      }\n\n      var result = [];\n      var props = component.getAllProperties(propertyName);\n      var len = props.length;\n      var i = 0;\n      var prop;\n      var idx;\n\n      for (; i < len; i++) {\n        props[i].getValues().forEach(handleProp);\n      }\n\n      return result;\n    },\n\n    /**\n     * Initialize the recurrence expansion.\n     *\n     * @private\n     * @param {ICAL.Component} component    The component to initialize from.\n     */\n    _init: function _init(component) {\n      this.ruleIterators = [];\n      this.last = this.dtstart.clone(); // to provide api consistency non-recurring\n      // events can also use the iterator though it will\n      // only return a single time.\n\n      if (!isRecurringComponent(component)) {\n        this.ruleDate = this.last.clone();\n        this.complete = true;\n        return;\n      }\n\n      if (component.hasProperty('rdate')) {\n        this.ruleDates = this._extractDates(component, 'rdate'); // special hack for cases where first rdate is prior\n        // to the start date. We only check for the first rdate.\n        // This is mostly for google's crazy recurring date logic\n        // (contacts birthdays).\n\n        if (this.ruleDates[0] && this.ruleDates[0].compare(this.dtstart) < 0) {\n          this.ruleDateInc = 0;\n          this.last = this.ruleDates[0].clone();\n        } else {\n          this.ruleDateInc = ICAL.helpers.binsearchInsert(this.ruleDates, this.last, compareTime);\n        }\n\n        this.ruleDate = this.ruleDates[this.ruleDateInc];\n      }\n\n      if (component.hasProperty('rrule')) {\n        var rules = component.getAllProperties('rrule');\n        var i = 0;\n        var len = rules.length;\n        var rule;\n        var iter;\n\n        for (; i < len; i++) {\n          rule = rules[i].getFirstValue();\n          iter = rule.iterator(this.dtstart);\n          this.ruleIterators.push(iter); // increment to the next occurrence so future\n          // calls to next return times beyond the initial iteration.\n          // XXX: I find this suspicious might be a bug?\n\n          iter.next();\n        }\n      }\n\n      if (component.hasProperty('exdate')) {\n        this.exDates = this._extractDates(component, 'exdate'); // if we have a .last day we increment the index to beyond it.\n\n        this.exDateInc = ICAL.helpers.binsearchInsert(this.exDates, this.last, compareTime);\n        this.exDate = this.exDates[this.exDateInc];\n      }\n    },\n\n    /**\n     * Advance to the next exdate\n     * @private\n     */\n    _nextExDay: function _nextExDay() {\n      this.exDate = this.exDates[++this.exDateInc];\n    },\n\n    /**\n     * Advance to the next rule date\n     * @private\n     */\n    _nextRuleDay: function _nextRuleDay() {\n      this.ruleDate = this.ruleDates[++this.ruleDateInc];\n    },\n\n    /**\n     * Find and return the recurrence rule with the most recent event and\n     * return it.\n     *\n     * @private\n     * @return {?ICAL.RecurIterator}    Found iterator.\n     */\n    _nextRecurrenceIter: function _nextRecurrenceIter() {\n      var iters = this.ruleIterators;\n\n      if (iters.length === 0) {\n        return null;\n      }\n\n      var len = iters.length;\n      var iter;\n      var iterTime;\n      var iterIdx = 0;\n      var chosenIter; // loop through each iterator\n\n      for (; iterIdx < len; iterIdx++) {\n        iter = iters[iterIdx];\n        iterTime = iter.last; // if iteration is complete\n        // then we must exclude it from\n        // the search and remove it.\n\n        if (iter.completed) {\n          len--;\n\n          if (iterIdx !== 0) {\n            iterIdx--;\n          }\n\n          iters.splice(iterIdx, 1);\n          continue;\n        } // find the most recent possible choice\n\n\n        if (!chosenIter || chosenIter.last.compare(iterTime) > 0) {\n          // that iterator is saved\n          chosenIter = iter;\n        }\n      } // the chosen iterator is returned but not mutated\n      // this iterator contains the most recent event.\n\n\n      return chosenIter;\n    }\n  };\n  return RecurExpansion;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.Event = function () {\n  /**\n   * @classdesc\n   * ICAL.js is organized into multiple layers. The bottom layer is a raw jCal\n   * object, followed by the component/property layer. The highest level is the\n   * event representation, which this class is part of. See the\n   * {@tutorial layers} guide for more details.\n   *\n   * @class\n   * @alias ICAL.Event\n   * @param {ICAL.Component=} component         The ICAL.Component to base this event on\n   * @param {Object} options                    Options for this event\n   * @param {Boolean} options.strictExceptions\n   *          When true, will verify exceptions are related by their UUID\n   * @param {Array<ICAL.Component|ICAL.Event>} options.exceptions\n   *          Exceptions to this event, either as components or events\n   */\n  function Event(component, options) {\n    if (!(component instanceof ICAL.Component)) {\n      options = component;\n      component = null;\n    }\n\n    if (component) {\n      this.component = component;\n    } else {\n      this.component = new ICAL.Component('vevent');\n    }\n\n    this._rangeExceptionCache = Object.create(null);\n    this.exceptions = Object.create(null);\n    this.rangeExceptions = [];\n\n    if (options && options.strictExceptions) {\n      this.strictExceptions = options.strictExceptions;\n    }\n\n    if (options && options.exceptions) {\n      options.exceptions.forEach(this.relateException, this);\n    }\n  }\n\n  Event.prototype = {\n    THISANDFUTURE: 'THISANDFUTURE',\n\n    /**\n     * List of related event exceptions.\n     *\n     * @type {ICAL.Event[]}\n     */\n    exceptions: null,\n\n    /**\n     * When true, will verify exceptions are related by their UUID.\n     *\n     * @type {Boolean}\n     */\n    strictExceptions: false,\n\n    /**\n     * Relates a given event exception to this object.  If the given component\n     * does not share the UID of this event it cannot be related and will throw\n     * an exception.\n     *\n     * If this component is an exception it cannot have other exceptions\n     * related to it.\n     *\n     * @param {ICAL.Component|ICAL.Event} obj       Component or event\n     */\n    relateException: function relateException(obj) {\n      if (this.isRecurrenceException()) {\n        throw new Error('cannot relate exception to exceptions');\n      }\n\n      if (obj instanceof ICAL.Component) {\n        obj = new ICAL.Event(obj);\n      }\n\n      if (this.strictExceptions && obj.uid !== this.uid) {\n        throw new Error('attempted to relate unrelated exception');\n      }\n\n      var id = obj.recurrenceId.toString(); // we don't sort or manage exceptions directly\n      // here the recurrence expander handles that.\n\n      this.exceptions[id] = obj; // index RANGE=THISANDFUTURE exceptions so we can\n      // look them up later in getOccurrenceDetails.\n\n      if (obj.modifiesFuture()) {\n        var item = [obj.recurrenceId.toUnixTime(), id]; // we keep them sorted so we can find the nearest\n        // value later on...\n\n        var idx = ICAL.helpers.binsearchInsert(this.rangeExceptions, item, compareRangeException);\n        this.rangeExceptions.splice(idx, 0, item);\n      }\n    },\n\n    /**\n     * Checks if this record is an exception and has the RANGE=THISANDFUTURE\n     * value.\n     *\n     * @return {Boolean}        True, when exception is within range\n     */\n    modifiesFuture: function modifiesFuture() {\n      var range = this.component.getFirstPropertyValue('range');\n      return range === this.THISANDFUTURE;\n    },\n\n    /**\n     * Finds the range exception nearest to the given date.\n     *\n     * @param {ICAL.Time} time usually an occurrence time of an event\n     * @return {?ICAL.Event} the related event/exception or null\n     */\n    findRangeException: function findRangeException(time) {\n      if (!this.rangeExceptions.length) {\n        return null;\n      }\n\n      var utc = time.toUnixTime();\n      var idx = ICAL.helpers.binsearchInsert(this.rangeExceptions, [utc], compareRangeException);\n      idx -= 1; // occurs before\n\n      if (idx < 0) {\n        return null;\n      }\n\n      var rangeItem = this.rangeExceptions[idx];\n      /* istanbul ignore next: sanity check only */\n\n      if (utc < rangeItem[0]) {\n        return null;\n      }\n\n      return rangeItem[1];\n    },\n\n    /**\n     * This object is returned by {@link ICAL.Event#getOccurrenceDetails getOccurrenceDetails}\n     *\n     * @typedef {Object} occurrenceDetails\n     * @memberof ICAL.Event\n     * @property {ICAL.Time} recurrenceId       The passed in recurrence id\n     * @property {ICAL.Event} item              The occurrence\n     * @property {ICAL.Time} startDate          The start of the occurrence\n     * @property {ICAL.Time} endDate            The end of the occurrence\n     */\n\n    /**\n     * Returns the occurrence details based on its start time.  If the\n     * occurrence has an exception will return the details for that exception.\n     *\n     * NOTE: this method is intend to be used in conjunction\n     *       with the {@link ICAL.Event#iterator iterator} method.\n     *\n     * @param {ICAL.Time} occurrence time occurrence\n     * @return {ICAL.Event.occurrenceDetails} Information about the occurrence\n     */\n    getOccurrenceDetails: function getOccurrenceDetails(occurrence) {\n      var id = occurrence.toString();\n      var utcId = occurrence.convertToZone(ICAL.Timezone.utcTimezone).toString();\n      var item;\n      var result = {\n        //XXX: Clone?\n        recurrenceId: occurrence\n      };\n\n      if (id in this.exceptions) {\n        item = result.item = this.exceptions[id];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else if (utcId in this.exceptions) {\n        item = this.exceptions[utcId];\n        result.startDate = item.startDate;\n        result.endDate = item.endDate;\n        result.item = item;\n      } else {\n        // range exceptions (RANGE=THISANDFUTURE) have a\n        // lower priority then direct exceptions but\n        // must be accounted for first. Their item is\n        // always the first exception with the range prop.\n        var rangeExceptionId = this.findRangeException(occurrence);\n        var end;\n\n        if (rangeExceptionId) {\n          var exception = this.exceptions[rangeExceptionId]; // range exception must modify standard time\n          // by the difference (if any) in start/end times.\n\n          result.item = exception;\n          var startDiff = this._rangeExceptionCache[rangeExceptionId];\n\n          if (!startDiff) {\n            var original = exception.recurrenceId.clone();\n            var newStart = exception.startDate.clone(); // zones must be same otherwise subtract may be incorrect.\n\n            original.zone = newStart.zone;\n            startDiff = newStart.subtractDate(original);\n            this._rangeExceptionCache[rangeExceptionId] = startDiff;\n          }\n\n          var start = occurrence.clone();\n          start.zone = exception.startDate.zone;\n          start.addDuration(startDiff);\n          end = start.clone();\n          end.addDuration(exception.duration);\n          result.startDate = start;\n          result.endDate = end;\n        } else {\n          // no range exception standard expansion\n          end = occurrence.clone();\n          end.addDuration(this.duration);\n          result.endDate = end;\n          result.startDate = occurrence;\n          result.item = this;\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * Builds a recur expansion instance for a specific point in time (defaults\n     * to startDate).\n     *\n     * @param {ICAL.Time} startTime     Starting point for expansion\n     * @return {ICAL.RecurExpansion}    Expansion object\n     */\n    iterator: function iterator(startTime) {\n      return new ICAL.RecurExpansion({\n        component: this.component,\n        dtstart: startTime || this.startDate\n      });\n    },\n\n    /**\n     * Checks if the event is recurring\n     *\n     * @return {Boolean}        True, if event is recurring\n     */\n    isRecurring: function isRecurring() {\n      var comp = this.component;\n      return comp.hasProperty('rrule') || comp.hasProperty('rdate');\n    },\n\n    /**\n     * Checks if the event describes a recurrence exception. See\n     * {@tutorial terminology} for details.\n     *\n     * @return {Boolean}    True, if the even describes a recurrence exception\n     */\n    isRecurrenceException: function isRecurrenceException() {\n      return this.component.hasProperty('recurrence-id');\n    },\n\n    /**\n     * Returns the types of recurrences this event may have.\n     *\n     * Returned as an object with the following possible keys:\n     *\n     *    - YEARLY\n     *    - MONTHLY\n     *    - WEEKLY\n     *    - DAILY\n     *    - MINUTELY\n     *    - SECONDLY\n     *\n     * @return {Object.<ICAL.Recur.frequencyValues, Boolean>}\n     *          Object of recurrence flags\n     */\n    getRecurrenceTypes: function getRecurrenceTypes() {\n      var rules = this.component.getAllProperties('rrule');\n      var i = 0;\n      var len = rules.length;\n      var result = Object.create(null);\n\n      for (; i < len; i++) {\n        var value = rules[i].getFirstValue();\n        result[value.freq] = true;\n      }\n\n      return result;\n    },\n\n    /**\n     * The uid of this event\n     * @type {String}\n     */\n    get uid() {\n      return this._firstProp('uid');\n    },\n\n    set uid(value) {\n      this._setProp('uid', value);\n    },\n\n    /**\n     * The start date\n     * @type {ICAL.Time}\n     */\n    get startDate() {\n      return this._firstProp('dtstart');\n    },\n\n    set startDate(value) {\n      this._setTime('dtstart', value);\n    },\n\n    /**\n     * The end date. This can be the result directly from the property, or the\n     * end date calculated from start date and duration.\n     * @type {ICAL.Time}\n     */\n    get endDate() {\n      var endDate = this._firstProp('dtend');\n\n      if (!endDate) {\n        var duration = this._firstProp('duration');\n\n        endDate = this.startDate.clone();\n\n        if (duration) {\n          endDate.addDuration(duration);\n        } else if (endDate.isDate) {\n          endDate.day += 1;\n        }\n      }\n\n      return endDate;\n    },\n\n    set endDate(value) {\n      this._setTime('dtend', value);\n    },\n\n    /**\n     * The duration. This can be the result directly from the property, or the\n     * duration calculated from start date and end date.\n     * @type {ICAL.Duration}\n     * @readonly\n     */\n    get duration() {\n      var duration = this._firstProp('duration');\n\n      if (!duration) {\n        return this.endDate.subtractDate(this.startDate);\n      }\n\n      return duration;\n    },\n\n    /**\n     * The location of the event.\n     * @type {String}\n     */\n    get location() {\n      return this._firstProp('location');\n    },\n\n    set location(value) {\n      return this._setProp('location', value);\n    },\n\n    /**\n     * The attendees in the event\n     * @type {ICAL.Property[]}\n     * @readonly\n     */\n    get attendees() {\n      //XXX: This is way lame we should have a better\n      //     data structure for this later.\n      return this.component.getAllProperties('attendee');\n    },\n\n    /**\n     * The event summary\n     * @type {String}\n     */\n    get summary() {\n      return this._firstProp('summary');\n    },\n\n    set summary(value) {\n      this._setProp('summary', value);\n    },\n\n    /**\n     * The event description.\n     * @type {String}\n     */\n    get description() {\n      return this._firstProp('description');\n    },\n\n    set description(value) {\n      this._setProp('description', value);\n    },\n\n    /**\n     * The organizer value as an uri. In most cases this is a mailto: uri, but\n     * it can also be something else, like urn:uuid:...\n     * @type {String}\n     */\n    get organizer() {\n      return this._firstProp('organizer');\n    },\n\n    set organizer(value) {\n      this._setProp('organizer', value);\n    },\n\n    /**\n     * The sequence value for this event. Used for scheduling\n     * see {@tutorial terminology}.\n     * @type {Number}\n     */\n    get sequence() {\n      return this._firstProp('sequence');\n    },\n\n    set sequence(value) {\n      this._setProp('sequence', value);\n    },\n\n    /**\n     * The recurrence id for this event. See {@tutorial terminology} for details.\n     * @type {ICAL.Time}\n     */\n    get recurrenceId() {\n      return this._firstProp('recurrence-id');\n    },\n\n    set recurrenceId(value) {\n      this._setProp('recurrence-id', value);\n    },\n\n    /**\n     * Set/update a time property's value.\n     * This will also update the TZID of the property.\n     *\n     * TODO: this method handles the case where we are switching\n     * from a known timezone to an implied timezone (one without TZID).\n     * This does _not_ handle the case of moving between a known\n     *  (by TimezoneService) timezone to an unknown timezone...\n     *\n     * We will not add/remove/update the VTIMEZONE subcomponents\n     *  leading to invalid ICAL data...\n     * @private\n     * @param {String} propName     The property name\n     * @param {ICAL.Time} time      The time to set\n     */\n    _setTime: function _setTime(propName, time) {\n      var prop = this.component.getFirstProperty(propName);\n\n      if (!prop) {\n        prop = new ICAL.Property(propName);\n        this.component.addProperty(prop);\n      } // utc and local don't get a tzid\n\n\n      if (time.zone === ICAL.Timezone.localTimezone || time.zone === ICAL.Timezone.utcTimezone) {\n        // remove the tzid\n        prop.removeParameter('tzid');\n      } else {\n        prop.setParameter('tzid', time.zone.tzid);\n      }\n\n      prop.setValue(time);\n    },\n    _setProp: function _setProp(name, value) {\n      this.component.updatePropertyWithValue(name, value);\n    },\n    _firstProp: function _firstProp(name) {\n      return this.component.getFirstPropertyValue(name);\n    },\n\n    /**\n     * The string representation of this event.\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.component.toString();\n    }\n  };\n\n  function compareRangeException(a, b) {\n    if (a[0] > b[0]) return 1;\n    if (b[0] > a[0]) return -1;\n    return 0;\n  }\n\n  return Event;\n}();\n/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at http://mozilla.org/MPL/2.0/.\n * Portions Copyright (C) Philipp Kewisch, 2011-2015 */\n\n/**\n * This symbol is further described later on\n * @ignore\n */\n\n\nICAL.ComponentParser = function () {\n  /**\n   * @classdesc\n   * The ComponentParser is used to process a String or jCal Object,\n   * firing callbacks for various found components, as well as completion.\n   *\n   * @example\n   * var options = {\n   *   // when false no events will be emitted for type\n   *   parseEvent: true,\n   *   parseTimezone: true\n   * };\n   *\n   * var parser = new ICAL.ComponentParser(options);\n   *\n   * parser.onevent(eventComponent) {\n   *   //...\n   * }\n   *\n   * // ontimezone, etc...\n   *\n   * parser.oncomplete = function() {\n   *\n   * };\n   *\n   * parser.process(stringOrComponent);\n   *\n   * @class\n   * @alias ICAL.ComponentParser\n   * @param {Object=} options        Component parser options\n   * @param {Boolean} options.parseEvent        Whether events should be parsed\n   * @param {Boolean} options.parseTimezeone    Whether timezones should be parsed\n   */\n  function ComponentParser(options) {\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n\n    var key;\n\n    for (key in options) {\n      /* istanbul ignore else */\n      if (options.hasOwnProperty(key)) {\n        this[key] = options[key];\n      }\n    }\n  }\n\n  ComponentParser.prototype = {\n    /**\n     * When true, parse events\n     *\n     * @type {Boolean}\n     */\n    parseEvent: true,\n\n    /**\n     * When true, parse timezones\n     *\n     * @type {Boolean}\n     */\n    parseTimezone: true,\n\n    /* SAX like events here for reference */\n\n    /**\n     * Fired when parsing is complete\n     * @callback\n     */\n    oncomplete:\n    /* istanbul ignore next */\n    function oncomplete() {},\n\n    /**\n     * Fired if an error occurs during parsing.\n     *\n     * @callback\n     * @param {Error} err details of error\n     */\n    onerror:\n    /* istanbul ignore next */\n    function onerror(err) {},\n\n    /**\n     * Fired when a top level component (VTIMEZONE) is found\n     *\n     * @callback\n     * @param {ICAL.Timezone} component     Timezone object\n     */\n    ontimezone:\n    /* istanbul ignore next */\n    function ontimezone(component) {},\n\n    /**\n     * Fired when a top level component (VEVENT) is found.\n     *\n     * @callback\n     * @param {ICAL.Event} component    Top level component\n     */\n    onevent:\n    /* istanbul ignore next */\n    function onevent(component) {},\n\n    /**\n     * Process a string or parse ical object.  This function itself will return\n     * nothing but will start the parsing process.\n     *\n     * Events must be registered prior to calling this method.\n     *\n     * @param {ICAL.Component|String|Object} ical      The component to process,\n     *        either in its final form, as a jCal Object, or string representation\n     */\n    process: function process(ical) {\n      //TODO: this is sync now in the future we will have a incremental parser.\n      if (typeof ical === 'string') {\n        ical = ICAL.parse(ical);\n      }\n\n      if (!(ical instanceof ICAL.Component)) {\n        ical = new ICAL.Component(ical);\n      }\n\n      var components = ical.getAllSubcomponents();\n      var i = 0;\n      var len = components.length;\n      var component;\n\n      for (; i < len; i++) {\n        component = components[i];\n\n        switch (component.name) {\n          case 'vtimezone':\n            if (this.parseTimezone) {\n              var tzid = component.getFirstPropertyValue('tzid');\n\n              if (tzid) {\n                this.ontimezone(new ICAL.Timezone({\n                  tzid: tzid,\n                  component: component\n                }));\n              }\n            }\n\n            break;\n\n          case 'vevent':\n            if (this.parseEvent) {\n              this.onevent(new ICAL.Event(component));\n            }\n\n            break;\n\n          default:\n            continue;\n        }\n      } //XXX: ideally we should do a \"nextTick\" here\n      //     so in all cases this is actually async.\n\n\n      this.oncomplete();\n    }\n  };\n  return ComponentParser;\n}();"],"sourceRoot":""}