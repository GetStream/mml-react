{"version":3,"sources":["webpack:///../src/components/Number.mdx"],"names":["_frontmatter","name","MML","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","of","Number","parentName","__position","__code","__scope","Playground","Props","source","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,2MAE5B,IAAsBC,EAKhBC,GALgBD,EAKI,MALI,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,2EAC5B,kBAASE,KAIZG,EAAc,CAClBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,UADR,UAGA,iIACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAQF,QAAQ,UAC3B,iBAAQ,CACN,GAAM,cADR,cAGA,uBAAK,gCAAMG,WAAW,OAAU,CAC5B,UAAa,iBADZ,4KAQL,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,6MAAsNC,SAAO,GAC9Pd,QACAK,kBACAU,eACAC,UACAN,YAL8P,gBAM9PL,IAN8P,EAO9PR,eAP8P,GAQ7PW,QAAQ,cACb,YAACT,EAAD,CAAKkB,OAAM,kMAMRT,QAAQ,e,yMAMbF,EAAWY,gBAAiB","file":"component---src-components-number-mdx-e843ab0189a6c3e96466.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/mml-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Number } from './Number.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst MML = makeShortcode(\"MML\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"number\"\n    }}>{`Number`}</h1>\n    <p>{`Easy input for numbers, mobile optimized. It automatically uses context`}{`[name]`}{` as the initial value`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Number} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"mml-string\"\n    }}>{`MML string`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<mml>\n  <text>How many donuts do you want for lunch?</text>\n  <number name=\"donuts\" value=\"3\" />\n  <button name=\"confirm\" value=\"Confirm\">Confirm</button>\n</mml>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<MML\\n  source={`\\n  <mml>\\n    <text>How many donuts do you want for lunch?</text>\\n    <number name=\\\"donuts\\\" value=\\\"3\\\" />\\n    <button name=\\\"confirm\\\" value=\\\"Confirm\\\">Confirm</button>\\n  </mml>\\n`}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Number,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n    <mml>\n      <text>How many donuts do you want for lunch?</text>\n      <number name=\"donuts\" value=\"3\" />\n      <button name=\"confirm\" value=\"Confirm\">Confirm</button>\n    </mml>\n  `} mdxType=\"MML\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}