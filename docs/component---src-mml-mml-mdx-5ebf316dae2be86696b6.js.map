{"version":3,"sources":["webpack:///../src/mml/MML.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","MML","__position","__code","__scope","Playground","Props","source","onSubmit","data","console","info","Error","error","style","color","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,iMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,kBAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,OADR,OAGA,iGACA,mHAAkG,iBAAGC,WAAW,IAC5G,KAAQ,0BACP,0BAAYA,WAAW,KAAvB,eAFL,KAGA,+HACA,kBACE,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAKH,QAAQ,UACxB,kBACE,GAAM,eADR,eAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,iCAAoCC,SAAO,GAC5EP,QACAH,kBACAW,eACAC,UACAL,SAL4E,gBAM5EP,IAN4E,EAO5EH,eAP4E,GAQ3EO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAO,gBAAgBT,QAAQ,SAElC,kBACE,GAAM,wCADR,wCAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,+QAA8RC,SAAO,GACtUP,QACAH,kBACAW,eACAC,UACAL,SALsU,gBAMtUP,IANsU,EAOtUH,eAPsU,GAQrUO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAM,oQAMNT,QAAQ,SAEX,kBACE,GAAM,oBADR,oBAGA,mFACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,2QAAwRC,SAAO,GAChUP,QACAH,kBACAW,eACAC,UACAL,SALgU,gBAMhUP,IANgU,EAOhUH,eAPgU,GAQ/TO,QAAQ,cACb,YAAC,IAAD,CAAKU,SAAU,SAAAC,GAAI,OAAIC,QAAQC,KAAKF,IAAOF,OAAM,qNAK5CT,QAAQ,SAEX,kBACE,GAAM,uBADR,uBAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,keAAmfC,SAAO,GAC3hBP,QACAH,kBACAW,eACAC,UACAL,SAL2hB,gBAM3hBP,IAN2hB,EAO3hBH,eAP2hB,GAQ1hBO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAM,+dAUNT,QAAQ,SAEX,kBACE,GAAM,KAER,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,keAAmfC,SAAO,GAC3hBP,QACAH,kBACAW,eACAC,UACAL,SAL2hB,gBAM3hBP,IAN2hB,EAO3hBH,eAP2hB,GAQ1hBO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAM,+dAUNT,QAAQ,SAEX,kBACE,GAAM,sBADR,sBAGA,sFACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,sHAAyHC,SAAO,GACjKP,QACAH,kBACAW,eACAC,UACAL,SALiK,gBAMjKP,IANiK,EAOjKH,eAPiK,GAQhKO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAO,yBAAyBK,MAAO,gBACtCC,EADsC,EACtCA,MADsC,OAElC,mBAAKC,MAAO,CAChBC,MAAO,QACLF,IAAcf,QAAQ,SAE5B,kBACE,GAAM,kBADR,QAEY,0BAAYC,WAAW,MAAvB,QAFZ,SAGA,6EAA4D,iBAAGA,WAAW,IACtE,KAAQ,gCACP,0BAAYA,WAAW,KAAvB,UAFuD,oBAA5D,yEAEyJ,0BAAYA,WAAW,KAAvB,mCAFzJ,KAGA,YAAC,IAAD,CAAYG,WAAY,EAAGC,OAAQ,kOAA+OC,SAAO,GACvRP,QACAH,kBACAW,eACAC,UACAL,SALuR,gBAMvRP,IANuR,EAOvRH,eAPuR,GAQtRO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAM,qNAKNT,QAAQ,e,+LAMfH,EAAWqB,gBAAiB","file":"component---src-mml-mml-mdx-5ebf316dae2be86696b6.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/mml-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MML } from './MML.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"mml\"\n    }}>{`MML`}</h1>\n    <p>{`This component accepts an MML string and renders it as React components.`}</p>\n    <p>{`If there are any stateful tag, it will gather all the inital states and and expose them in `}<a parentName=\"p\" {...{\n        \"href\": \"/mml-react/mml-context\"\n      }}><inlineCode parentName=\"a\">{`MMLContext`}</inlineCode></a>{`.`}</p>\n    <p>{`It also accepts custom convertor which allows you to exapand the default tags and add more compoennts.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={MML} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<MML source=\\\"<mml>hi</mml>\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source=\"<mml>hi</mml>\" mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-usage-with-stateful-components\"\n    }}>{`Basic usage with stateful components`}</h2>\n    <Playground __position={2} __code={'<MML\\n  source={`\\n    <mml name=\\\"windows_form\\\" type=\\\"card\\\">\\n      <image src=\\\"https://getstream.github.io/mml-react/public/window.jpg\\\" />\\n      <number name=\\\"windows\\\" value=\\\"12\\\" />\\n      <button name=\\\"confirm\\\" value=\\\"Confirm\\\">Confirm</button>\\n    </mml>\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n      <mml name=\"windows_form\" type=\"card\">\n        <image src=\"https://getstream.github.io/mml-react/public/window.jpg\" />\n        <number name=\"windows\" value=\"12\" />\n        <button name=\"confirm\" value=\"Confirm\">Confirm</button>\n      </mml>\n    `} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"callback-support\"\n    }}>{`Callback support`}</h2>\n    <p>{`If onSubmit callback return a promise, it will be awaited.`}</p>\n    <Playground __position={3} __code={'<MML\\n  onSubmit={data => console.info(data)}\\n  source={`\\n    <mml type=\\\"card\\\">\\n      <input name=\\\"answer\\\" label=\\\"Enter your phone number\\\" placeholder=\\\"e.g. 999-999-9999\\\"></input>\\n      <button name=\\\"action\\\" value=\\\"submit\\\">Submit</button>\\n    </mml>\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML onSubmit={data => console.info(data)} source={`\n      <mml type=\"card\">\n        <input name=\"answer\" label=\"Enter your phone number\" placeholder=\"e.g. 999-999-9999\"></input>\n        <button name=\"action\" value=\"submit\">Submit</button>\n      </mml>\n    `} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"different-use-cases\"\n    }}>{`Different use cases`}</h2>\n    <Playground __position={4} __code={'<MML\\n  source={`\\n    <mml>\\n      <text>Hi Jack, I\\'m painting John\\'s house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\\n      <button_list>\\n        <button name=\\\"time\\\" value=\\\"9:30\\\">9:30</button>\\n        <button name=\\\"time\\\" value=\\\"10:00\\\">10:00</button>\\n        <button name=\\\"time\\\" value=\\\"11:30\\\">11:30</button>\\n        <button name=\\\"cancel\\\" value=\\\"cancel\\\">Cancel</button>\\n      </button_list>\\n    </mml>\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n      <mml>\n        <text>Hi Jack, I'm painting John's house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\n        <button_list>\n          <button name=\"time\" value=\"9:30\">9:30</button>\n          <button name=\"time\" value=\"10:00\">10:00</button>\n          <button name=\"time\" value=\"11:30\">11:30</button>\n          <button name=\"cancel\" value=\"cancel\">Cancel</button>\n        </button_list>\n      </mml>\n    `} mdxType=\"MML\" />\n    </Playground>\n    <h3 {...{\n      \"id\": \"\"\n    }}></h3>\n    <Playground __position={5} __code={'<MML\\n  source={`\\n    <mml>\\n      <text>Hi Jack, I\\'m painting John\\'s house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\\n      <button_list>\\n        <button name=\\\"time\\\" value=\\\"9:30\\\">9:30</button>\\n        <button name=\\\"time\\\" value=\\\"10:00\\\">10:00</button>\\n        <button name=\\\"time\\\" value=\\\"11:30\\\">11:30</button>\\n        <button name=\\\"cancel\\\" value=\\\"cancel\\\">Cancel</button>\\n      </button_list>\\n    </mml>\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n      <mml>\n        <text>Hi Jack, I'm painting John's house, looks like they also need some plumbing work, do any of these times work for you on Saturday?</text>\n        <button_list>\n          <button name=\"time\" value=\"9:30\">9:30</button>\n          <button name=\"time\" value=\"10:00\">10:00</button>\n          <button name=\"time\" value=\"11:30\">11:30</button>\n          <button name=\"cancel\" value=\"cancel\">Cancel</button>\n        </button_list>\n      </mml>\n    `} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"invalid-mml-string\"\n    }}>{`Invalid MML string`}</h2>\n    <p>{`In case of an error, you can override default Error component`}</p>\n    <Playground __position={6} __code={'<MML\\n  source=\\\"<mml><invalid /></mml>\\\"\\n  Error={({ error }) => <div style={{ color: \\'red\\' }}>{error}</div>}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source=\"<mml><invalid /></mml>\" Error={({\n        error\n      }) => <div style={{\n        color: 'red'\n      }}>{error}</div>} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-card-type\"\n    }}>{`With `}<inlineCode parentName=\"h2\">{`card`}</inlineCode>{` type`}</h2>\n    <p>{`Shows the mml content inside a card like UI, see the `}<a parentName=\"p\" {...{\n        \"href\": \"/mml-react/components/number\"\n      }}><inlineCode parentName=\"a\">{`Number`}</inlineCode>{` component usage`}</a>{` as a further example. It automatically wraps the mml components in a `}<inlineCode parentName=\"p\">{`<div class=\"mml-card\">...</div>`}</inlineCode>{`.`}</p>\n    <Playground __position={7} __code={'<MML\\n  source={`\\n    <mml type=\\\"card\\\">\\n      <input name=\\\"answer\\\" label=\\\"Enter your phone number\\\" placeholder=\\\"e.g. 999-999-9999\\\"></input>\\n      <button name=\\\"action\\\" value=\\\"submit\\\">Submit</button>\\n    </mml>\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n      <mml type=\"card\">\n        <input name=\"answer\" label=\"Enter your phone number\" placeholder=\"e.g. 999-999-9999\"></input>\n        <button name=\"action\" value=\"submit\">Submit</button>\n      </mml>\n    `} mdxType=\"MML\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}