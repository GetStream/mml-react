{"version":3,"sources":["webpack:///../src/components/MD.mdx"],"names":["_frontmatter","name","MML","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","of","MD","parentName","__position","__code","__scope","Playground","Props","source","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,uMAE5B,IAAsBC,EAKhBC,GALgBD,EAKI,MALI,SAA6BE,GAEzD,OADAC,QAAQC,KAAK,aAAeJ,EAAO,2EAC5B,kBAASE,KAIZG,EAAc,CAClBN,gBAEIO,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGP,EACF,8BACD,OAAO,YAACI,EAAD,eAAeD,EAAiBH,EAAhC,CAAuCO,WAAYA,EAAYC,QAAQ,cAI5E,iBAAQ,CACN,GAAM,MADR,MAGA,oFACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAIF,QAAQ,UACvB,iBAAQ,CACN,GAAM,cADR,cAGA,uBAAK,gCAAMG,WAAW,OAAU,CAC5B,UAAa,iBADZ,yLAML,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,sNAAuNC,SAAO,GAC/Pd,QACAK,kBACAU,eACAC,UACAN,QAL+P,gBAM/PL,IAN+P,EAO/PR,eAP+P,GAQ9PW,QAAQ,cACb,YAACT,EAAD,CAAKkB,OAAM,uMAIRT,QAAQ,SAET,iBAAQ,CACN,GAAM,2BADR,2BAGA,qBAAG,kBAAIG,WAAW,KAAf,aAAiC,0BAAYA,WAAW,MAAvB,OAAjC,mDAAH,KACA,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,wtBAAytBC,SAAO,GACjwBd,QACAK,kBACAU,eACAC,UACAN,QALiwB,gBAMjwBL,IANiwB,EAOjwBR,eAPiwB,GAQhwBW,QAAQ,cACb,YAACT,EAAD,CAAKkB,OAAM,grBAwBRT,QAAQ,e,qMAMbF,EAAWY,gBAAiB","file":"component---src-components-md-mdx-180cdaba60c580972797.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/mml-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MD } from './MD.tsx';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst MML = makeShortcode(\"MML\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"md\"\n    }}>{`MD`}</h1>\n    <p>{`Allows to render markdown content within an mml attachment.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={MD} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"mml-string\"\n    }}>{`MML string`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-xml\"\n      }}>{`<mml>\n  <md>hello **world** and #hi. Note how not all markdown functions are allowed. [GetStream](https://getstream.io/react-native-activity-feed/tutorial/) is nice</md>\n</mml>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<MML\\n  source={`\\n  <mml>\\n    <md>hello **world** and #hi. Note how not all markdown functions are allowed. [GetStream](https://getstream.io/react-native-activity-feed/tutorial/) is nice</md>\\n  </mml>\\n`}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MD,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n    <mml>\n      <md>hello **world** and #hi. Note how not all markdown functions are allowed. [GetStream](https://getstream.io/react-native-activity-feed/tutorial/) is nice</md>\n    </mml>\n  `} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-a-lot-of-rich-text\"\n    }}>{`With a lot of rich text`}</h2>\n    <p><em parentName=\"p\">{`Note that `}<inlineCode parentName=\"em\">{`\\\\n`}</inlineCode>{` are only here for this live playground example`}</em>{`.`}</p>\n    <Playground __position={2} __code={'<MML\\n    source={`\\n    <mml>\\n      <md>*Markdown*\\n> A blockquote with some nice thinking and a [link to GetStream](https://getstream.io/react-native-activity-feed/tutorial/)\\n\\\\n\\n**Code**\\\\n\\nSome \\\\`inline code\\\\` and some\\\\n\\n    &lt;code&gt;self-referential code&lt;/code&gt;\\n\\\\n\\n**Unordered lists**\\n- Create a list by starting a line with \\\\`-\\\\`\\n- Sub-lists are made by indenting 2 spaces:\\n  - Ac tristique libero volutpat at\\n  - Facilisis in pretium nisl aliquet\\n  - Nulla volutpat aliquam velit\\n- Very easy!\\n\\\\n\\n**Ordered lists**\\n1. Lorem ipsum dolor sit amet\\n2. Consectetur adipiscing elit\\n3. Integer molestie lorem at massa\\n1. You can use sequential numbers...\\n      </md>\\n    </mml>\\n  `}\\n  />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MD,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n    <mml>\n      <md>*Markdown*\n> A blockquote with some nice thinking and a [link to GetStream](https://getstream.io/react-native-activity-feed/tutorial/)\n\\n\n**Code**\\n\nSome \\`inline code\\` and some\\n\n    &lt;code&gt;self-referential code&lt;/code&gt;\n\\n\n**Unordered lists**\n- Create a list by starting a line with \\`-\\`\n- Sub-lists are made by indenting 2 spaces:\n  - Ac tristique libero volutpat at\n  - Facilisis in pretium nisl aliquet\n  - Nulla volutpat aliquam velit\n- Very easy!\n\\n\n**Ordered lists**\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n1. You can use sequential numbers...\n      </md>\n    </mml>\n  `} mdxType=\"MML\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}