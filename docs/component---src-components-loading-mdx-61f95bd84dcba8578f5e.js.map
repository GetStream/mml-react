{"version":3,"sources":["webpack:///../src/components/Loading.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","Loading","__position","__code","__scope","Playground","Props","loading","text","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,4MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,QAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,WADR,WAGA,uLAAsK,0BAAYC,WAAW,KAAvB,gBAAtK,qDACA,8BACE,iBAAGA,WAAW,cAAd,oCAAgE,0BAAYA,WAAW,KAAvB,OAAhE,8GAEF,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAASH,QAAQ,UAC5B,iBAAQ,CACN,GAAM,eADR,eAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,6BAA8BC,SAAO,GACtEP,QACAH,kBACAW,eACAC,UACAL,aALsE,gBAMtEP,IANsE,EAOtEH,eAPsE,GAQrEO,QAAQ,cACb,YAAC,IAAD,CAASS,SAAS,EAAMT,QAAQ,aAE9B,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,mDAAsDC,SAAO,GAC9FP,QACAH,kBACAW,eACAC,UACAL,aAL8F,gBAM9FP,IAN8F,EAO9FH,eAP8F,GAQ7FO,QAAQ,cACb,YAAC,IAAD,CAASS,SAAS,EAAMC,KAAK,iBAAiBV,QAAQ,aAEpD,iBAAQ,CACN,GAAM,uBADR,uBAGA,mDAAkC,0BAAYC,WAAW,KAAvB,QAAlC,4FAA+K,0BAAYA,WAAW,KAAvB,QAA/K,0EACA,uBAAK,gCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,oS,0MAiBTJ,EAAWc,gBAAiB","file":"component---src-components-loading-mdx-61f95bd84dcba8578f5e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/mml-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { Loading } from './Loading.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"loading\"\n    }}>{`Loading`}</h1>\n    <p>{`Loading simply indicates a loading/pending state, you can use it to manage users expectations during async behaviours or waiting times. Internally it uses the `}<inlineCode parentName=\"p\">{`<Progress />`}</inlineCode>{` component to show a circular progress indicator.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\">{`This component is not exposed as `}<inlineCode parentName=\"p\">{`mml`}</inlineCode>{` string, it is used internally in other mml components and it can be imported to create your custom ones.`}</p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={Loading} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage\"\n    }}>{`Basic usage`}</h2>\n    <Playground __position={1} __code={'<Loading loading={true} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Loading,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Loading loading={true} mdxType=\"Loading\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"with-text\"\n    }}>{`With text`}</h2>\n    <Playground __position={2} __code={'<Loading loading={true} text=\\\"Please wait...\\\" />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Loading,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <Loading loading={true} text=\"Please wait...\" mdxType=\"Loading\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"style-customization\"\n    }}>{`Style customization`}</h2>\n    <p>{`If your projects include a `}<inlineCode parentName=\"p\">{`sass`}</inlineCode>{` compilation step you might customize the overall look and feel of the component through `}<inlineCode parentName=\"p\">{`scss`}</inlineCode>{` variables, here are all the available ones with their default values:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-scss\"\n      }}>{`// Loading:\n$mml-loading-spacer: $mml-spacer;\n$mml-loading-font-size: 88%;\n\n// Progress:\n$mml-progress-width: 1em;\n$mml-progress-color: #bbb;\n$mml-progress-animation-name: mml-animation-dash;\n$mml-progress-animation-time: 1.4s;\n$mml-progress-animation-ease: ease-in-out;\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}