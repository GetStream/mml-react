{"version":3,"sources":["webpack:///../src/components/MML.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","of","MML","__position","__code","__scope","Playground","Props","source","onSubmit","data","console","info","Error","error","isMDXComponent"],"mappings":"gRAUaA,G,UAAe,S,wMAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,YAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,OADR,OAGA,+FACA,mHAAkG,6BAAGC,WAAW,KAAQ,CACpH,KAAQ,2BACP,0BAAYA,WAAW,KAAvB,eAFL,KAGA,+HACA,iBAAQ,CACN,GAAM,cADR,cAGA,YAAC,IAAD,CAAOC,GAAIC,IAAKH,QAAQ,UACxB,iBAAQ,CACN,GAAM,iCADR,iCAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,+CAAkDC,SAAO,GAC1FP,QACAH,kBACAW,eACAC,UACAL,SAL0F,gBAM1FP,IAN0F,EAO1FH,eAP0F,GAQzFO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAM,4BAA+BT,QAAQ,SAEhD,iBAAQ,CACN,GAAM,0BADR,0BAGA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,6GAAoHC,SAAO,GAC5JP,QACAH,kBACAW,eACAC,UACAL,SAL4J,gBAM5JP,IAN4J,EAO5JH,eAP4J,GAQ3JO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAM,8FAINT,QAAQ,SAEX,iBAAQ,CACN,GAAM,oBADR,oBAGA,mFACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,wKAA6KC,SAAO,GACrNP,QACAH,kBACAW,eACAC,UACAL,SALqN,gBAMrNP,IANqN,EAOrNH,eAPqN,GAQpNO,QAAQ,cACb,YAAC,IAAD,CAAKU,SAAU,SAAAC,GAAI,OAAIC,QAAQC,KAAKF,IAAOF,OAAM,kHAK5CT,QAAQ,SAEX,iBAAQ,CACN,GAAM,sBADR,sBAGA,sFACA,YAAC,IAAD,CAAYI,WAAY,EAAGC,OAAQ,yEAA4EC,SAAO,GACpHP,QACAH,kBACAW,eACAC,UACAL,SALoH,gBAMpHP,IANoH,EAOpHH,eAPoH,GAQnHO,QAAQ,cACb,YAAC,IAAD,CAAKS,OAAO,cAAcK,MAAO,gBAC3BC,EAD2B,EAC3BA,MAD2B,OAEvB,uBAAMA,IAAcf,QAAQ,e,sMAMxCH,EAAWmB,gBAAiB","file":"component---src-components-mml-mdx-c29e39f791afacb09980.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/amin/Stream/mml-react/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from 'docz';\nimport { MML } from './MML.tsx';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"mml\"\n    }}>{`MML`}</h1>\n    <p>{`This component accepts a mml string and render it as react components.`}</p>\n    <p>{`If there are any stateful tag, it will gather all the inital states and and expose them in `}<a parentName=\"p\" {...{\n        \"href\": \"/mml-react/mml-context\"\n      }}><inlineCode parentName=\"a\">{`MMLContext`}</inlineCode></a>{`.`}</p>\n    <p>{`It also accepts custom convertor which allows you to exapand the default tags and add more compoennts.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <Props of={MML} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"basic-usage-without-any-state\"\n    }}>{`Basic usage without any state`}</h2>\n    <Playground __position={1} __code={'<MML source={`<mml name=\\\"text\\\">hi</mml>`} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`<mml name=\"text\">hi</mml>`} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"basic-usage-with-state\"\n    }}>{`Basic usage with state`}</h2>\n    <Playground __position={2} __code={'<MML\\n  source={`\\n    <mml name=\\\"counts\\\">\\n      <number name=\\\"donuts\\\" value=\\\"3\\\" />\\n    </mml>\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source={`\n      <mml name=\"counts\">\n        <number name=\"donuts\" value=\"3\" />\n      </mml>\n    `} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"callback-support\"\n    }}>{`Callback support`}</h2>\n    <p>{`if onSubmit callback return a promise, it will be awaited.`}</p>\n    <Playground __position={3} __code={'<MML\\n  onSubmit={data => console.info(data)}\\n  source={`\\n    <mml>\\n      <input name=\\\"answer\\\" value=\\\"42\\\" />\\n      <button>Confirm</button>\\n    </mml>\\n  `}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML onSubmit={data => console.info(data)} source={`\n      <mml>\n        <input name=\"answer\" value=\"42\" />\n        <button>Confirm</button>\n      </mml>\n    `} mdxType=\"MML\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"invalid-mml-string\"\n    }}>{`Invalid MML string`}</h2>\n    <p>{`In case of an error, you can override default Error component`}</p>\n    <Playground __position={4} __code={'<MML source=\\\"<invalid />\\\" Error={({ error }) => <div>{error}</div>} />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      MML,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  <MML source=\"<invalid />\" Error={({\n        error\n      }) => <div>{error}</div>} mdxType=\"MML\" />\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}