@mixin mml-row($gutter: $mml-grid-gutter) {
  display: flex;
  flex-wrap: wrap;
  @if $gutter {
    margin-right: -$gutter / 2;
    margin-left: -$gutter / 2;
  }
}

@mixin mml-col-ready($gutter: $mml-grid-gutter) {
  position: relative;
  width: 100%;
  @if $gutter {
    padding-right: $gutter / 2;
    padding-left: $gutter / 2;
  }
}

@mixin mml-col($size, $columns: $mml-grid-columns) {
  flex: 0 0 percentage($size / $columns);
  max-width: percentage($size / $columns);
}

@mixin mml-col-auto() {
  flex: 0 0 auto;
  width: auto;
  max-width: 100%;
}

@mixin mml-col-offset($size, $columns: $mml-grid-columns) {
  $num: $size / $columns;
  margin-left: if($num == 0, 0, percentage($num));
}

@mixin mml-grid-columns(
  $columns: $mml-grid-columns,
  $gutter: $mml-grid-gutter,
  $breakpoints: $mml-grid-breakpoints
) {
  %grid-column {
    position: relative;
    width: 100%;
    @if $gutter {
      padding-right: $gutter / 2;
      padding-left: $gutter / 2;
    }
  }

  @for $i from 1 through $columns {
    .#{$mml-prefix}col-#{$i} {
      @extend %grid-column;
      @include mml-col($i, $columns);
    }
  }

  .#{$mml-prefix}col-auto {
    @include mml-col-auto();
  }

  // `$columns - 1` because offsetting by the width of an entire row isn't possible
  @for $i from 0 through ($columns - 1) {
    @if not($i == 0) {
      // Avoid emitting useless .offset-0
      .#{$mml-prefix}offset-#{$i} {
        @include mml-col-offset($i, $columns);
      }
    }
  }
}
