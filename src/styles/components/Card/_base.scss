// an element with `.mml-card` class is by default add around the inner components
// when `<mml type="card">` is used. This same class is applied to the `Card`
// component which is used to wrap some structured components from the lib like
// Scheduler or AddToCalendar. Besides a card basic styling we need to account
// for the flexibility necessary to host and position various components inside
// an `<mml type="card">`.
@include mml-component('card') {
  width: 100%;

  // this composition happens for instance in the AddToCalendar component
  @include mml-component('btnlist') {
    font-size: $mml-card-body-font-size;
    border: 0;
  }

  // everything in the the middle of a card is considered to be card-body
  > *:not(:first-child):not(:last-child) {
    @include mml-themed(background, $mml-card-body-bg);
  }

  // a number will probably be used as immediate children of a <mml type="card">
  // and behaves as its body
  > #{mml-component('number')} {
    @include mml-card-body-borders();
  }

  // btn that are immediate children of a card get a consistent styling, a bit
  // like buttons in a btnlist
  > #{mml-component('btn')} {
    min-width: 100%;
    border-style: $mml-card-border-style;
    border-width: $mml-card-border-width;
    @include mml-themed(border-color, $mml-card-border-color);

    // the last button will get different contextual borders
    &:last-child {
      padding: $mml-card__btn-padding;
      border-radius: $mml-border-radius-base;

      @include mml-align-left() {
        border-bottom-right-radius: $mml-border-radius;
      }

      @include mml-align-right() {
        border-bottom-left-radius: $mml-border-radius;
      }
    }
  }
}
